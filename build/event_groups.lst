ARM GAS  /tmp/ccDnIGO0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"event_groups.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.xEventGroupCreateStatic,"ax",%progbits
  18              		.align	1
  19              		.global	xEventGroupCreateStatic
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	xEventGroupCreateStatic:
  26              	.LFB4:
  27              		.file 1 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c"
   1:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*
   2:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * FreeRTOS Kernel V10.0.1
   3:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
   5:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * subject to the following conditions:
  11:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  12:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * copies or substantial portions of the Software.
  14:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  15:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  22:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * http://www.FreeRTOS.org
  23:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * http://aws.amazon.com/freertos
  24:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  25:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * 1 tab == 4 spaces!
  26:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  */
  27:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  28:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Standard includes. */
  29:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include <stdlib.h>
  30:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  31:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/ccDnIGO0.s 			page 2


  32:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** task.h is included from an application file. */
  34:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  36:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* FreeRTOS includes. */
  37:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "FreeRTOS.h"
  38:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "task.h"
  39:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "timers.h"
  40:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "event_groups.h"
  41:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  42:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  43:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  44:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** header files above, but not in this file, in order to generate the correct
  45:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** privileged Vs unprivileged linkage and placement. */
  46:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  47:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  48:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  49:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** item value.  It is important they don't clash with the
  50:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  51:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  52:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  53:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  54:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  55:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  56:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #else
  57:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  58:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  59:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  60:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  61:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
  62:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  63:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** typedef struct xEventGroupDefinition
  64:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
  65:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventBits_t uxEventBits;
  66:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  67:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  68:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  69:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  70:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
  71:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  72:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  73:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  74:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
  75:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** } EventGroup_t;
  76:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  77:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
  78:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  79:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*
  80:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  81:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  82:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  83:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  84:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  85:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * in uxCurrentEventBits.
  86:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  */
  87:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
  88:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /tmp/ccDnIGO0.s 			page 3


  89:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
  90:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  91:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  92:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  93:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  94:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
  28              		.loc 1 94 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  95:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  96:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  97:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  98:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
  44              		.loc 1 98 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 09D1     		bne	.L2
  48              	.LBB36:
  49              	.LBB37:
  50              		.file 2 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  /tmp/ccDnIGO0.s 			page 4


  25:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
ARM GAS  /tmp/ccDnIGO0.s 			page 5


  82:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
ARM GAS  /tmp/ccDnIGO0.s 			page 6


 139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
ARM GAS  /tmp/ccDnIGO0.s 			page 7


  51              		.loc 2 195 0 discriminator 1
  52              		.syntax unified
  53              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  54 000e 4FF05003 			mov r3, #80												
  55 0012 83F31188 		msr basepri, r3											
  56 0016 BFF36F8F 		isb														
  57 001a BFF34F8F 		dsb														
  58              	
  59              	@ 0 "" 2
  60              		.thumb
  61              		.syntax unified
  62 001e 3B61     		str	r3, [r7, #16]
  63              	.L3:
  64              	.LBE37:
  65              	.LBE36:
  66              		.loc 1 98 0 discriminator 1
  67 0020 FEE7     		b	.L3
  68              	.L2:
  69              	.LBB38:
  99:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			event group structure. */
 105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
  70              		.loc 1 105 0
  71 0022 2023     		movs	r3, #32
  72 0024 BB60     		str	r3, [r7, #8]
 106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
  73              		.loc 1 106 0
  74 0026 BB68     		ldr	r3, [r7, #8]
  75 0028 202B     		cmp	r3, #32
  76 002a 09D0     		beq	.L4
  77              	.LBB39:
  78              	.LBB40:
  79              		.loc 2 195 0 discriminator 1
  80              		.syntax unified
  81              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  82 002c 4FF05003 			mov r3, #80												
  83 0030 83F31188 		msr basepri, r3											
  84 0034 BFF36F8F 		isb														
  85 0038 BFF34F8F 		dsb														
  86              	
  87              	@ 0 "" 2
  88              		.thumb
  89              		.syntax unified
  90 003c FB60     		str	r3, [r7, #12]
  91              	.L5:
  92              	.LBE40:
  93              	.LBE39:
  94              		.loc 1 106 0 discriminator 2
  95 003e FEE7     		b	.L5
  96              	.L4:
  97              	.LBE38:
 107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#endif /* configASSERT_DEFINED */
ARM GAS  /tmp/ccDnIGO0.s 			page 8


 109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 EventGroup_t and StaticEventGro
  98              		.loc 1 111 0
  99 0040 7B68     		ldr	r3, [r7, #4]
 100 0042 7B61     		str	r3, [r7, #20]
 112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 101              		.loc 1 113 0
 102 0044 7B69     		ldr	r3, [r7, #20]
 103 0046 002B     		cmp	r3, #0
 104 0048 0AD0     		beq	.L6
 114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 105              		.loc 1 115 0
 106 004a 7B69     		ldr	r3, [r7, #20]
 107 004c 0022     		movs	r2, #0
 108 004e 1A60     		str	r2, [r3]
 116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 109              		.loc 1 116 0
 110 0050 7B69     		ldr	r3, [r7, #20]
 111 0052 0433     		adds	r3, r3, #4
 112 0054 1846     		mov	r0, r3
 113 0056 FFF7FEFF 		bl	vListInitialise
 117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				this event group was created statically in case the event group
 122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				is later deleted. */
 123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 114              		.loc 1 123 0
 115 005a 7B69     		ldr	r3, [r7, #20]
 116 005c 0122     		movs	r2, #1
 117 005e 1A77     		strb	r2, [r3, #28]
 118              	.L6:
 124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 119              		.loc 1 134 0
 120 0060 7B69     		ldr	r3, [r7, #20]
 135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 121              		.loc 1 135 0
 122 0062 1846     		mov	r0, r3
 123 0064 1837     		adds	r7, r7, #24
 124              	.LCFI3:
 125              		.cfi_def_cfa_offset 8
 126 0066 BD46     		mov	sp, r7
 127              	.LCFI4:
ARM GAS  /tmp/ccDnIGO0.s 			page 9


 128              		.cfi_def_cfa_register 13
 129              		@ sp needed
 130 0068 80BD     		pop	{r7, pc}
 131              		.cfi_endproc
 132              	.LFE4:
 134              		.section	.text.xEventGroupCreate,"ax",%progbits
 135              		.align	1
 136              		.global	xEventGroupCreate
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	xEventGroupCreate:
 143              	.LFB5:
 136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 144              		.loc 1 143 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              	.LCFI5:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              	.LCFI6:
 155              		.cfi_def_cfa_offset 16
 156 0004 00AF     		add	r7, sp, #0
 157              	.LCFI7:
 158              		.cfi_def_cfa_register 7
 144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Allocate the event group. */
 147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) );
 159              		.loc 1 147 0
 160 0006 2020     		movs	r0, #32
 161 0008 FFF7FEFF 		bl	pvPortMalloc
 162 000c 7860     		str	r0, [r7, #4]
 148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 163              		.loc 1 149 0
 164 000e 7B68     		ldr	r3, [r7, #4]
 165 0010 002B     		cmp	r3, #0
 166 0012 0AD0     		beq	.L9
 150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 167              		.loc 1 151 0
 168 0014 7B68     		ldr	r3, [r7, #4]
 169 0016 0022     		movs	r2, #0
 170 0018 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccDnIGO0.s 			page 10


 152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 171              		.loc 1 152 0
 172 001a 7B68     		ldr	r3, [r7, #4]
 173 001c 0433     		adds	r3, r3, #4
 174 001e 1846     		mov	r0, r3
 175 0020 FFF7FEFF 		bl	vListInitialise
 153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				event group was allocated statically in case the event group is
 158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				later deleted. */
 159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 176              		.loc 1 159 0
 177 0024 7B68     		ldr	r3, [r7, #4]
 178 0026 0022     		movs	r2, #0
 179 0028 1A77     		strb	r2, [r3, #28]
 180              	.L9:
 160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 181              		.loc 1 170 0
 182 002a 7B68     		ldr	r3, [r7, #4]
 171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 183              		.loc 1 171 0
 184 002c 1846     		mov	r0, r3
 185 002e 0837     		adds	r7, r7, #8
 186              	.LCFI8:
 187              		.cfi_def_cfa_offset 8
 188 0030 BD46     		mov	sp, r7
 189              	.LCFI9:
 190              		.cfi_def_cfa_register 13
 191              		@ sp needed
 192 0032 80BD     		pop	{r7, pc}
 193              		.cfi_endproc
 194              	.LFE5:
 196              		.section	.text.xEventGroupSync,"ax",%progbits
 197              		.align	1
 198              		.global	xEventGroupSync
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv4-sp-d16
 204              	xEventGroupSync:
 205              	.LFB6:
 172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /tmp/ccDnIGO0.s 			page 11


 176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 206              		.loc 1 177 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 48
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 80B5     		push	{r7, lr}
 211              	.LCFI10:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 8CB0     		sub	sp, sp, #48
 216              	.LCFI11:
 217              		.cfi_def_cfa_offset 56
 218 0004 00AF     		add	r7, sp, #0
 219              	.LCFI12:
 220              		.cfi_def_cfa_register 7
 221 0006 F860     		str	r0, [r7, #12]
 222 0008 B960     		str	r1, [r7, #8]
 223 000a 7A60     		str	r2, [r7, #4]
 224 000c 3B60     		str	r3, [r7]
 178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 225              		.loc 1 179 0
 226 000e FB68     		ldr	r3, [r7, #12]
 227 0010 BB62     		str	r3, [r7, #40]
 180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xAlreadyYielded;
 181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 228              		.loc 1 181 0
 229 0012 0023     		movs	r3, #0
 230 0014 7B62     		str	r3, [r7, #36]
 182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 231              		.loc 1 183 0
 232 0016 7B68     		ldr	r3, [r7, #4]
 233 0018 03F07F43 		and	r3, r3, #-16777216
 234 001c 002B     		cmp	r3, #0
 235 001e 09D0     		beq	.L12
 236              	.LBB41:
 237              	.LBB42:
 238              		.loc 2 195 0 discriminator 1
 239              		.syntax unified
 240              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 241 0020 4FF05003 			mov r3, #80												
 242 0024 83F31188 		msr basepri, r3											
 243 0028 BFF36F8F 		isb														
 244 002c BFF34F8F 		dsb														
 245              	
 246              	@ 0 "" 2
 247              		.thumb
 248              		.syntax unified
 249 0030 BB61     		str	r3, [r7, #24]
 250              	.L13:
 251              	.LBE42:
 252              	.LBE41:
 253              		.loc 1 183 0 discriminator 1
 254 0032 FEE7     		b	.L13
ARM GAS  /tmp/ccDnIGO0.s 			page 12


 255              	.L12:
 184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 256              		.loc 1 184 0
 257 0034 7B68     		ldr	r3, [r7, #4]
 258 0036 002B     		cmp	r3, #0
 259 0038 09D1     		bne	.L14
 260              	.LBB43:
 261              	.LBB44:
 262              		.loc 2 195 0 discriminator 1
 263              		.syntax unified
 264              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 265 003a 4FF05003 			mov r3, #80												
 266 003e 83F31188 		msr basepri, r3											
 267 0042 BFF36F8F 		isb														
 268 0046 BFF34F8F 		dsb														
 269              	
 270              	@ 0 "" 2
 271              		.thumb
 272              		.syntax unified
 273 004a 7B61     		str	r3, [r7, #20]
 274              	.L15:
 275              	.LBE44:
 276              	.LBE43:
 277              		.loc 1 184 0 discriminator 2
 278 004c FEE7     		b	.L15
 279              	.L14:
 185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 280              		.loc 1 187 0
 281 004e FFF7FEFF 		bl	xTaskGetSchedulerState
 282 0052 0346     		mov	r3, r0
 283 0054 002B     		cmp	r3, #0
 284 0056 02D1     		bne	.L16
 285              		.loc 1 187 0 is_stmt 0 discriminator 2
 286 0058 3B68     		ldr	r3, [r7]
 287 005a 002B     		cmp	r3, #0
 288 005c 01D1     		bne	.L17
 289              	.L16:
 290              		.loc 1 187 0 discriminator 3
 291 005e 0123     		movs	r3, #1
 292 0060 00E0     		b	.L18
 293              	.L17:
 294              		.loc 1 187 0 discriminator 4
 295 0062 0023     		movs	r3, #0
 296              	.L18:
 297              		.loc 1 187 0 discriminator 6
 298 0064 002B     		cmp	r3, #0
 299 0066 09D1     		bne	.L19
 300              	.LBB45:
 301              	.LBB46:
 302              		.loc 2 195 0 is_stmt 1 discriminator 7
 303              		.syntax unified
 304              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 305 0068 4FF05003 			mov r3, #80												
 306 006c 83F31188 		msr basepri, r3											
 307 0070 BFF36F8F 		isb														
ARM GAS  /tmp/ccDnIGO0.s 			page 13


 308 0074 BFF34F8F 		dsb														
 309              	
 310              	@ 0 "" 2
 311              		.thumb
 312              		.syntax unified
 313 0078 3B61     		str	r3, [r7, #16]
 314              	.L20:
 315              	.LBE46:
 316              	.LBE45:
 317              		.loc 1 187 0 discriminator 3
 318 007a FEE7     		b	.L20
 319              	.L19:
 188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
 190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 320              		.loc 1 191 0
 321 007c FFF7FEFF 		bl	vTaskSuspendAll
 192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 322              		.loc 1 193 0
 323 0080 BB6A     		ldr	r3, [r7, #40]
 324 0082 1B68     		ldr	r3, [r3]
 325 0084 3B62     		str	r3, [r7, #32]
 194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 326              		.loc 1 195 0
 327 0086 B968     		ldr	r1, [r7, #8]
 328 0088 F868     		ldr	r0, [r7, #12]
 329 008a FFF7FEFF 		bl	xEventGroupSetBits
 196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 330              		.loc 1 197 0
 331 008e 3A6A     		ldr	r2, [r7, #32]
 332 0090 BB68     		ldr	r3, [r7, #8]
 333 0092 1A43     		orrs	r2, r2, r3
 334 0094 7B68     		ldr	r3, [r7, #4]
 335 0096 1340     		ands	r3, r3, r2
 336 0098 7A68     		ldr	r2, [r7, #4]
 337 009a 9A42     		cmp	r2, r3
 338 009c 0DD1     		bne	.L21
 198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 339              		.loc 1 200 0
 340 009e 3A6A     		ldr	r2, [r7, #32]
 341 00a0 BB68     		ldr	r3, [r7, #8]
 342 00a2 1343     		orrs	r3, r3, r2
 343 00a4 FB62     		str	r3, [r7, #44]
 201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			already unless this is the only task in the rendezvous. */
 204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 344              		.loc 1 204 0
 345 00a6 BB6A     		ldr	r3, [r7, #40]
 346 00a8 1A68     		ldr	r2, [r3]
 347 00aa 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccDnIGO0.s 			page 14


 348 00ac DB43     		mvns	r3, r3
 349 00ae 1A40     		ands	r2, r2, r3
 350 00b0 BB6A     		ldr	r3, [r7, #40]
 351 00b2 1A60     		str	r2, [r3]
 205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = 0;
 352              		.loc 1 206 0
 353 00b4 0023     		movs	r3, #0
 354 00b6 3B60     		str	r3, [r7]
 355 00b8 13E0     		b	.L22
 356              	.L21:
 207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 357              		.loc 1 210 0
 358 00ba 3B68     		ldr	r3, [r7]
 359 00bc 002B     		cmp	r3, #0
 360 00be 0BD0     		beq	.L23
 211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				task's event list item so the kernel knows when a match is
 216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				found.  Then enter the blocked state. */
 217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 361              		.loc 1 217 0
 362 00c0 BB6A     		ldr	r3, [r7, #40]
 363 00c2 181D     		adds	r0, r3, #4
 364 00c4 7B68     		ldr	r3, [r7, #4]
 365 00c6 43F0A063 		orr	r3, r3, #83886080
 366 00ca 3A68     		ldr	r2, [r7]
 367 00cc 1946     		mov	r1, r3
 368 00ce FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				warning about uxReturn being returned without being set if the
 222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				assignment is omitted. */
 223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = 0;
 369              		.loc 1 223 0
 370 00d2 0023     		movs	r3, #0
 371 00d4 FB62     		str	r3, [r7, #44]
 372 00d6 04E0     		b	.L22
 373              	.L23:
 224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				specified - just return the current event bit value. */
 229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 374              		.loc 1 229 0
 375 00d8 BB6A     		ldr	r3, [r7, #40]
 376 00da 1B68     		ldr	r3, [r3]
 377 00dc FB62     		str	r3, [r7, #44]
 230:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 378              		.loc 1 230 0
ARM GAS  /tmp/ccDnIGO0.s 			page 15


 379 00de 0123     		movs	r3, #1
 380 00e0 7B62     		str	r3, [r7, #36]
 381              	.L22:
 231:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 232:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 233:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 234:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 382              		.loc 1 234 0
 383 00e2 FFF7FEFF 		bl	xTaskResumeAll
 384 00e6 F861     		str	r0, [r7, #28]
 235:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 236:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 385              		.loc 1 236 0
 386 00e8 3B68     		ldr	r3, [r7]
 387 00ea 002B     		cmp	r3, #0
 388 00ec 2CD0     		beq	.L24
 237:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 238:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 389              		.loc 1 238 0
 390 00ee FB69     		ldr	r3, [r7, #28]
 391 00f0 002B     		cmp	r3, #0
 392 00f2 07D1     		bne	.L25
 239:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 240:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 393              		.loc 1 240 0
 394 00f4 174B     		ldr	r3, .L29
 395 00f6 4FF08052 		mov	r2, #268435456
 396 00fa 1A60     		str	r2, [r3]
 397              		.syntax unified
 398              	@ 240 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 399 00fc BFF34F8F 		dsb
 400              	@ 0 "" 2
 401              	@ 240 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 402 0100 BFF36F8F 		isb
 403              	@ 0 "" 2
 404              		.thumb
 405              		.syntax unified
 406              	.L25:
 241:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 242:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 243:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 244:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 245:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 246:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 247:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 248:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 249:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 250:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 251:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 407              		.loc 1 251 0
 408 0104 FFF7FEFF 		bl	uxTaskResetEventItemValue
 409 0108 F862     		str	r0, [r7, #44]
 252:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 253:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 410              		.loc 1 253 0
 411 010a FB6A     		ldr	r3, [r7, #44]
 412 010c 03F00073 		and	r3, r3, #33554432
ARM GAS  /tmp/ccDnIGO0.s 			page 16


 413 0110 002B     		cmp	r3, #0
 414 0112 15D1     		bne	.L26
 254:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 255:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 256:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 415              		.loc 1 256 0
 416 0114 FFF7FEFF 		bl	vPortEnterCritical
 257:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 258:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 417              		.loc 1 258 0
 418 0118 BB6A     		ldr	r3, [r7, #40]
 419 011a 1B68     		ldr	r3, [r3]
 420 011c FB62     		str	r3, [r7, #44]
 259:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 260:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Although the task got here because it timed out before the
 261:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 262:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 263:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				then it needs to clear the bits before exiting. */
 264:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 421              		.loc 1 264 0
 422 011e FA6A     		ldr	r2, [r7, #44]
 423 0120 7B68     		ldr	r3, [r7, #4]
 424 0122 1340     		ands	r3, r3, r2
 425 0124 7A68     		ldr	r2, [r7, #4]
 426 0126 9A42     		cmp	r2, r3
 427 0128 06D1     		bne	.L27
 265:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 266:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 428              		.loc 1 266 0
 429 012a BB6A     		ldr	r3, [r7, #40]
 430 012c 1A68     		ldr	r2, [r3]
 431 012e 7B68     		ldr	r3, [r7, #4]
 432 0130 DB43     		mvns	r3, r3
 433 0132 1A40     		ands	r2, r2, r3
 434 0134 BB6A     		ldr	r3, [r7, #40]
 435 0136 1A60     		str	r2, [r3]
 436              	.L27:
 267:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 268:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 269:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 270:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 271:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 272:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 273:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 437              		.loc 1 273 0
 438 0138 FFF7FEFF 		bl	vPortExitCritical
 274:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 275:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 439              		.loc 1 275 0
 440 013c 0123     		movs	r3, #1
 441 013e 7B62     		str	r3, [r7, #36]
 442              	.L26:
 276:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 277:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 278:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 279:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 280:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
ARM GAS  /tmp/ccDnIGO0.s 			page 17


 281:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 282:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 283:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		returned. */
 284:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 443              		.loc 1 284 0
 444 0140 FB6A     		ldr	r3, [r7, #44]
 445 0142 23F07F43 		bic	r3, r3, #-16777216
 446 0146 FB62     		str	r3, [r7, #44]
 447              	.L24:
 285:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 286:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 287:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 288:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 289:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 290:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 291:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 292:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 448              		.loc 1 292 0
 449 0148 FB6A     		ldr	r3, [r7, #44]
 293:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 450              		.loc 1 293 0
 451 014a 1846     		mov	r0, r3
 452 014c 3037     		adds	r7, r7, #48
 453              	.LCFI13:
 454              		.cfi_def_cfa_offset 8
 455 014e BD46     		mov	sp, r7
 456              	.LCFI14:
 457              		.cfi_def_cfa_register 13
 458              		@ sp needed
 459 0150 80BD     		pop	{r7, pc}
 460              	.L30:
 461 0152 00BF     		.align	2
 462              	.L29:
 463 0154 04ED00E0 		.word	-536810236
 464              		.cfi_endproc
 465              	.LFE6:
 467              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 468              		.align	1
 469              		.global	xEventGroupWaitBits
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv4-sp-d16
 475              	xEventGroupWaitBits:
 476              	.LFB7:
 294:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 295:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 296:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 297:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 477              		.loc 1 297 0
 478              		.cfi_startproc
 479              		@ args = 4, pretend = 0, frame = 64
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 80B5     		push	{r7, lr}
 482              	.LCFI15:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
ARM GAS  /tmp/ccDnIGO0.s 			page 18


 485              		.cfi_offset 14, -4
 486 0002 90B0     		sub	sp, sp, #64
 487              	.LCFI16:
 488              		.cfi_def_cfa_offset 72
 489 0004 00AF     		add	r7, sp, #0
 490              	.LCFI17:
 491              		.cfi_def_cfa_register 7
 492 0006 F860     		str	r0, [r7, #12]
 493 0008 B960     		str	r1, [r7, #8]
 494 000a 7A60     		str	r2, [r7, #4]
 495 000c 3B60     		str	r3, [r7]
 298:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 496              		.loc 1 298 0
 497 000e FB68     		ldr	r3, [r7, #12]
 498 0010 7B63     		str	r3, [r7, #52]
 299:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 499              		.loc 1 299 0
 500 0012 0023     		movs	r3, #0
 501 0014 BB63     		str	r3, [r7, #56]
 300:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 301:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 502              		.loc 1 301 0
 503 0016 0023     		movs	r3, #0
 504 0018 3B63     		str	r3, [r7, #48]
 302:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 303:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 304:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself, and that at least one bit is being requested. */
 305:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 505              		.loc 1 305 0
 506 001a FB68     		ldr	r3, [r7, #12]
 507 001c 002B     		cmp	r3, #0
 508 001e 09D1     		bne	.L32
 509              	.LBB47:
 510              	.LBB48:
 511              		.loc 2 195 0 discriminator 1
 512              		.syntax unified
 513              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 514 0020 4FF05003 			mov r3, #80												
 515 0024 83F31188 		msr basepri, r3											
 516 0028 BFF36F8F 		isb														
 517 002c BFF34F8F 		dsb														
 518              	
 519              	@ 0 "" 2
 520              		.thumb
 521              		.syntax unified
 522 0030 3B62     		str	r3, [r7, #32]
 523              	.L33:
 524              	.LBE48:
 525              	.LBE47:
 526              		.loc 1 305 0 discriminator 1
 527 0032 FEE7     		b	.L33
 528              	.L32:
 306:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 529              		.loc 1 306 0
 530 0034 BB68     		ldr	r3, [r7, #8]
 531 0036 03F07F43 		and	r3, r3, #-16777216
 532 003a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccDnIGO0.s 			page 19


 533 003c 09D0     		beq	.L34
 534              	.LBB49:
 535              	.LBB50:
 536              		.loc 2 195 0 discriminator 1
 537              		.syntax unified
 538              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 539 003e 4FF05003 			mov r3, #80												
 540 0042 83F31188 		msr basepri, r3											
 541 0046 BFF36F8F 		isb														
 542 004a BFF34F8F 		dsb														
 543              	
 544              	@ 0 "" 2
 545              		.thumb
 546              		.syntax unified
 547 004e FB61     		str	r3, [r7, #28]
 548              	.L35:
 549              	.LBE50:
 550              	.LBE49:
 551              		.loc 1 306 0 discriminator 2
 552 0050 FEE7     		b	.L35
 553              	.L34:
 307:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 554              		.loc 1 307 0
 555 0052 BB68     		ldr	r3, [r7, #8]
 556 0054 002B     		cmp	r3, #0
 557 0056 09D1     		bne	.L36
 558              	.LBB51:
 559              	.LBB52:
 560              		.loc 2 195 0 discriminator 1
 561              		.syntax unified
 562              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 563 0058 4FF05003 			mov r3, #80												
 564 005c 83F31188 		msr basepri, r3											
 565 0060 BFF36F8F 		isb														
 566 0064 BFF34F8F 		dsb														
 567              	
 568              	@ 0 "" 2
 569              		.thumb
 570              		.syntax unified
 571 0068 BB61     		str	r3, [r7, #24]
 572              	.L37:
 573              	.LBE52:
 574              	.LBE51:
 575              		.loc 1 307 0 discriminator 3
 576 006a FEE7     		b	.L37
 577              	.L36:
 308:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 309:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 310:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 578              		.loc 1 310 0
 579 006c FFF7FEFF 		bl	xTaskGetSchedulerState
 580 0070 0346     		mov	r3, r0
 581 0072 002B     		cmp	r3, #0
 582 0074 02D1     		bne	.L38
 583              		.loc 1 310 0 is_stmt 0 discriminator 2
 584 0076 BB6C     		ldr	r3, [r7, #72]
 585 0078 002B     		cmp	r3, #0
ARM GAS  /tmp/ccDnIGO0.s 			page 20


 586 007a 01D1     		bne	.L39
 587              	.L38:
 588              		.loc 1 310 0 discriminator 3
 589 007c 0123     		movs	r3, #1
 590 007e 00E0     		b	.L40
 591              	.L39:
 592              		.loc 1 310 0 discriminator 4
 593 0080 0023     		movs	r3, #0
 594              	.L40:
 595              		.loc 1 310 0 discriminator 6
 596 0082 002B     		cmp	r3, #0
 597 0084 09D1     		bne	.L41
 598              	.LBB53:
 599              	.LBB54:
 600              		.loc 2 195 0 is_stmt 1 discriminator 7
 601              		.syntax unified
 602              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 603 0086 4FF05003 			mov r3, #80												
 604 008a 83F31188 		msr basepri, r3											
 605 008e BFF36F8F 		isb														
 606 0092 BFF34F8F 		dsb														
 607              	
 608              	@ 0 "" 2
 609              		.thumb
 610              		.syntax unified
 611 0096 7B61     		str	r3, [r7, #20]
 612              	.L42:
 613              	.LBE54:
 614              	.LBE53:
 615              		.loc 1 310 0 discriminator 4
 616 0098 FEE7     		b	.L42
 617              	.L41:
 311:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 312:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
 313:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 314:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 618              		.loc 1 314 0
 619 009a FFF7FEFF 		bl	vTaskSuspendAll
 620              	.LBB55:
 315:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 316:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 621              		.loc 1 316 0
 622 009e 7B6B     		ldr	r3, [r7, #52]
 623 00a0 1B68     		ldr	r3, [r3]
 624 00a2 FB62     		str	r3, [r7, #44]
 317:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 318:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 319:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 625              		.loc 1 319 0
 626 00a4 3A68     		ldr	r2, [r7]
 627 00a6 B968     		ldr	r1, [r7, #8]
 628 00a8 F86A     		ldr	r0, [r7, #44]
 629 00aa FFF7FEFF 		bl	prvTestWaitCondition
 630 00ae B862     		str	r0, [r7, #40]
 320:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 321:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 631              		.loc 1 321 0
ARM GAS  /tmp/ccDnIGO0.s 			page 21


 632 00b0 BB6A     		ldr	r3, [r7, #40]
 633 00b2 002B     		cmp	r3, #0
 634 00b4 0ED0     		beq	.L43
 322:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 323:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 324:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			block. */
 325:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 635              		.loc 1 325 0
 636 00b6 FB6A     		ldr	r3, [r7, #44]
 637 00b8 FB63     		str	r3, [r7, #60]
 326:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 638              		.loc 1 326 0
 639 00ba 0023     		movs	r3, #0
 640 00bc BB64     		str	r3, [r7, #72]
 327:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 328:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 329:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 641              		.loc 1 329 0
 642 00be 7B68     		ldr	r3, [r7, #4]
 643 00c0 002B     		cmp	r3, #0
 644 00c2 28D0     		beq	.L44
 330:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 331:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 645              		.loc 1 331 0
 646 00c4 7B6B     		ldr	r3, [r7, #52]
 647 00c6 1A68     		ldr	r2, [r3]
 648 00c8 BB68     		ldr	r3, [r7, #8]
 649 00ca DB43     		mvns	r3, r3
 650 00cc 1A40     		ands	r2, r2, r3
 651 00ce 7B6B     		ldr	r3, [r7, #52]
 652 00d0 1A60     		str	r2, [r3]
 653 00d2 20E0     		b	.L44
 654              	.L43:
 332:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 333:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 334:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 335:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 336:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 337:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 338:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 655              		.loc 1 338 0
 656 00d4 BB6C     		ldr	r3, [r7, #72]
 657 00d6 002B     		cmp	r3, #0
 658 00d8 04D1     		bne	.L45
 339:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 340:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 341:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			specified, so just return the current value. */
 342:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 659              		.loc 1 342 0
 660 00da FB6A     		ldr	r3, [r7, #44]
 661 00dc FB63     		str	r3, [r7, #60]
 343:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 662              		.loc 1 343 0
 663 00de 0123     		movs	r3, #1
 664 00e0 3B63     		str	r3, [r7, #48]
 665 00e2 18E0     		b	.L44
 666              	.L45:
ARM GAS  /tmp/ccDnIGO0.s 			page 22


 344:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 345:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 346:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 347:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 348:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 349:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 350:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			unblock the task. */
 351:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 667              		.loc 1 351 0
 668 00e4 7B68     		ldr	r3, [r7, #4]
 669 00e6 002B     		cmp	r3, #0
 670 00e8 03D0     		beq	.L46
 352:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 353:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 671              		.loc 1 353 0
 672 00ea BB6B     		ldr	r3, [r7, #56]
 673 00ec 43F08073 		orr	r3, r3, #16777216
 674 00f0 BB63     		str	r3, [r7, #56]
 675              	.L46:
 354:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 355:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 356:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 357:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 358:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 359:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 360:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 676              		.loc 1 360 0
 677 00f2 3B68     		ldr	r3, [r7]
 678 00f4 002B     		cmp	r3, #0
 679 00f6 03D0     		beq	.L47
 361:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 362:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 680              		.loc 1 362 0
 681 00f8 BB6B     		ldr	r3, [r7, #56]
 682 00fa 43F08063 		orr	r3, r3, #67108864
 683 00fe BB63     		str	r3, [r7, #56]
 684              	.L47:
 363:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 364:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 365:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 366:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 367:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 368:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 369:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 370:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			task's event list item so the kernel knows when a match is
 371:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			found.  Then enter the blocked state. */
 372:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 685              		.loc 1 372 0
 686 0100 7B6B     		ldr	r3, [r7, #52]
 687 0102 181D     		adds	r0, r3, #4
 688 0104 BA68     		ldr	r2, [r7, #8]
 689 0106 BB6B     		ldr	r3, [r7, #56]
 690 0108 1343     		orrs	r3, r3, r2
 691 010a BA6C     		ldr	r2, [r7, #72]
 692 010c 1946     		mov	r1, r3
 693 010e FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 373:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /tmp/ccDnIGO0.s 			page 23


 374:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 375:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 376:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			being returned without being set if it is not done. */
 377:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = 0;
 694              		.loc 1 377 0
 695 0112 0023     		movs	r3, #0
 696 0114 FB63     		str	r3, [r7, #60]
 697              	.L44:
 698              	.LBE55:
 378:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 379:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 380:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 381:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 382:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 699              		.loc 1 382 0
 700 0116 FFF7FEFF 		bl	xTaskResumeAll
 701 011a 7862     		str	r0, [r7, #36]
 383:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 384:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 702              		.loc 1 384 0
 703 011c BB6C     		ldr	r3, [r7, #72]
 704 011e 002B     		cmp	r3, #0
 705 0120 31D0     		beq	.L48
 385:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 386:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 706              		.loc 1 386 0
 707 0122 7B6A     		ldr	r3, [r7, #36]
 708 0124 002B     		cmp	r3, #0
 709 0126 07D1     		bne	.L49
 387:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 388:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 710              		.loc 1 388 0
 711 0128 194B     		ldr	r3, .L53
 712 012a 4FF08052 		mov	r2, #268435456
 713 012e 1A60     		str	r2, [r3]
 714              		.syntax unified
 715              	@ 388 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 716 0130 BFF34F8F 		dsb
 717              	@ 0 "" 2
 718              	@ 388 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 719 0134 BFF36F8F 		isb
 720              	@ 0 "" 2
 721              		.thumb
 722              		.syntax unified
 723              	.L49:
 389:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 390:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 391:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 392:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 393:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 394:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 395:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 396:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 397:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 398:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 399:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 724              		.loc 1 399 0
ARM GAS  /tmp/ccDnIGO0.s 			page 24


 725 0138 FFF7FEFF 		bl	uxTaskResetEventItemValue
 726 013c F863     		str	r0, [r7, #60]
 400:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 401:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 727              		.loc 1 401 0
 728 013e FB6B     		ldr	r3, [r7, #60]
 729 0140 03F00073 		and	r3, r3, #33554432
 730 0144 002B     		cmp	r3, #0
 731 0146 1AD1     		bne	.L50
 402:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 403:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 732              		.loc 1 403 0
 733 0148 FFF7FEFF 		bl	vPortEnterCritical
 404:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 405:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 406:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 734              		.loc 1 406 0
 735 014c 7B6B     		ldr	r3, [r7, #52]
 736 014e 1B68     		ldr	r3, [r3]
 737 0150 FB63     		str	r3, [r7, #60]
 407:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 408:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* It is possible that the event bits were updated between this
 409:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				task leaving the Blocked state and running again. */
 410:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 738              		.loc 1 410 0
 739 0152 3A68     		ldr	r2, [r7]
 740 0154 B968     		ldr	r1, [r7, #8]
 741 0156 F86B     		ldr	r0, [r7, #60]
 742 0158 FFF7FEFF 		bl	prvTestWaitCondition
 743 015c 0346     		mov	r3, r0
 744 015e 002B     		cmp	r3, #0
 745 0160 09D0     		beq	.L51
 411:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 412:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 746              		.loc 1 412 0
 747 0162 7B68     		ldr	r3, [r7, #4]
 748 0164 002B     		cmp	r3, #0
 749 0166 06D0     		beq	.L51
 413:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					{
 414:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 750              		.loc 1 414 0
 751 0168 7B6B     		ldr	r3, [r7, #52]
 752 016a 1A68     		ldr	r2, [r3]
 753 016c BB68     		ldr	r3, [r7, #8]
 754 016e DB43     		mvns	r3, r3
 755 0170 1A40     		ands	r2, r2, r3
 756 0172 7B6B     		ldr	r3, [r7, #52]
 757 0174 1A60     		str	r2, [r3]
 758              	.L51:
 415:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					}
 416:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					else
 417:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					{
 418:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 419:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					}
 420:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 421:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 422:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
ARM GAS  /tmp/ccDnIGO0.s 			page 25


 423:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 424:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 425:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 759              		.loc 1 425 0
 760 0176 0123     		movs	r3, #1
 761 0178 3B63     		str	r3, [r7, #48]
 426:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 427:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 762              		.loc 1 427 0
 763 017a FFF7FEFF 		bl	vPortExitCritical
 764              	.L50:
 428:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 429:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 430:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 431:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 432:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 433:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 435:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 765              		.loc 1 435 0
 766 017e FB6B     		ldr	r3, [r7, #60]
 767 0180 23F07F43 		bic	r3, r3, #-16777216
 768 0184 FB63     		str	r3, [r7, #60]
 769              	.L48:
 436:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 437:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 438:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 439:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 440:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 441:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 442:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 770              		.loc 1 442 0
 771 0186 FB6B     		ldr	r3, [r7, #60]
 443:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 772              		.loc 1 443 0
 773 0188 1846     		mov	r0, r3
 774 018a 4037     		adds	r7, r7, #64
 775              	.LCFI18:
 776              		.cfi_def_cfa_offset 8
 777 018c BD46     		mov	sp, r7
 778              	.LCFI19:
 779              		.cfi_def_cfa_register 13
 780              		@ sp needed
 781 018e 80BD     		pop	{r7, pc}
 782              	.L54:
 783              		.align	2
 784              	.L53:
 785 0190 04ED00E0 		.word	-536810236
 786              		.cfi_endproc
 787              	.LFE7:
 789              		.section	.text.xEventGroupClearBits,"ax",%progbits
 790              		.align	1
 791              		.global	xEventGroupClearBits
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccDnIGO0.s 			page 26


 797              	xEventGroupClearBits:
 798              	.LFB8:
 444:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 445:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 446:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 447:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 799              		.loc 1 447 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 24
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803 0000 80B5     		push	{r7, lr}
 804              	.LCFI20:
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 86B0     		sub	sp, sp, #24
 809              	.LCFI21:
 810              		.cfi_def_cfa_offset 32
 811 0004 00AF     		add	r7, sp, #0
 812              	.LCFI22:
 813              		.cfi_def_cfa_register 7
 814 0006 7860     		str	r0, [r7, #4]
 815 0008 3960     		str	r1, [r7]
 448:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 816              		.loc 1 448 0
 817 000a 7B68     		ldr	r3, [r7, #4]
 818 000c 7B61     		str	r3, [r7, #20]
 449:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 450:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 451:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 452:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself. */
 453:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 819              		.loc 1 453 0
 820 000e 7B68     		ldr	r3, [r7, #4]
 821 0010 002B     		cmp	r3, #0
 822 0012 09D1     		bne	.L56
 823              	.LBB56:
 824              	.LBB57:
 825              		.loc 2 195 0 discriminator 1
 826              		.syntax unified
 827              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 828 0014 4FF05003 			mov r3, #80												
 829 0018 83F31188 		msr basepri, r3											
 830 001c BFF36F8F 		isb														
 831 0020 BFF34F8F 		dsb														
 832              	
 833              	@ 0 "" 2
 834              		.thumb
 835              		.syntax unified
 836 0024 FB60     		str	r3, [r7, #12]
 837              	.L57:
 838              	.LBE57:
 839              	.LBE56:
 840              		.loc 1 453 0 discriminator 1
 841 0026 FEE7     		b	.L57
 842              	.L56:
 454:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
ARM GAS  /tmp/ccDnIGO0.s 			page 27


 843              		.loc 1 454 0
 844 0028 3B68     		ldr	r3, [r7]
 845 002a 03F07F43 		and	r3, r3, #-16777216
 846 002e 002B     		cmp	r3, #0
 847 0030 09D0     		beq	.L58
 848              	.LBB58:
 849              	.LBB59:
 850              		.loc 2 195 0 discriminator 1
 851              		.syntax unified
 852              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 853 0032 4FF05003 			mov r3, #80												
 854 0036 83F31188 		msr basepri, r3											
 855 003a BFF36F8F 		isb														
 856 003e BFF34F8F 		dsb														
 857              	
 858              	@ 0 "" 2
 859              		.thumb
 860              		.syntax unified
 861 0042 BB60     		str	r3, [r7, #8]
 862              	.L59:
 863              	.LBE59:
 864              	.LBE58:
 865              		.loc 1 454 0 discriminator 2
 866 0044 FEE7     		b	.L59
 867              	.L58:
 455:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 456:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	taskENTER_CRITICAL();
 868              		.loc 1 456 0
 869 0046 FFF7FEFF 		bl	vPortEnterCritical
 457:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 458:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 459:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 460:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 461:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		cleared. */
 462:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 870              		.loc 1 462 0
 871 004a 7B69     		ldr	r3, [r7, #20]
 872 004c 1B68     		ldr	r3, [r3]
 873 004e 3B61     		str	r3, [r7, #16]
 463:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 464:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Clear the bits. */
 465:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 874              		.loc 1 465 0
 875 0050 7B69     		ldr	r3, [r7, #20]
 876 0052 1A68     		ldr	r2, [r3]
 877 0054 3B68     		ldr	r3, [r7]
 878 0056 DB43     		mvns	r3, r3
 879 0058 1A40     		ands	r2, r2, r3
 880 005a 7B69     		ldr	r3, [r7, #20]
 881 005c 1A60     		str	r2, [r3]
 466:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 467:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	taskEXIT_CRITICAL();
 882              		.loc 1 467 0
 883 005e FFF7FEFF 		bl	vPortExitCritical
 468:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 469:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 884              		.loc 1 469 0
ARM GAS  /tmp/ccDnIGO0.s 			page 28


 885 0062 3B69     		ldr	r3, [r7, #16]
 470:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 886              		.loc 1 470 0
 887 0064 1846     		mov	r0, r3
 888 0066 1837     		adds	r7, r7, #24
 889              	.LCFI23:
 890              		.cfi_def_cfa_offset 8
 891 0068 BD46     		mov	sp, r7
 892              	.LCFI24:
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 006a 80BD     		pop	{r7, pc}
 896              		.cfi_endproc
 897              	.LFE8:
 899              		.section	.text.xEventGroupClearBitsFromISR,"ax",%progbits
 900              		.align	1
 901              		.global	xEventGroupClearBitsFromISR
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 905              		.fpu fpv4-sp-d16
 907              	xEventGroupClearBitsFromISR:
 908              	.LFB9:
 471:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 472:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 473:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 474:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 475:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 476:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 909              		.loc 1 476 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 16
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913 0000 80B5     		push	{r7, lr}
 914              	.LCFI25:
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 918 0002 84B0     		sub	sp, sp, #16
 919              	.LCFI26:
 920              		.cfi_def_cfa_offset 24
 921 0004 00AF     		add	r7, sp, #0
 922              	.LCFI27:
 923              		.cfi_def_cfa_register 7
 924 0006 7860     		str	r0, [r7, #4]
 925 0008 3960     		str	r1, [r7]
 477:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 478:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 479:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 480:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 926              		.loc 1 480 0
 927 000a 0023     		movs	r3, #0
 928 000c 3A68     		ldr	r2, [r7]
 929 000e 7968     		ldr	r1, [r7, #4]
 930 0010 0448     		ldr	r0, .L63
 931 0012 FFF7FEFF 		bl	xTimerPendFunctionCallFromISR
 932 0016 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccDnIGO0.s 			page 29


 481:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 482:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 933              		.loc 1 482 0
 934 0018 FB68     		ldr	r3, [r7, #12]
 483:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 935              		.loc 1 483 0
 936 001a 1846     		mov	r0, r3
 937 001c 1037     		adds	r7, r7, #16
 938              	.LCFI28:
 939              		.cfi_def_cfa_offset 8
 940 001e BD46     		mov	sp, r7
 941              	.LCFI29:
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 0020 80BD     		pop	{r7, pc}
 945              	.L64:
 946 0022 00BF     		.align	2
 947              	.L63:
 948 0024 00000000 		.word	vEventGroupClearBitsCallback
 949              		.cfi_endproc
 950              	.LFE9:
 952              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 953              		.align	1
 954              		.global	xEventGroupGetBitsFromISR
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	xEventGroupGetBitsFromISR:
 961              	.LFB10:
 484:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 485:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
 486:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 487:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 488:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 489:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 962              		.loc 1 489 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 32
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967 0000 80B4     		push	{r7}
 968              	.LCFI30:
 969              		.cfi_def_cfa_offset 4
 970              		.cfi_offset 7, -4
 971 0002 89B0     		sub	sp, sp, #36
 972              	.LCFI31:
 973              		.cfi_def_cfa_offset 40
 974 0004 00AF     		add	r7, sp, #0
 975              	.LCFI32:
 976              		.cfi_def_cfa_register 7
 977 0006 7860     		str	r0, [r7, #4]
 490:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 491:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 978              		.loc 1 491 0
 979 0008 7B68     		ldr	r3, [r7, #4]
 980 000a FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccDnIGO0.s 			page 30


 981              	.LBB60:
 982              	.LBB61:
 196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 983              		.loc 2 211 0
 984              		.syntax unified
 985              	@ 211 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 986 000c EFF31182 			mrs r2, basepri											
 987 0010 4FF05003 		mov r3, #80												
 988 0014 83F31188 		msr basepri, r3											
 989 0018 BFF36F8F 		isb														
 990 001c BFF34F8F 		dsb														
 991              	
 992              	@ 0 "" 2
 993              		.thumb
 994              		.syntax unified
 995 0020 FA60     		str	r2, [r7, #12]
 996 0022 BB60     		str	r3, [r7, #8]
 212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 997              		.loc 2 223 0
 998 0024 FB68     		ldr	r3, [r7, #12]
 999              	.LBE61:
 1000              	.LBE60:
 492:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 493:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 494:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1001              		.loc 1 494 0
 1002 0026 BB61     		str	r3, [r7, #24]
 495:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 496:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 1003              		.loc 1 496 0
 1004 0028 FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccDnIGO0.s 			page 31


 1005 002a 1B68     		ldr	r3, [r3]
 1006 002c 7B61     		str	r3, [r7, #20]
 1007 002e BB69     		ldr	r3, [r7, #24]
 1008 0030 3B61     		str	r3, [r7, #16]
 1009              	.LBB62:
 1010              	.LBB63:
 224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1011              		.loc 2 229 0
 1012 0032 3B69     		ldr	r3, [r7, #16]
 1013              		.syntax unified
 1014              	@ 229 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1015 0034 83F31188 			msr basepri, r3	
 1016              	@ 0 "" 2
 1017              		.thumb
 1018              		.syntax unified
 1019              	.LBE63:
 1020              	.LBE62:
 497:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 498:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 499:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 500:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 1021              		.loc 1 500 0
 1022 0038 7B69     		ldr	r3, [r7, #20]
 501:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1023              		.loc 1 501 0
 1024 003a 1846     		mov	r0, r3
 1025 003c 2437     		adds	r7, r7, #36
 1026              	.LCFI33:
 1027              		.cfi_def_cfa_offset 4
 1028 003e BD46     		mov	sp, r7
 1029              	.LCFI34:
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 0040 5DF8047B 		ldr	r7, [sp], #4
 1033              	.LCFI35:
 1034              		.cfi_restore 7
 1035              		.cfi_def_cfa_offset 0
 1036 0044 7047     		bx	lr
 1037              		.cfi_endproc
 1038              	.LFE10:
 1040              		.section	.text.xEventGroupSetBits,"ax",%progbits
 1041              		.align	1
 1042              		.global	xEventGroupSetBits
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv4-sp-d16
 1048              	xEventGroupSetBits:
 1049              	.LFB11:
 502:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 503:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 504:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
ARM GAS  /tmp/ccDnIGO0.s 			page 32


 505:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1050              		.loc 1 505 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 56
 1053              		@ frame_needed = 1, uses_anonymous_args = 0
 1054 0000 80B5     		push	{r7, lr}
 1055              	.LCFI36:
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 7, -8
 1058              		.cfi_offset 14, -4
 1059 0002 8EB0     		sub	sp, sp, #56
 1060              	.LCFI37:
 1061              		.cfi_def_cfa_offset 64
 1062 0004 00AF     		add	r7, sp, #0
 1063              	.LCFI38:
 1064              		.cfi_def_cfa_register 7
 1065 0006 7860     		str	r0, [r7, #4]
 1066 0008 3960     		str	r1, [r7]
 506:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 507:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** ListItem_t const *pxListEnd;
 508:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** List_t *pxList;
 509:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 1067              		.loc 1 509 0
 1068 000a 0023     		movs	r3, #0
 1069 000c 3B63     		str	r3, [r7, #48]
 510:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 1070              		.loc 1 510 0
 1071 000e 7B68     		ldr	r3, [r7, #4]
 1072 0010 BB62     		str	r3, [r7, #40]
 511:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 1073              		.loc 1 511 0
 1074 0012 0023     		movs	r3, #0
 1075 0014 FB62     		str	r3, [r7, #44]
 512:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 513:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 514:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself. */
 515:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 1076              		.loc 1 515 0
 1077 0016 7B68     		ldr	r3, [r7, #4]
 1078 0018 002B     		cmp	r3, #0
 1079 001a 09D1     		bne	.L69
 1080              	.LBB64:
 1081              	.LBB65:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1082              		.loc 2 195 0 discriminator 1
 1083              		.syntax unified
 1084              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1085 001c 4FF05003 			mov r3, #80												
 1086 0020 83F31188 		msr basepri, r3											
 1087 0024 BFF36F8F 		isb														
 1088 0028 BFF34F8F 		dsb														
 1089              	
 1090              	@ 0 "" 2
 1091              		.thumb
 1092              		.syntax unified
 1093 002c 3B61     		str	r3, [r7, #16]
 1094              	.L70:
ARM GAS  /tmp/ccDnIGO0.s 			page 33


 1095              	.LBE65:
 1096              	.LBE64:
 1097              		.loc 1 515 0 discriminator 1
 1098 002e FEE7     		b	.L70
 1099              	.L69:
 516:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1100              		.loc 1 516 0
 1101 0030 3B68     		ldr	r3, [r7]
 1102 0032 03F07F43 		and	r3, r3, #-16777216
 1103 0036 002B     		cmp	r3, #0
 1104 0038 09D0     		beq	.L71
 1105              	.LBB66:
 1106              	.LBB67:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1107              		.loc 2 195 0 discriminator 1
 1108              		.syntax unified
 1109              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1110 003a 4FF05003 			mov r3, #80												
 1111 003e 83F31188 		msr basepri, r3											
 1112 0042 BFF36F8F 		isb														
 1113 0046 BFF34F8F 		dsb														
 1114              	
 1115              	@ 0 "" 2
 1116              		.thumb
 1117              		.syntax unified
 1118 004a FB60     		str	r3, [r7, #12]
 1119              	.L72:
 1120              	.LBE67:
 1121              	.LBE66:
 1122              		.loc 1 516 0 discriminator 2
 1123 004c FEE7     		b	.L72
 1124              	.L71:
 517:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 518:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 1125              		.loc 1 518 0
 1126 004e BB6A     		ldr	r3, [r7, #40]
 1127 0050 0433     		adds	r3, r3, #4
 1128 0052 7B62     		str	r3, [r7, #36]
 519:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as th
 1129              		.loc 1 519 0
 1130 0054 7B6A     		ldr	r3, [r7, #36]
 1131 0056 0833     		adds	r3, r3, #8
 1132 0058 3B62     		str	r3, [r7, #32]
 520:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 1133              		.loc 1 520 0
 1134 005a FFF7FEFF 		bl	vTaskSuspendAll
 521:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 522:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 523:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 524:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 1135              		.loc 1 524 0
 1136 005e 7B6A     		ldr	r3, [r7, #36]
 1137 0060 DB68     		ldr	r3, [r3, #12]
 1138 0062 7B63     		str	r3, [r7, #52]
 525:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 526:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Set the bits. */
 527:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
ARM GAS  /tmp/ccDnIGO0.s 			page 34


 1139              		.loc 1 527 0
 1140 0064 BB6A     		ldr	r3, [r7, #40]
 1141 0066 1A68     		ldr	r2, [r3]
 1142 0068 3B68     		ldr	r3, [r7]
 1143 006a 1A43     		orrs	r2, r2, r3
 1144 006c BB6A     		ldr	r3, [r7, #40]
 1145 006e 1A60     		str	r2, [r3]
 528:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 529:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 530:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		while( pxListItem != pxListEnd )
 1146              		.loc 1 530 0
 1147 0070 3CE0     		b	.L73
 1148              	.L78:
 531:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 532:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 1149              		.loc 1 532 0
 1150 0072 7B6B     		ldr	r3, [r7, #52]
 1151 0074 5B68     		ldr	r3, [r3, #4]
 1152 0076 FB61     		str	r3, [r7, #28]
 533:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 1153              		.loc 1 533 0
 1154 0078 7B6B     		ldr	r3, [r7, #52]
 1155 007a 1B68     		ldr	r3, [r3]
 1156 007c BB61     		str	r3, [r7, #24]
 534:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xMatchFound = pdFALSE;
 1157              		.loc 1 534 0
 1158 007e 0023     		movs	r3, #0
 1159 0080 FB62     		str	r3, [r7, #44]
 535:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 536:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 537:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 1160              		.loc 1 537 0
 1161 0082 BB69     		ldr	r3, [r7, #24]
 1162 0084 03F07F43 		and	r3, r3, #-16777216
 1163 0088 7B61     		str	r3, [r7, #20]
 538:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 1164              		.loc 1 538 0
 1165 008a BB69     		ldr	r3, [r7, #24]
 1166 008c 23F07F43 		bic	r3, r3, #-16777216
 1167 0090 BB61     		str	r3, [r7, #24]
 539:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 540:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 1168              		.loc 1 540 0
 1169 0092 7B69     		ldr	r3, [r7, #20]
 1170 0094 03F08063 		and	r3, r3, #67108864
 1171 0098 002B     		cmp	r3, #0
 1172 009a 08D1     		bne	.L74
 541:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 542:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Just looking for single bit being set. */
 543:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 1173              		.loc 1 543 0
 1174 009c BB6A     		ldr	r3, [r7, #40]
 1175 009e 1A68     		ldr	r2, [r3]
 1176 00a0 BB69     		ldr	r3, [r7, #24]
 1177 00a2 1340     		ands	r3, r3, r2
 1178 00a4 002B     		cmp	r3, #0
 1179 00a6 0BD0     		beq	.L75
ARM GAS  /tmp/ccDnIGO0.s 			page 35


 544:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 545:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					xMatchFound = pdTRUE;
 1180              		.loc 1 545 0
 1181 00a8 0123     		movs	r3, #1
 1182 00aa FB62     		str	r3, [r7, #44]
 1183 00ac 08E0     		b	.L75
 1184              	.L74:
 546:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 547:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 548:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 549:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 550:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 551:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 552:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 1185              		.loc 1 552 0
 1186 00ae BB6A     		ldr	r3, [r7, #40]
 1187 00b0 1A68     		ldr	r2, [r3]
 1188 00b2 BB69     		ldr	r3, [r7, #24]
 1189 00b4 1340     		ands	r3, r3, r2
 1190 00b6 BA69     		ldr	r2, [r7, #24]
 1191 00b8 9A42     		cmp	r2, r3
 1192 00ba 01D1     		bne	.L75
 553:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 554:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* All bits are set. */
 555:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xMatchFound = pdTRUE;
 1193              		.loc 1 555 0
 1194 00bc 0123     		movs	r3, #1
 1195 00be FB62     		str	r3, [r7, #44]
 1196              	.L75:
 556:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 557:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 558:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 559:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 560:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 561:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 562:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xMatchFound != pdFALSE )
 1197              		.loc 1 562 0
 1198 00c0 FB6A     		ldr	r3, [r7, #44]
 1199 00c2 002B     		cmp	r3, #0
 1200 00c4 10D0     		beq	.L76
 563:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 564:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 565:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 1201              		.loc 1 565 0
 1202 00c6 7B69     		ldr	r3, [r7, #20]
 1203 00c8 03F08073 		and	r3, r3, #16777216
 1204 00cc 002B     		cmp	r3, #0
 1205 00ce 03D0     		beq	.L77
 566:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 567:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 1206              		.loc 1 567 0
 1207 00d0 3A6B     		ldr	r2, [r7, #48]
 1208 00d2 BB69     		ldr	r3, [r7, #24]
 1209 00d4 1343     		orrs	r3, r3, r2
 1210 00d6 3B63     		str	r3, [r7, #48]
 1211              	.L77:
 568:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
ARM GAS  /tmp/ccDnIGO0.s 			page 36


 569:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 570:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 571:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 572:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 573:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 574:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 575:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				item before removing the task from the event list.  The
 576:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 577:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 578:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				than because it timed out. */
 579:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 1212              		.loc 1 579 0
 1213 00d8 BB6A     		ldr	r3, [r7, #40]
 1214 00da 1B68     		ldr	r3, [r3]
 1215 00dc 43F00073 		orr	r3, r3, #33554432
 1216 00e0 1946     		mov	r1, r3
 1217 00e2 786B     		ldr	r0, [r7, #52]
 1218 00e4 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1219              	.L76:
 580:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 581:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 582:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 583:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			used here as the list item may have been removed from the event list
 584:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			and inserted into the ready/pending reading list. */
 585:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxListItem = pxNext;
 1220              		.loc 1 585 0
 1221 00e8 FB69     		ldr	r3, [r7, #28]
 1222 00ea 7B63     		str	r3, [r7, #52]
 1223              	.L73:
 530:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 1224              		.loc 1 530 0
 1225 00ec 7A6B     		ldr	r2, [r7, #52]
 1226 00ee 3B6A     		ldr	r3, [r7, #32]
 1227 00f0 9A42     		cmp	r2, r3
 1228 00f2 BED1     		bne	.L78
 586:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 587:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 588:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 589:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		bit was set in the control word. */
 590:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 1229              		.loc 1 590 0
 1230 00f4 BB6A     		ldr	r3, [r7, #40]
 1231 00f6 1A68     		ldr	r2, [r3]
 1232 00f8 3B6B     		ldr	r3, [r7, #48]
 1233 00fa DB43     		mvns	r3, r3
 1234 00fc 1A40     		ands	r2, r2, r3
 1235 00fe BB6A     		ldr	r3, [r7, #40]
 1236 0100 1A60     		str	r2, [r3]
 591:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 592:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 1237              		.loc 1 592 0
 1238 0102 FFF7FEFF 		bl	xTaskResumeAll
 593:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 594:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return pxEventBits->uxEventBits;
 1239              		.loc 1 594 0
 1240 0106 BB6A     		ldr	r3, [r7, #40]
 1241 0108 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccDnIGO0.s 			page 37


 595:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1242              		.loc 1 595 0
 1243 010a 1846     		mov	r0, r3
 1244 010c 3837     		adds	r7, r7, #56
 1245              	.LCFI39:
 1246              		.cfi_def_cfa_offset 8
 1247 010e BD46     		mov	sp, r7
 1248              	.LCFI40:
 1249              		.cfi_def_cfa_register 13
 1250              		@ sp needed
 1251 0110 80BD     		pop	{r7, pc}
 1252              		.cfi_endproc
 1253              	.LFE11:
 1255              		.section	.text.vEventGroupDelete,"ax",%progbits
 1256              		.align	1
 1257              		.global	vEventGroupDelete
 1258              		.syntax unified
 1259              		.thumb
 1260              		.thumb_func
 1261              		.fpu fpv4-sp-d16
 1263              	vEventGroupDelete:
 1264              	.LFB12:
 596:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 597:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 598:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 599:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1265              		.loc 1 599 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 24
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269 0000 80B5     		push	{r7, lr}
 1270              	.LCFI41:
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 86B0     		sub	sp, sp, #24
 1275              	.LCFI42:
 1276              		.cfi_def_cfa_offset 32
 1277 0004 00AF     		add	r7, sp, #0
 1278              	.LCFI43:
 1279              		.cfi_def_cfa_register 7
 1280 0006 7860     		str	r0, [r7, #4]
 600:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 1281              		.loc 1 600 0
 1282 0008 7B68     		ldr	r3, [r7, #4]
 1283 000a 7B61     		str	r3, [r7, #20]
 601:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 1284              		.loc 1 601 0
 1285 000c 7B69     		ldr	r3, [r7, #20]
 1286 000e 0433     		adds	r3, r3, #4
 1287 0010 3B61     		str	r3, [r7, #16]
 602:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 603:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 1288              		.loc 1 603 0
 1289 0012 FFF7FEFF 		bl	vTaskSuspendAll
 604:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 605:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
ARM GAS  /tmp/ccDnIGO0.s 			page 38


 606:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 607:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 1290              		.loc 1 607 0
 1291 0016 16E0     		b	.L81
 1292              	.L84:
 608:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 609:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 610:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			and cannot therefore have any bits set. */
 611:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 1293              		.loc 1 611 0
 1294 0018 3B69     		ldr	r3, [r7, #16]
 1295 001a DA68     		ldr	r2, [r3, #12]
 1296 001c 3B69     		ldr	r3, [r7, #16]
 1297 001e 0833     		adds	r3, r3, #8
 1298 0020 9A42     		cmp	r2, r3
 1299 0022 09D1     		bne	.L82
 1300              	.LBB68:
 1301              	.LBB69:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1302              		.loc 2 195 0 discriminator 1
 1303              		.syntax unified
 1304              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1305 0024 4FF05003 			mov r3, #80												
 1306 0028 83F31188 		msr basepri, r3											
 1307 002c BFF36F8F 		isb														
 1308 0030 BFF34F8F 		dsb														
 1309              	
 1310              	@ 0 "" 2
 1311              		.thumb
 1312              		.syntax unified
 1313 0034 FB60     		str	r3, [r7, #12]
 1314              	.L83:
 1315              	.LBE69:
 1316              	.LBE68:
 1317              		.loc 1 611 0 discriminator 1
 1318 0036 FEE7     		b	.L83
 1319              	.L82:
 612:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1320              		.loc 1 612 0
 1321 0038 3B69     		ldr	r3, [r7, #16]
 1322 003a DB68     		ldr	r3, [r3, #12]
 1323 003c 4FF00071 		mov	r1, #33554432
 1324 0040 1846     		mov	r0, r3
 1325 0042 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1326              	.L81:
 607:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 1327              		.loc 1 607 0
 1328 0046 3B69     		ldr	r3, [r7, #16]
 1329 0048 1B68     		ldr	r3, [r3]
 1330 004a 002B     		cmp	r3, #0
 1331 004c E4D1     		bne	.L84
 613:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 614:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 615:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 616:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 617:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 618:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			it again. */
ARM GAS  /tmp/ccDnIGO0.s 			page 39


 619:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vPortFree( pxEventBits );
 620:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 621:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 622:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 623:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The event group could have been allocated statically or
 624:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 625:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 1332              		.loc 1 625 0
 1333 004e 7B69     		ldr	r3, [r7, #20]
 1334 0050 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1335 0052 002B     		cmp	r3, #0
 1336 0054 02D1     		bne	.L85
 626:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 627:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vPortFree( pxEventBits );
 1337              		.loc 1 627 0
 1338 0056 7869     		ldr	r0, [r7, #20]
 1339 0058 FFF7FEFF 		bl	vPortFree
 1340              	.L85:
 628:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 629:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 630:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 631:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 632:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 633:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 634:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 635:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 636:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 1341              		.loc 1 636 0
 1342 005c FFF7FEFF 		bl	xTaskResumeAll
 637:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1343              		.loc 1 637 0
 1344 0060 00BF     		nop
 1345 0062 1837     		adds	r7, r7, #24
 1346              	.LCFI44:
 1347              		.cfi_def_cfa_offset 8
 1348 0064 BD46     		mov	sp, r7
 1349              	.LCFI45:
 1350              		.cfi_def_cfa_register 13
 1351              		@ sp needed
 1352 0066 80BD     		pop	{r7, pc}
 1353              		.cfi_endproc
 1354              	.LFE12:
 1356              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 1357              		.align	1
 1358              		.global	vEventGroupSetBitsCallback
 1359              		.syntax unified
 1360              		.thumb
 1361              		.thumb_func
 1362              		.fpu fpv4-sp-d16
 1364              	vEventGroupSetBitsCallback:
 1365              	.LFB13:
 638:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 639:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 640:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 641:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** an interrupt. */
 642:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 643:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
ARM GAS  /tmp/ccDnIGO0.s 			page 40


 1366              		.loc 1 643 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 8
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370 0000 80B5     		push	{r7, lr}
 1371              	.LCFI46:
 1372              		.cfi_def_cfa_offset 8
 1373              		.cfi_offset 7, -8
 1374              		.cfi_offset 14, -4
 1375 0002 82B0     		sub	sp, sp, #8
 1376              	.LCFI47:
 1377              		.cfi_def_cfa_offset 16
 1378 0004 00AF     		add	r7, sp, #0
 1379              	.LCFI48:
 1380              		.cfi_def_cfa_register 7
 1381 0006 7860     		str	r0, [r7, #4]
 1382 0008 3960     		str	r1, [r7]
 644:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 1383              		.loc 1 644 0
 1384 000a 3968     		ldr	r1, [r7]
 1385 000c 7868     		ldr	r0, [r7, #4]
 1386 000e FFF7FEFF 		bl	xEventGroupSetBits
 645:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1387              		.loc 1 645 0
 1388 0012 00BF     		nop
 1389 0014 0837     		adds	r7, r7, #8
 1390              	.LCFI49:
 1391              		.cfi_def_cfa_offset 8
 1392 0016 BD46     		mov	sp, r7
 1393              	.LCFI50:
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
 1396 0018 80BD     		pop	{r7, pc}
 1397              		.cfi_endproc
 1398              	.LFE13:
 1400              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 1401              		.align	1
 1402              		.global	vEventGroupClearBitsCallback
 1403              		.syntax unified
 1404              		.thumb
 1405              		.thumb_func
 1406              		.fpu fpv4-sp-d16
 1408              	vEventGroupClearBitsCallback:
 1409              	.LFB14:
 646:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 647:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 648:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 649:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** an interrupt. */
 650:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 651:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1410              		.loc 1 651 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 8
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 0000 80B5     		push	{r7, lr}
 1415              	.LCFI51:
 1416              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccDnIGO0.s 			page 41


 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
 1419 0002 82B0     		sub	sp, sp, #8
 1420              	.LCFI52:
 1421              		.cfi_def_cfa_offset 16
 1422 0004 00AF     		add	r7, sp, #0
 1423              	.LCFI53:
 1424              		.cfi_def_cfa_register 7
 1425 0006 7860     		str	r0, [r7, #4]
 1426 0008 3960     		str	r1, [r7]
 652:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 1427              		.loc 1 652 0
 1428 000a 3968     		ldr	r1, [r7]
 1429 000c 7868     		ldr	r0, [r7, #4]
 1430 000e FFF7FEFF 		bl	xEventGroupClearBits
 653:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1431              		.loc 1 653 0
 1432 0012 00BF     		nop
 1433 0014 0837     		adds	r7, r7, #8
 1434              	.LCFI54:
 1435              		.cfi_def_cfa_offset 8
 1436 0016 BD46     		mov	sp, r7
 1437              	.LCFI55:
 1438              		.cfi_def_cfa_register 13
 1439              		@ sp needed
 1440 0018 80BD     		pop	{r7, pc}
 1441              		.cfi_endproc
 1442              	.LFE14:
 1444              		.section	.text.prvTestWaitCondition,"ax",%progbits
 1445              		.align	1
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu fpv4-sp-d16
 1451              	prvTestWaitCondition:
 1452              	.LFB15:
 654:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 655:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 656:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 657:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1453              		.loc 1 657 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 24
 1456              		@ frame_needed = 1, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458 0000 80B4     		push	{r7}
 1459              	.LCFI56:
 1460              		.cfi_def_cfa_offset 4
 1461              		.cfi_offset 7, -4
 1462 0002 87B0     		sub	sp, sp, #28
 1463              	.LCFI57:
 1464              		.cfi_def_cfa_offset 32
 1465 0004 00AF     		add	r7, sp, #0
 1466              	.LCFI58:
 1467              		.cfi_def_cfa_register 7
 1468 0006 F860     		str	r0, [r7, #12]
 1469 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccDnIGO0.s 			page 42


 1470 000a 7A60     		str	r2, [r7, #4]
 658:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 1471              		.loc 1 658 0
 1472 000c 0023     		movs	r3, #0
 1473 000e 7B61     		str	r3, [r7, #20]
 659:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 660:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
 1474              		.loc 1 660 0
 1475 0010 7B68     		ldr	r3, [r7, #4]
 1476 0012 002B     		cmp	r3, #0
 1477 0014 07D1     		bne	.L89
 661:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 662:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 663:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		set.  Is one already set? */
 664:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
 1478              		.loc 1 664 0
 1479 0016 FA68     		ldr	r2, [r7, #12]
 1480 0018 BB68     		ldr	r3, [r7, #8]
 1481 001a 1340     		ands	r3, r3, r2
 1482 001c 002B     		cmp	r3, #0
 1483 001e 0AD0     		beq	.L90
 665:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 666:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1484              		.loc 1 666 0
 1485 0020 0123     		movs	r3, #1
 1486 0022 7B61     		str	r3, [r7, #20]
 1487 0024 07E0     		b	.L90
 1488              	.L89:
 667:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 668:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 669:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 670:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 671:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 672:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 673:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	else
 674:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 675:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 676:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		Are they set already? */
 677:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
 1489              		.loc 1 677 0
 1490 0026 FA68     		ldr	r2, [r7, #12]
 1491 0028 BB68     		ldr	r3, [r7, #8]
 1492 002a 1340     		ands	r3, r3, r2
 1493 002c BA68     		ldr	r2, [r7, #8]
 1494 002e 9A42     		cmp	r2, r3
 1495 0030 01D1     		bne	.L90
 678:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 679:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1496              		.loc 1 679 0
 1497 0032 0123     		movs	r3, #1
 1498 0034 7B61     		str	r3, [r7, #20]
 1499              	.L90:
 680:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 681:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 682:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 683:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 684:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
ARM GAS  /tmp/ccDnIGO0.s 			page 43


 685:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 686:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 687:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return xWaitConditionMet;
 1500              		.loc 1 687 0
 1501 0036 7B69     		ldr	r3, [r7, #20]
 688:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1502              		.loc 1 688 0
 1503 0038 1846     		mov	r0, r3
 1504 003a 1C37     		adds	r7, r7, #28
 1505              	.LCFI59:
 1506              		.cfi_def_cfa_offset 4
 1507 003c BD46     		mov	sp, r7
 1508              	.LCFI60:
 1509              		.cfi_def_cfa_register 13
 1510              		@ sp needed
 1511 003e 5DF8047B 		ldr	r7, [sp], #4
 1512              	.LCFI61:
 1513              		.cfi_restore 7
 1514              		.cfi_def_cfa_offset 0
 1515 0042 7047     		bx	lr
 1516              		.cfi_endproc
 1517              	.LFE15:
 1519              		.section	.text.xEventGroupSetBitsFromISR,"ax",%progbits
 1520              		.align	1
 1521              		.global	xEventGroupSetBitsFromISR
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1525              		.fpu fpv4-sp-d16
 1527              	xEventGroupSetBitsFromISR:
 1528              	.LFB16:
 689:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 690:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 691:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 692:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 693:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSe
 694:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1529              		.loc 1 694 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 24
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533 0000 80B5     		push	{r7, lr}
 1534              	.LCFI62:
 1535              		.cfi_def_cfa_offset 8
 1536              		.cfi_offset 7, -8
 1537              		.cfi_offset 14, -4
 1538 0002 86B0     		sub	sp, sp, #24
 1539              	.LCFI63:
 1540              		.cfi_def_cfa_offset 32
 1541 0004 00AF     		add	r7, sp, #0
 1542              	.LCFI64:
 1543              		.cfi_def_cfa_register 7
 1544 0006 F860     		str	r0, [r7, #12]
 1545 0008 B960     		str	r1, [r7, #8]
 1546 000a 7A60     		str	r2, [r7, #4]
 695:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xReturn;
 696:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  /tmp/ccDnIGO0.s 			page 44


 697:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
 698:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( ui
 1547              		.loc 1 698 0
 1548 000c 7B68     		ldr	r3, [r7, #4]
 1549 000e BA68     		ldr	r2, [r7, #8]
 1550 0010 F968     		ldr	r1, [r7, #12]
 1551 0012 0448     		ldr	r0, .L94
 1552 0014 FFF7FEFF 		bl	xTimerPendFunctionCallFromISR
 1553 0018 7861     		str	r0, [r7, #20]
 699:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 700:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 1554              		.loc 1 700 0
 1555 001a 7B69     		ldr	r3, [r7, #20]
 701:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1556              		.loc 1 701 0
 1557 001c 1846     		mov	r0, r3
 1558 001e 1837     		adds	r7, r7, #24
 1559              	.LCFI65:
 1560              		.cfi_def_cfa_offset 8
 1561 0020 BD46     		mov	sp, r7
 1562              	.LCFI66:
 1563              		.cfi_def_cfa_register 13
 1564              		@ sp needed
 1565 0022 80BD     		pop	{r7, pc}
 1566              	.L95:
 1567              		.align	2
 1568              	.L94:
 1569 0024 00000000 		.word	vEventGroupSetBitsCallback
 1570              		.cfi_endproc
 1571              	.LFE16:
 1573              		.section	.text.uxEventGroupGetNumber,"ax",%progbits
 1574              		.align	1
 1575              		.global	uxEventGroupGetNumber
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1579              		.fpu fpv4-sp-d16
 1581              	uxEventGroupGetNumber:
 1582              	.LFB17:
 702:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 703:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
 704:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 705:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 706:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if (configUSE_TRACE_FACILITY == 1)
 707:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 708:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )
 709:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1583              		.loc 1 709 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 16
 1586              		@ frame_needed = 1, uses_anonymous_args = 0
 1587              		@ link register save eliminated.
 1588 0000 80B4     		push	{r7}
 1589              	.LCFI67:
 1590              		.cfi_def_cfa_offset 4
 1591              		.cfi_offset 7, -4
 1592 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccDnIGO0.s 			page 45


 1593              	.LCFI68:
 1594              		.cfi_def_cfa_offset 24
 1595 0004 00AF     		add	r7, sp, #0
 1596              	.LCFI69:
 1597              		.cfi_def_cfa_register 7
 1598 0006 7860     		str	r0, [r7, #4]
 710:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	UBaseType_t xReturn;
 711:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 1599              		.loc 1 711 0
 1600 0008 7B68     		ldr	r3, [r7, #4]
 1601 000a BB60     		str	r3, [r7, #8]
 712:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 713:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xEventGroup == NULL )
 1602              		.loc 1 713 0
 1603 000c 7B68     		ldr	r3, [r7, #4]
 1604 000e 002B     		cmp	r3, #0
 1605 0010 02D1     		bne	.L97
 714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 715:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xReturn = 0;
 1606              		.loc 1 715 0
 1607 0012 0023     		movs	r3, #0
 1608 0014 FB60     		str	r3, [r7, #12]
 1609 0016 02E0     		b	.L98
 1610              	.L97:
 716:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 717:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 718:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 719:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xReturn = pxEventBits->uxEventGroupNumber;
 1611              		.loc 1 719 0
 1612 0018 BB68     		ldr	r3, [r7, #8]
 1613 001a 9B69     		ldr	r3, [r3, #24]
 1614 001c FB60     		str	r3, [r7, #12]
 1615              	.L98:
 720:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 721:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 722:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 1616              		.loc 1 722 0
 1617 001e FB68     		ldr	r3, [r7, #12]
 723:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1618              		.loc 1 723 0
 1619 0020 1846     		mov	r0, r3
 1620 0022 1437     		adds	r7, r7, #20
 1621              	.LCFI70:
 1622              		.cfi_def_cfa_offset 4
 1623 0024 BD46     		mov	sp, r7
 1624              	.LCFI71:
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 0026 5DF8047B 		ldr	r7, [sp], #4
 1628              	.LCFI72:
 1629              		.cfi_restore 7
 1630              		.cfi_def_cfa_offset 0
 1631 002a 7047     		bx	lr
 1632              		.cfi_endproc
 1633              	.LFE17:
 1635              		.section	.text.vEventGroupSetNumber,"ax",%progbits
 1636              		.align	1
ARM GAS  /tmp/ccDnIGO0.s 			page 46


 1637              		.global	vEventGroupSetNumber
 1638              		.syntax unified
 1639              		.thumb
 1640              		.thumb_func
 1641              		.fpu fpv4-sp-d16
 1643              	vEventGroupSetNumber:
 1644              	.LFB18:
 724:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 725:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configUSE_TRACE_FACILITY */
 726:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 727:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 728:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 729:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 730:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )
 731:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1645              		.loc 1 731 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 8
 1648              		@ frame_needed = 1, uses_anonymous_args = 0
 1649              		@ link register save eliminated.
 1650 0000 80B4     		push	{r7}
 1651              	.LCFI73:
 1652              		.cfi_def_cfa_offset 4
 1653              		.cfi_offset 7, -4
 1654 0002 83B0     		sub	sp, sp, #12
 1655              	.LCFI74:
 1656              		.cfi_def_cfa_offset 16
 1657 0004 00AF     		add	r7, sp, #0
 1658              	.LCFI75:
 1659              		.cfi_def_cfa_register 7
 1660 0006 7860     		str	r0, [r7, #4]
 1661 0008 3960     		str	r1, [r7]
 732:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		( ( EventGroup_t * ) xEventGroup )->uxEventGroupNumber = uxEventGroupNumber;
 1662              		.loc 1 732 0
 1663 000a 7B68     		ldr	r3, [r7, #4]
 1664 000c 3A68     		ldr	r2, [r7]
 1665 000e 9A61     		str	r2, [r3, #24]
 733:Firmware/Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1666              		.loc 1 733 0
 1667 0010 00BF     		nop
 1668 0012 0C37     		adds	r7, r7, #12
 1669              	.LCFI76:
 1670              		.cfi_def_cfa_offset 4
 1671 0014 BD46     		mov	sp, r7
 1672              	.LCFI77:
 1673              		.cfi_def_cfa_register 13
 1674              		@ sp needed
 1675 0016 5DF8047B 		ldr	r7, [sp], #4
 1676              	.LCFI78:
 1677              		.cfi_restore 7
 1678              		.cfi_def_cfa_offset 0
 1679 001a 7047     		bx	lr
 1680              		.cfi_endproc
 1681              	.LFE18:
 1683              		.text
 1684              	.Letext0:
 1685              		.file 3 "/home/zht/stm32tools/arm-gcc/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
ARM GAS  /tmp/ccDnIGO0.s 			page 47


 1686              		.file 4 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/machine/_default_types.h"
 1687              		.file 5 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/lock.h"
 1688              		.file 6 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/_types.h"
 1689              		.file 7 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/reent.h"
 1690              		.file 8 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/stdlib.h"
 1691              		.file 9 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/_stdint.h"
 1692              		.file 10 "Firmware/Core/Inc/FreeRTOSConfig.h"
 1693              		.file 11 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1694              		.file 12 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1695              		.file 13 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h"
ARM GAS  /tmp/ccDnIGO0.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 event_groups.c
     /tmp/ccDnIGO0.s:18     .text.xEventGroupCreateStatic:0000000000000000 $t
     /tmp/ccDnIGO0.s:25     .text.xEventGroupCreateStatic:0000000000000000 xEventGroupCreateStatic
     /tmp/ccDnIGO0.s:135    .text.xEventGroupCreate:0000000000000000 $t
     /tmp/ccDnIGO0.s:142    .text.xEventGroupCreate:0000000000000000 xEventGroupCreate
     /tmp/ccDnIGO0.s:197    .text.xEventGroupSync:0000000000000000 $t
     /tmp/ccDnIGO0.s:204    .text.xEventGroupSync:0000000000000000 xEventGroupSync
     /tmp/ccDnIGO0.s:1048   .text.xEventGroupSetBits:0000000000000000 xEventGroupSetBits
     /tmp/ccDnIGO0.s:463    .text.xEventGroupSync:0000000000000154 $d
     /tmp/ccDnIGO0.s:468    .text.xEventGroupWaitBits:0000000000000000 $t
     /tmp/ccDnIGO0.s:475    .text.xEventGroupWaitBits:0000000000000000 xEventGroupWaitBits
     /tmp/ccDnIGO0.s:1451   .text.prvTestWaitCondition:0000000000000000 prvTestWaitCondition
     /tmp/ccDnIGO0.s:785    .text.xEventGroupWaitBits:0000000000000190 $d
     /tmp/ccDnIGO0.s:790    .text.xEventGroupClearBits:0000000000000000 $t
     /tmp/ccDnIGO0.s:797    .text.xEventGroupClearBits:0000000000000000 xEventGroupClearBits
     /tmp/ccDnIGO0.s:900    .text.xEventGroupClearBitsFromISR:0000000000000000 $t
     /tmp/ccDnIGO0.s:907    .text.xEventGroupClearBitsFromISR:0000000000000000 xEventGroupClearBitsFromISR
     /tmp/ccDnIGO0.s:948    .text.xEventGroupClearBitsFromISR:0000000000000024 $d
     /tmp/ccDnIGO0.s:1408   .text.vEventGroupClearBitsCallback:0000000000000000 vEventGroupClearBitsCallback
     /tmp/ccDnIGO0.s:953    .text.xEventGroupGetBitsFromISR:0000000000000000 $t
     /tmp/ccDnIGO0.s:960    .text.xEventGroupGetBitsFromISR:0000000000000000 xEventGroupGetBitsFromISR
     /tmp/ccDnIGO0.s:1041   .text.xEventGroupSetBits:0000000000000000 $t
     /tmp/ccDnIGO0.s:1256   .text.vEventGroupDelete:0000000000000000 $t
     /tmp/ccDnIGO0.s:1263   .text.vEventGroupDelete:0000000000000000 vEventGroupDelete
     /tmp/ccDnIGO0.s:1357   .text.vEventGroupSetBitsCallback:0000000000000000 $t
     /tmp/ccDnIGO0.s:1364   .text.vEventGroupSetBitsCallback:0000000000000000 vEventGroupSetBitsCallback
     /tmp/ccDnIGO0.s:1401   .text.vEventGroupClearBitsCallback:0000000000000000 $t
     /tmp/ccDnIGO0.s:1445   .text.prvTestWaitCondition:0000000000000000 $t
     /tmp/ccDnIGO0.s:1520   .text.xEventGroupSetBitsFromISR:0000000000000000 $t
     /tmp/ccDnIGO0.s:1527   .text.xEventGroupSetBitsFromISR:0000000000000000 xEventGroupSetBitsFromISR
     /tmp/ccDnIGO0.s:1569   .text.xEventGroupSetBitsFromISR:0000000000000024 $d
     /tmp/ccDnIGO0.s:1574   .text.uxEventGroupGetNumber:0000000000000000 $t
     /tmp/ccDnIGO0.s:1581   .text.uxEventGroupGetNumber:0000000000000000 uxEventGroupGetNumber
     /tmp/ccDnIGO0.s:1636   .text.vEventGroupSetNumber:0000000000000000 $t
     /tmp/ccDnIGO0.s:1643   .text.vEventGroupSetNumber:0000000000000000 vEventGroupSetNumber
                           .group:0000000000000000 wm4.0.66eb26e6ef234a179f62cd8806fe3c00
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.stddef.h.39.57db33e786ccd422e31be63a26e19309
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
ARM GAS  /tmp/ccDnIGO0.s 			page 49


                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.31.b62728e58c3d6bdf0600b01b58224977
                           .group:0000000000000000 wm4.projdefs.h.29.3472c8470d131a5f474bc7437ea94609
                           .group:0000000000000000 wm4.portmacro.h.30.110a3580e768a63cdd084aa29b33cb01
                           .group:0000000000000000 wm4.portable.h.64.00b423ba030e23bed354b037664af7a6
                           .group:0000000000000000 wm4.mpu_wrappers.h.29.89d425470b0b1ff39fbd61026b3dc073
                           .group:0000000000000000 wm4.FreeRTOS.h.66.a6a3890d948540b7d907430686cf5981
                           .group:0000000000000000 wm4.list.h.61.bafeaa82806d71ae8917c6d7827fc3d2
                           .group:0000000000000000 wm4.task.h.46.0d11769cee96bf77a599bac125eeecf9
                           .group:0000000000000000 wm4.timers.h.54.b1628205d6a51adaf32536954da510c0

UNDEFINED SYMBOLS
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskSuspendAll
vTaskPlaceOnUnorderedEventList
xTaskResumeAll
uxTaskResetEventItemValue
vPortEnterCritical
vPortExitCritical
xTimerPendFunctionCallFromISR
vTaskRemoveFromUnorderedEventList
vPortFree
