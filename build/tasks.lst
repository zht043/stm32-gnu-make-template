ARM GAS  /tmp/ccIHW9zM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	pxCurrentTCB
  18              		.section	.bss.pxCurrentTCB,"aw",%nobits
  19              		.align	2
  22              	pxCurrentTCB:
  23 0000 00000000 		.space	4
  24              		.section	.bss.pxReadyTasksLists,"aw",%nobits
  25              		.align	2
  28              	pxReadyTasksLists:
  29 0000 00000000 		.space	1120
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.section	.bss.xDelayedTaskList1,"aw",%nobits
  31              		.align	2
  34              	xDelayedTaskList1:
  35 0000 00000000 		.space	20
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.section	.bss.xDelayedTaskList2,"aw",%nobits
  37              		.align	2
  40              	xDelayedTaskList2:
  41 0000 00000000 		.space	20
  41      00000000 
  41      00000000 
  41      00000000 
  41      00000000 
  42              		.section	.bss.pxDelayedTaskList,"aw",%nobits
  43              		.align	2
  46              	pxDelayedTaskList:
  47 0000 00000000 		.space	4
  48              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
  49              		.align	2
  52              	pxOverflowDelayedTaskList:
  53 0000 00000000 		.space	4
  54              		.section	.bss.xPendingReadyList,"aw",%nobits
  55              		.align	2
  58              	xPendingReadyList:
  59 0000 00000000 		.space	20
ARM GAS  /tmp/ccIHW9zM.s 			page 2


  59      00000000 
  59      00000000 
  59      00000000 
  59      00000000 
  60              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
  61              		.align	2
  64              	xTasksWaitingTermination:
  65 0000 00000000 		.space	20
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
  67              		.align	2
  70              	uxDeletedTasksWaitingCleanUp:
  71 0000 00000000 		.space	4
  72              		.section	.bss.xSuspendedTaskList,"aw",%nobits
  73              		.align	2
  76              	xSuspendedTaskList:
  77 0000 00000000 		.space	20
  77      00000000 
  77      00000000 
  77      00000000 
  77      00000000 
  78              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
  79              		.align	2
  82              	uxCurrentNumberOfTasks:
  83 0000 00000000 		.space	4
  84              		.section	.bss.xTickCount,"aw",%nobits
  85              		.align	2
  88              	xTickCount:
  89 0000 00000000 		.space	4
  90              		.section	.bss.uxTopReadyPriority,"aw",%nobits
  91              		.align	2
  94              	uxTopReadyPriority:
  95 0000 00000000 		.space	4
  96              		.section	.bss.xSchedulerRunning,"aw",%nobits
  97              		.align	2
 100              	xSchedulerRunning:
 101 0000 00000000 		.space	4
 102              		.section	.bss.uxPendedTicks,"aw",%nobits
 103              		.align	2
 106              	uxPendedTicks:
 107 0000 00000000 		.space	4
 108              		.section	.bss.xYieldPending,"aw",%nobits
 109              		.align	2
 112              	xYieldPending:
 113 0000 00000000 		.space	4
 114              		.section	.bss.xNumOfOverflows,"aw",%nobits
 115              		.align	2
 118              	xNumOfOverflows:
 119 0000 00000000 		.space	4
 120              		.section	.bss.uxTaskNumber,"aw",%nobits
 121              		.align	2
 124              	uxTaskNumber:
 125 0000 00000000 		.space	4
 126              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
ARM GAS  /tmp/ccIHW9zM.s 			page 3


 127              		.align	2
 130              	xNextTaskUnblockTime:
 131 0000 00000000 		.space	4
 132              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 133              		.align	2
 136              	xIdleTaskHandle:
 137 0000 00000000 		.space	4
 138              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 139              		.align	2
 142              	uxSchedulerSuspended:
 143 0000 00000000 		.space	4
 144              		.section	.text.xTaskCreateStatic,"ax",%progbits
 145              		.align	1
 146              		.global	xTaskCreateStatic
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	xTaskCreateStatic:
 153              	.LFB4:
 154              		.file 1 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 4


  37:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
ARM GAS  /tmp/ccIHW9zM.s 			page 5


  94:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
ARM GAS  /tmp/ccIHW9zM.s 			page 6


 151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIHW9zM.s 			page 7


 208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 232:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 235:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 243:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 248:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 261:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 263:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 264:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
ARM GAS  /tmp/ccIHW9zM.s 			page 8


 265:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 269:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 271:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 273:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 276:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 277:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 283:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 286:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 287:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 290:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 304:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 308:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 309:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 312:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 313:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
ARM GAS  /tmp/ccIHW9zM.s 			page 9


 322:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 323:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 324:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 334:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 338:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 340:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 341:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 344:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 345:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 347:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};	/*< Prioritised read
 352:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = {0};								/*< Delayed tasks. */
 353:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = {0};								/*< Delayed tasks (two lists are used
 354:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;					/*< Points to the delayed ta
 355:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;			/*< Points to the dela
 356:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = {0};								/*< Tasks that have been readied whil
 357:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination = {0};					/*< Tasks that have been deleted
 361:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 364:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = {0};						/*< Tasks that are currently suspende
 368:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 370:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 371:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
ARM GAS  /tmp/ccIHW9zM.s 			page 10


 379:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 383:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 391:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 407:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 408:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 410:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 411:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 412:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 414:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 415:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 418:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 420:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 421:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 422:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 423:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 424:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 425:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 427:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 429:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 430:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 431:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 432:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 433:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 435:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 11


 436:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 438:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 439:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 440:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 441:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 442:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 443:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 445:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 446:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 447:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 448:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 449:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 450:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 451:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 452:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 453:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 454:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 455:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 457:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 459:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 460:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 461:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 463:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 464:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 465:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 466:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 467:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 468:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 469:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 470:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 471:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 472:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 474:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 477:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 478:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 479:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 480:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 481:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 482:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 483:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 484:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 485:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 486:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 488:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 489:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 490:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 491:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 492:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/ccIHW9zM.s 			page 12


 493:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 494:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 496:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 498:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 499:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 500:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 501:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 502:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 503:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 504:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 505:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 507:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 509:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 511:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 512:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 513:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 514:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 515:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 516:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 517:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 518:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 519:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 520:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 522:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 523:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 524:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 526:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 527:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 528:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 529:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 530:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 532:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 533:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 534:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 535:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 536:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 537:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 538:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 540:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 541:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 542:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 543:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 544:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 545:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 546:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 547:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 548:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 549:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  /tmp/ccIHW9zM.s 			page 13


 550:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 551:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 552:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 553:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 554:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 555:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 556:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 557:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 558:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 559:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 562:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 563:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 564:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 565:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 566:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 567:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 568:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 569:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 570:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 571:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 572:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 574:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 576:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 577:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 578:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 579:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 580:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 581:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 582:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 155              		.loc 1 582 0
 156              		.cfi_startproc
 157              		@ args = 12, pretend = 0, frame = 40
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159 0000 80B5     		push	{r7, lr}
 160              	.LCFI0:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 8EB0     		sub	sp, sp, #56
 165              	.LCFI1:
 166              		.cfi_def_cfa_offset 64
 167 0004 04AF     		add	r7, sp, #16
 168              	.LCFI2:
 169              		.cfi_def_cfa 7, 48
 170 0006 F860     		str	r0, [r7, #12]
 171 0008 B960     		str	r1, [r7, #8]
 172 000a 7A60     		str	r2, [r7, #4]
 173 000c 3B60     		str	r3, [r7]
 583:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 584:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 585:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 174              		.loc 1 586 0
ARM GAS  /tmp/ccIHW9zM.s 			page 14


 175 000e 7B6B     		ldr	r3, [r7, #52]
 176 0010 002B     		cmp	r3, #0
 177 0012 09D1     		bne	.L2
 178              	.LBB113:
 179              	.LBB114:
 180              		.file 2 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
ARM GAS  /tmp/ccIHW9zM.s 			page 15


  52:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
ARM GAS  /tmp/ccIHW9zM.s 			page 16


 109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
ARM GAS  /tmp/ccIHW9zM.s 			page 17


 166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 181              		.loc 2 195 0 discriminator 1
 182              		.syntax unified
 183              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 184 0014 4FF05003 			mov r3, #80												
 185 0018 83F31188 		msr basepri, r3											
 186 001c BFF36F8F 		isb														
 187 0020 BFF34F8F 		dsb														
 188              	
 189              	@ 0 "" 2
 190              		.thumb
 191              		.syntax unified
 192 0024 3B62     		str	r3, [r7, #32]
 193              	.L3:
 194              	.LBE114:
 195              	.LBE113:
 196              		.loc 1 586 0 discriminator 1
 197 0026 FEE7     		b	.L3
 198              	.L2:
 587:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 199              		.loc 1 587 0
 200 0028 BB6B     		ldr	r3, [r7, #56]
 201 002a 002B     		cmp	r3, #0
 202 002c 09D1     		bne	.L4
 203              	.LBB115:
 204              	.LBB116:
 205              		.loc 2 195 0 discriminator 1
 206              		.syntax unified
ARM GAS  /tmp/ccIHW9zM.s 			page 18


 207              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 208 002e 4FF05003 			mov r3, #80												
 209 0032 83F31188 		msr basepri, r3											
 210 0036 BFF36F8F 		isb														
 211 003a BFF34F8F 		dsb														
 212              	
 213              	@ 0 "" 2
 214              		.thumb
 215              		.syntax unified
 216 003e FB61     		str	r3, [r7, #28]
 217              	.L5:
 218              	.LBE116:
 219              	.LBE115:
 220              		.loc 1 587 0 discriminator 2
 221 0040 FEE7     		b	.L5
 222              	.L4:
 223              	.LBB117:
 588:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 590:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 591:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 592:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 593:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 594:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 224              		.loc 1 594 0
 225 0042 5C23     		movs	r3, #92
 226 0044 3B61     		str	r3, [r7, #16]
 595:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 227              		.loc 1 595 0
 228 0046 3B69     		ldr	r3, [r7, #16]
 229 0048 5C2B     		cmp	r3, #92
 230 004a 09D0     		beq	.L6
 231              	.LBB118:
 232              	.LBB119:
 233              		.loc 2 195 0 discriminator 1
 234              		.syntax unified
 235              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 236 004c 4FF05003 			mov r3, #80												
 237 0050 83F31188 		msr basepri, r3											
 238 0054 BFF36F8F 		isb														
 239 0058 BFF34F8F 		dsb														
 240              	
 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244 005c BB61     		str	r3, [r7, #24]
 245              	.L7:
 246              	.LBE119:
 247              	.LBE118:
 248              		.loc 1 595 0 discriminator 3
 249 005e FEE7     		b	.L7
 250              	.L6:
 251              	.LBE117:
 596:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 597:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 598:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 599:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 19


 600:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 252              		.loc 1 600 0
 253 0060 BB6B     		ldr	r3, [r7, #56]
 254 0062 002B     		cmp	r3, #0
 255 0064 1ED0     		beq	.L8
 256              		.loc 1 600 0 is_stmt 0 discriminator 1
 257 0066 7B6B     		ldr	r3, [r7, #52]
 258 0068 002B     		cmp	r3, #0
 259 006a 1BD0     		beq	.L8
 601:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 603:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 260              		.loc 1 604 0 is_stmt 1
 261 006c BB6B     		ldr	r3, [r7, #56]
 262 006e 7B62     		str	r3, [r7, #36]
 605:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 263              		.loc 1 605 0
 264 0070 7B6A     		ldr	r3, [r7, #36]
 265 0072 7A6B     		ldr	r2, [r7, #52]
 266 0074 1A63     		str	r2, [r3, #48]
 606:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 608:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 267              		.loc 1 611 0
 268 0076 7B6A     		ldr	r3, [r7, #36]
 269 0078 0222     		movs	r2, #2
 270 007a 83F85920 		strb	r2, [r3, #89]
 612:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 271              		.loc 1 615 0
 272 007e 0023     		movs	r3, #0
 273 0080 0393     		str	r3, [sp, #12]
 274 0082 7B6A     		ldr	r3, [r7, #36]
 275 0084 0293     		str	r3, [sp, #8]
 276 0086 07F11403 		add	r3, r7, #20
 277 008a 0193     		str	r3, [sp, #4]
 278 008c 3B6B     		ldr	r3, [r7, #48]
 279 008e 0093     		str	r3, [sp]
 280 0090 3B68     		ldr	r3, [r7]
 281 0092 7A68     		ldr	r2, [r7, #4]
 282 0094 B968     		ldr	r1, [r7, #8]
 283 0096 F868     		ldr	r0, [r7, #12]
 284 0098 FFF7FEFF 		bl	prvInitialiseNewTask
 616:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 285              		.loc 1 616 0
 286 009c 786A     		ldr	r0, [r7, #36]
 287 009e FFF7FEFF 		bl	prvAddNewTaskToReadyList
 288 00a2 01E0     		b	.L9
 289              	.L8:
 617:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/ccIHW9zM.s 			page 20


 619:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 290              		.loc 1 620 0
 291 00a4 0023     		movs	r3, #0
 292 00a6 7B61     		str	r3, [r7, #20]
 293              	.L9:
 621:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 294              		.loc 1 623 0
 295 00a8 7B69     		ldr	r3, [r7, #20]
 624:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 296              		.loc 1 624 0
 297 00aa 1846     		mov	r0, r3
 298 00ac 2837     		adds	r7, r7, #40
 299              	.LCFI3:
 300              		.cfi_def_cfa_offset 8
 301 00ae BD46     		mov	sp, r7
 302              	.LCFI4:
 303              		.cfi_def_cfa_register 13
 304              		@ sp needed
 305 00b0 80BD     		pop	{r7, pc}
 306              		.cfi_endproc
 307              	.LFE4:
 309              		.section	.text.xTaskCreate,"ax",%progbits
 310              		.align	1
 311              		.global	xTaskCreate
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	xTaskCreate:
 318              	.LFB5:
 625:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 630:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 632:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 637:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 638:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 639:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 640:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 641:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 642:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 643:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 644:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 645:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 647:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 648:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 21


 649:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 650:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 651:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 652:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 653:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 654:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 655:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 656:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 657:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 658:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 659:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 660:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 661:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 662:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 663:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 664:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 665:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 666:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 667:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 668:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 670:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 671:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 673:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 674:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 676:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 677:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 678:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 679:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 680:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 683:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 685:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 687:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 688:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 689:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 692:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 693:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 694:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 697:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 698:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 699:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 700:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 701:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 703:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
 704:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 705:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
ARM GAS  /tmp/ccIHW9zM.s 			page 22


 706:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 707:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 708:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 709:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 710:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 711:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 712:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 713:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 715:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 716:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 717:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 719:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 720:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 721:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 723:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 724:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 727:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 728:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 729:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 730:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 731:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 732:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 319              		.loc 1 732 0
 320              		.cfi_startproc
 321              		@ args = 8, pretend = 0, frame = 32
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0000 80B5     		push	{r7, lr}
 324              	.LCFI5:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 7, -8
 327              		.cfi_offset 14, -4
 328 0002 8CB0     		sub	sp, sp, #48
 329              	.LCFI6:
 330              		.cfi_def_cfa_offset 56
 331 0004 04AF     		add	r7, sp, #16
 332              	.LCFI7:
 333              		.cfi_def_cfa 7, 40
 334 0006 F860     		str	r0, [r7, #12]
 335 0008 B960     		str	r1, [r7, #8]
 336 000a 3B60     		str	r3, [r7]
 337 000c 1346     		mov	r3, r2	@ movhi
 338 000e FB80     		strh	r3, [r7, #6]	@ movhi
 339              	.LBB120:
 733:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 734:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 735:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 736:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 737:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 739:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 740:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 741:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
ARM GAS  /tmp/ccIHW9zM.s 			page 23


 742:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 743:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 744:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 746:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 747:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 748:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 749:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 750:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 751:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 752:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 754:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 755:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 756:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 757:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 758:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 759:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 760:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 761:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 762:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 763:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 764:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 765:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 766:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 340              		.loc 1 766 0
 341 0010 FB88     		ldrh	r3, [r7, #6]
 342 0012 9B00     		lsls	r3, r3, #2
 343 0014 1846     		mov	r0, r3
 344 0016 FFF7FEFF 		bl	pvPortMalloc
 345 001a 7861     		str	r0, [r7, #20]
 767:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 768:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 346              		.loc 1 768 0
 347 001c 7B69     		ldr	r3, [r7, #20]
 348 001e 002B     		cmp	r3, #0
 349 0020 0ED0     		beq	.L12
 769:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 771:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 350              		.loc 1 771 0
 351 0022 5C20     		movs	r0, #92
 352 0024 FFF7FEFF 		bl	pvPortMalloc
 353 0028 F861     		str	r0, [r7, #28]
 772:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 773:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 354              		.loc 1 773 0
 355 002a FB69     		ldr	r3, [r7, #28]
 356 002c 002B     		cmp	r3, #0
 357 002e 03D0     		beq	.L13
 774:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 775:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 776:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 358              		.loc 1 776 0
 359 0030 FB69     		ldr	r3, [r7, #28]
 360 0032 7A69     		ldr	r2, [r7, #20]
 361 0034 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccIHW9zM.s 			page 24


 362 0036 05E0     		b	.L15
 363              	.L13:
 777:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 778:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 779:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 780:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 781:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 782:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 364              		.loc 1 782 0
 365 0038 7869     		ldr	r0, [r7, #20]
 366 003a FFF7FEFF 		bl	vPortFree
 367 003e 01E0     		b	.L15
 368              	.L12:
 783:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 784:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 785:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 786:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 787:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 369              		.loc 1 787 0
 370 0040 0023     		movs	r3, #0
 371 0042 FB61     		str	r3, [r7, #28]
 372              	.L15:
 373              	.LBE120:
 788:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 791:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 374              		.loc 1 792 0
 375 0044 FB69     		ldr	r3, [r7, #28]
 376 0046 002B     		cmp	r3, #0
 377 0048 17D0     		beq	.L16
 793:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 794:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 795:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 796:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 797:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 798:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 378              		.loc 1 798 0
 379 004a FB69     		ldr	r3, [r7, #28]
 380 004c 0022     		movs	r2, #0
 381 004e 83F85920 		strb	r2, [r3, #89]
 799:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 801:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 802:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 382              		.loc 1 802 0
 383 0052 FA88     		ldrh	r2, [r7, #6]
 384 0054 0023     		movs	r3, #0
 385 0056 0393     		str	r3, [sp, #12]
 386 0058 FB69     		ldr	r3, [r7, #28]
 387 005a 0293     		str	r3, [sp, #8]
 388 005c FB6A     		ldr	r3, [r7, #44]
 389 005e 0193     		str	r3, [sp, #4]
 390 0060 BB6A     		ldr	r3, [r7, #40]
 391 0062 0093     		str	r3, [sp]
 392 0064 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccIHW9zM.s 			page 25


 393 0066 B968     		ldr	r1, [r7, #8]
 394 0068 F868     		ldr	r0, [r7, #12]
 395 006a FFF7FEFF 		bl	prvInitialiseNewTask
 803:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 396              		.loc 1 803 0
 397 006e F869     		ldr	r0, [r7, #28]
 398 0070 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 804:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 399              		.loc 1 804 0
 400 0074 0123     		movs	r3, #1
 401 0076 BB61     		str	r3, [r7, #24]
 402 0078 02E0     		b	.L17
 403              	.L16:
 805:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 806:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 807:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 808:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 404              		.loc 1 808 0
 405 007a 4FF0FF33 		mov	r3, #-1
 406 007e BB61     		str	r3, [r7, #24]
 407              	.L17:
 809:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 811:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 408              		.loc 1 811 0
 409 0080 BB69     		ldr	r3, [r7, #24]
 812:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 410              		.loc 1 812 0
 411 0082 1846     		mov	r0, r3
 412 0084 2037     		adds	r7, r7, #32
 413              	.LCFI8:
 414              		.cfi_def_cfa_offset 8
 415 0086 BD46     		mov	sp, r7
 416              	.LCFI9:
 417              		.cfi_def_cfa_register 13
 418              		@ sp needed
 419 0088 80BD     		pop	{r7, pc}
 420              		.cfi_endproc
 421              	.LFE5:
 423              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 424              		.align	1
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu fpv4-sp-d16
 430              	prvInitialiseNewTask:
 431              	.LFB6:
 813:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 814:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 816:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 818:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 819:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 820:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 821:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 822:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  /tmp/ccIHW9zM.s 			page 26


 823:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 824:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 825:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 432              		.loc 1 825 0
 433              		.cfi_startproc
 434              		@ args = 16, pretend = 0, frame = 32
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436 0000 80B5     		push	{r7, lr}
 437              	.LCFI10:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 7, -8
 440              		.cfi_offset 14, -4
 441 0002 88B0     		sub	sp, sp, #32
 442              	.LCFI11:
 443              		.cfi_def_cfa_offset 40
 444 0004 00AF     		add	r7, sp, #0
 445              	.LCFI12:
 446              		.cfi_def_cfa_register 7
 447 0006 F860     		str	r0, [r7, #12]
 448 0008 B960     		str	r1, [r7, #8]
 449 000a 7A60     		str	r2, [r7, #4]
 450 000c 3B60     		str	r3, [r7]
 826:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 827:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 828:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 829:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 830:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 831:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 832:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 834:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 835:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 836:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 837:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 839:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 841:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 842:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 843:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 844:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 846:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 847:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 451              		.loc 1 847 0
 452 000e 3B6B     		ldr	r3, [r7, #48]
 453 0010 186B     		ldr	r0, [r3, #48]
 454 0012 7B68     		ldr	r3, [r7, #4]
 455 0014 9B00     		lsls	r3, r3, #2
 456 0016 1A46     		mov	r2, r3
 457 0018 A521     		movs	r1, #165
 458 001a FFF7FEFF 		bl	memset
 848:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 849:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 851:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 852:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
ARM GAS  /tmp/ccIHW9zM.s 			page 27


 853:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 854:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 855:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 856:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 857:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 459              		.loc 1 857 0
 460 001e 3B6B     		ldr	r3, [r7, #48]
 461 0020 1A6B     		ldr	r2, [r3, #48]
 462 0022 7B68     		ldr	r3, [r7, #4]
 463 0024 03F18043 		add	r3, r3, #1073741824
 464 0028 013B     		subs	r3, r3, #1
 465 002a 9B00     		lsls	r3, r3, #2
 466 002c 1344     		add	r3, r3, r2
 467 002e BB61     		str	r3, [r7, #24]
 858:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 468              		.loc 1 858 0
 469 0030 BB69     		ldr	r3, [r7, #24]
 470 0032 23F00703 		bic	r3, r3, #7
 471 0036 BB61     		str	r3, [r7, #24]
 859:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 860:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 861:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 472              		.loc 1 861 0
 473 0038 BB69     		ldr	r3, [r7, #24]
 474 003a 03F00703 		and	r3, r3, #7
 475 003e 002B     		cmp	r3, #0
 476 0040 09D0     		beq	.L20
 477              	.LBB121:
 478              	.LBB122:
 479              		.loc 2 195 0 discriminator 1
 480              		.syntax unified
 481              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 482 0042 4FF05003 			mov r3, #80												
 483 0046 83F31188 		msr basepri, r3											
 484 004a BFF36F8F 		isb														
 485 004e BFF34F8F 		dsb														
 486              	
 487              	@ 0 "" 2
 488              		.thumb
 489              		.syntax unified
 490 0052 7B61     		str	r3, [r7, #20]
 491              	.L21:
 492              	.LBE122:
 493              	.LBE121:
 494              		.loc 1 861 0 discriminator 1
 495 0054 FEE7     		b	.L21
 496              	.L20:
 862:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 863:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 865:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 866:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 867:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 869:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 871:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
ARM GAS  /tmp/ccIHW9zM.s 			page 28


 872:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 873:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 874:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 875:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 876:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 877:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 879:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 880:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 883:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 885:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 497              		.loc 1 885 0
 498 0056 0023     		movs	r3, #0
 499 0058 FB61     		str	r3, [r7, #28]
 500 005a 12E0     		b	.L22
 501              	.L25:
 886:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 887:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 502              		.loc 1 887 0
 503 005c BA68     		ldr	r2, [r7, #8]
 504 005e FB69     		ldr	r3, [r7, #28]
 505 0060 1344     		add	r3, r3, r2
 506 0062 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 507 0064 3A6B     		ldr	r2, [r7, #48]
 508 0066 FB69     		ldr	r3, [r7, #28]
 509 0068 1344     		add	r3, r3, r2
 510 006a 3433     		adds	r3, r3, #52
 511 006c 0A46     		mov	r2, r1
 512 006e 1A70     		strb	r2, [r3]
 888:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 889:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 891:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 892:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 513              		.loc 1 892 0
 514 0070 BA68     		ldr	r2, [r7, #8]
 515 0072 FB69     		ldr	r3, [r7, #28]
 516 0074 1344     		add	r3, r3, r2
 517 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 0078 002B     		cmp	r3, #0
 519 007a 06D0     		beq	.L28
 885:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 520              		.loc 1 885 0 discriminator 2
 521 007c FB69     		ldr	r3, [r7, #28]
 522 007e 0133     		adds	r3, r3, #1
 523 0080 FB61     		str	r3, [r7, #28]
 524              	.L22:
 885:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 525              		.loc 1 885 0 is_stmt 0 discriminator 1
 526 0082 FB69     		ldr	r3, [r7, #28]
 527 0084 0F2B     		cmp	r3, #15
 528 0086 E9D9     		bls	.L25
 529 0088 00E0     		b	.L24
 530              	.L28:
ARM GAS  /tmp/ccIHW9zM.s 			page 29


 893:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 894:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 531              		.loc 1 894 0 is_stmt 1
 532 008a 00BF     		nop
 533              	.L24:
 895:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 896:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 897:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 898:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 899:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 900:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 901:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 903:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 904:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 534              		.loc 1 904 0
 535 008c 3B6B     		ldr	r3, [r7, #48]
 536 008e 0022     		movs	r2, #0
 537 0090 83F84320 		strb	r2, [r3, #67]
 905:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 906:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 907:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 908:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 538              		.loc 1 908 0
 539 0094 BB6A     		ldr	r3, [r7, #40]
 540 0096 372B     		cmp	r3, #55
 541 0098 01D9     		bls	.L26
 909:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 910:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 542              		.loc 1 910 0
 543 009a 3723     		movs	r3, #55
 544 009c BB62     		str	r3, [r7, #40]
 545              	.L26:
 911:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 915:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 916:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 917:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 546              		.loc 1 917 0
 547 009e 3B6B     		ldr	r3, [r7, #48]
 548 00a0 BA6A     		ldr	r2, [r7, #40]
 549 00a2 DA62     		str	r2, [r3, #44]
 918:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 919:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 920:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 550              		.loc 1 920 0
 551 00a4 3B6B     		ldr	r3, [r7, #48]
 552 00a6 BA6A     		ldr	r2, [r7, #40]
 553 00a8 DA64     		str	r2, [r3, #76]
 921:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 554              		.loc 1 921 0
 555 00aa 3B6B     		ldr	r3, [r7, #48]
 556 00ac 0022     		movs	r2, #0
 557 00ae 1A65     		str	r2, [r3, #80]
 922:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIHW9zM.s 			page 30


 923:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 924:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 925:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 558              		.loc 1 925 0
 559 00b0 3B6B     		ldr	r3, [r7, #48]
 560 00b2 0433     		adds	r3, r3, #4
 561 00b4 1846     		mov	r0, r3
 562 00b6 FFF7FEFF 		bl	vListInitialiseItem
 926:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 563              		.loc 1 926 0
 564 00ba 3B6B     		ldr	r3, [r7, #48]
 565 00bc 1833     		adds	r3, r3, #24
 566 00be 1846     		mov	r0, r3
 567 00c0 FFF7FEFF 		bl	vListInitialiseItem
 927:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 928:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 929:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 930:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 568              		.loc 1 930 0
 569 00c4 3B6B     		ldr	r3, [r7, #48]
 570 00c6 3A6B     		ldr	r2, [r7, #48]
 571 00c8 1A61     		str	r2, [r3, #16]
 931:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 932:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 933:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 572              		.loc 1 933 0
 573 00ca BB6A     		ldr	r3, [r7, #40]
 574 00cc C3F13802 		rsb	r2, r3, #56
 575 00d0 3B6B     		ldr	r3, [r7, #48]
 576 00d2 9A61     		str	r2, [r3, #24]
 934:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 577              		.loc 1 934 0
 578 00d4 3B6B     		ldr	r3, [r7, #48]
 579 00d6 3A6B     		ldr	r2, [r7, #48]
 580 00d8 5A62     		str	r2, [r3, #36]
 935:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 937:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 938:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 939:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 940:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 941:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 942:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 943:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 944:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 945:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 946:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 947:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 949:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 950:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 951:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 952:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 953:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 954:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 955:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 956:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
ARM GAS  /tmp/ccIHW9zM.s 			page 31


 957:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 958:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 959:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 961:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 962:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 963:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 964:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 966:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 967:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 968:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 969:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 970:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 971:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 972:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 973:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 975:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 581              		.loc 1 976 0
 582 00da 3B6B     		ldr	r3, [r7, #48]
 583 00dc 0022     		movs	r2, #0
 584 00de 5A65     		str	r2, [r3, #84]
 977:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 585              		.loc 1 977 0
 586 00e0 3B6B     		ldr	r3, [r7, #48]
 587 00e2 0022     		movs	r2, #0
 588 00e4 83F85820 		strb	r2, [r3, #88]
 978:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 982:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 984:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 985:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 986:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 987:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 989:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 990:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 991:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 995:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 996:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 997:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
 998:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 999:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1000:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1001:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1002:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1003:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1004:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 589              		.loc 1 1004 0
ARM GAS  /tmp/ccIHW9zM.s 			page 32


 590 00e8 3A68     		ldr	r2, [r7]
 591 00ea F968     		ldr	r1, [r7, #12]
 592 00ec B869     		ldr	r0, [r7, #24]
 593 00ee FFF7FEFF 		bl	pxPortInitialiseStack
 594 00f2 0246     		mov	r2, r0
 595 00f4 3B6B     		ldr	r3, [r7, #48]
 596 00f6 1A60     		str	r2, [r3]
1005:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1006:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1007:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1008:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 597              		.loc 1 1008 0
 598 00f8 FB6A     		ldr	r3, [r7, #44]
 599 00fa 002B     		cmp	r3, #0
 600 00fc 02D0     		beq	.L29
1009:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1010:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1011:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1012:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 601              		.loc 1 1012 0
 602 00fe FB6A     		ldr	r3, [r7, #44]
 603 0100 3A6B     		ldr	r2, [r7, #48]
 604 0102 1A60     		str	r2, [r3]
 605              	.L29:
1013:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1014:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1015:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1016:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1017:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1018:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 606              		.loc 1 1018 0
 607 0104 00BF     		nop
 608 0106 2037     		adds	r7, r7, #32
 609              	.LCFI13:
 610              		.cfi_def_cfa_offset 8
 611 0108 BD46     		mov	sp, r7
 612              	.LCFI14:
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 010a 80BD     		pop	{r7, pc}
 616              		.cfi_endproc
 617              	.LFE6:
 619              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 620              		.align	1
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu fpv4-sp-d16
 626              	prvAddNewTaskToReadyList:
 627              	.LFB7:
1019:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1020:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1021:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1022:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 628              		.loc 1 1022 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccIHW9zM.s 			page 33


 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              	.LCFI15:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 82B0     		sub	sp, sp, #8
 638              	.LCFI16:
 639              		.cfi_def_cfa_offset 16
 640 0004 00AF     		add	r7, sp, #0
 641              	.LCFI17:
 642              		.cfi_def_cfa_register 7
 643 0006 7860     		str	r0, [r7, #4]
1023:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1024:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1025:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 644              		.loc 1 1025 0
 645 0008 FFF7FEFF 		bl	vPortEnterCritical
1026:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1027:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 646              		.loc 1 1027 0
 647 000c 2D4B     		ldr	r3, .L36
 648 000e 1B68     		ldr	r3, [r3]
 649 0010 0133     		adds	r3, r3, #1
 650 0012 2C4A     		ldr	r2, .L36
 651 0014 1360     		str	r3, [r2]
1028:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 652              		.loc 1 1028 0
 653 0016 2C4B     		ldr	r3, .L36+4
 654 0018 1B68     		ldr	r3, [r3]
 655 001a 002B     		cmp	r3, #0
 656 001c 09D1     		bne	.L31
1029:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1031:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1032:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 657              		.loc 1 1032 0
 658 001e 2A4A     		ldr	r2, .L36+4
 659 0020 7B68     		ldr	r3, [r7, #4]
 660 0022 1360     		str	r3, [r2]
1033:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1034:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 661              		.loc 1 1034 0
 662 0024 274B     		ldr	r3, .L36
 663 0026 1B68     		ldr	r3, [r3]
 664 0028 012B     		cmp	r3, #1
 665 002a 10D1     		bne	.L32
1035:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1036:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1037:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1038:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1039:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
 666              		.loc 1 1039 0
 667 002c FFF7FEFF 		bl	prvInitialiseTaskLists
 668 0030 0DE0     		b	.L32
 669              	.L31:
1040:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccIHW9zM.s 			page 34


1041:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1042:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1044:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1046:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1047:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1048:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1049:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1050:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1051:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 670              		.loc 1 1051 0
 671 0032 264B     		ldr	r3, .L36+8
 672 0034 1B68     		ldr	r3, [r3]
 673 0036 002B     		cmp	r3, #0
 674 0038 09D1     		bne	.L32
1052:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1053:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 675              		.loc 1 1053 0
 676 003a 234B     		ldr	r3, .L36+4
 677 003c 1B68     		ldr	r3, [r3]
 678 003e DA6A     		ldr	r2, [r3, #44]
 679 0040 7B68     		ldr	r3, [r7, #4]
 680 0042 DB6A     		ldr	r3, [r3, #44]
 681 0044 9A42     		cmp	r2, r3
 682 0046 02D8     		bhi	.L32
1054:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1055:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 683              		.loc 1 1055 0
 684 0048 1F4A     		ldr	r2, .L36+4
 685 004a 7B68     		ldr	r3, [r7, #4]
 686 004c 1360     		str	r3, [r2]
 687              	.L32:
1056:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1057:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1058:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1059:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1060:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1061:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1062:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1063:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1064:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1065:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1066:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1067:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
 688              		.loc 1 1068 0
 689 004e 204B     		ldr	r3, .L36+12
 690 0050 1B68     		ldr	r3, [r3]
 691 0052 0133     		adds	r3, r3, #1
 692 0054 1E4A     		ldr	r2, .L36+12
 693 0056 1360     		str	r3, [r2]
1069:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1070:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1071:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1072:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1073:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
ARM GAS  /tmp/ccIHW9zM.s 			page 35


 694              		.loc 1 1073 0
 695 0058 1D4B     		ldr	r3, .L36+12
 696 005a 1A68     		ldr	r2, [r3]
 697 005c 7B68     		ldr	r3, [r7, #4]
 698 005e 5A64     		str	r2, [r3, #68]
1074:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1075:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1076:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1077:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
 699              		.loc 1 1078 0
 700 0060 7B68     		ldr	r3, [r7, #4]
 701 0062 DA6A     		ldr	r2, [r3, #44]
 702 0064 1B4B     		ldr	r3, .L36+16
 703 0066 1B68     		ldr	r3, [r3]
 704 0068 9A42     		cmp	r2, r3
 705 006a 03D9     		bls	.L33
 706              		.loc 1 1078 0 is_stmt 0 discriminator 1
 707 006c 7B68     		ldr	r3, [r7, #4]
 708 006e DB6A     		ldr	r3, [r3, #44]
 709 0070 184A     		ldr	r2, .L36+16
 710 0072 1360     		str	r3, [r2]
 711              	.L33:
 712              		.loc 1 1078 0 discriminator 3
 713 0074 7B68     		ldr	r3, [r7, #4]
 714 0076 DA6A     		ldr	r2, [r3, #44]
 715 0078 1346     		mov	r3, r2
 716 007a 9B00     		lsls	r3, r3, #2
 717 007c 1344     		add	r3, r3, r2
 718 007e 9B00     		lsls	r3, r3, #2
 719 0080 154A     		ldr	r2, .L36+20
 720 0082 1A44     		add	r2, r2, r3
 721 0084 7B68     		ldr	r3, [r7, #4]
 722 0086 0433     		adds	r3, r3, #4
 723 0088 1946     		mov	r1, r3
 724 008a 1046     		mov	r0, r2
 725 008c FFF7FEFF 		bl	vListInsertEnd
1079:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1080:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1081:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1082:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 726              		.loc 1 1082 0 is_stmt 1 discriminator 3
 727 0090 FFF7FEFF 		bl	vPortExitCritical
1083:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
 728              		.loc 1 1084 0 discriminator 3
 729 0094 0D4B     		ldr	r3, .L36+8
 730 0096 1B68     		ldr	r3, [r3]
 731 0098 002B     		cmp	r3, #0
 732 009a 0ED0     		beq	.L35
1085:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1086:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1087:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1088:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 733              		.loc 1 1088 0
 734 009c 0A4B     		ldr	r3, .L36+4
 735 009e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccIHW9zM.s 			page 36


 736 00a0 DA6A     		ldr	r2, [r3, #44]
 737 00a2 7B68     		ldr	r3, [r7, #4]
 738 00a4 DB6A     		ldr	r3, [r3, #44]
 739 00a6 9A42     		cmp	r2, r3
 740 00a8 07D2     		bcs	.L35
1089:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1090:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
 741              		.loc 1 1090 0
 742 00aa 0C4B     		ldr	r3, .L36+24
 743 00ac 4FF08052 		mov	r2, #268435456
 744 00b0 1A60     		str	r2, [r3]
 745              		.syntax unified
 746              	@ 1090 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 747 00b2 BFF34F8F 		dsb
 748              	@ 0 "" 2
 749              	@ 1090 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 750 00b6 BFF36F8F 		isb
 751              	@ 0 "" 2
 752              		.thumb
 753              		.syntax unified
 754              	.L35:
1091:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1092:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1093:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1094:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1095:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1096:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1097:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1098:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1099:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 755              		.loc 1 1101 0
 756 00ba 00BF     		nop
 757 00bc 0837     		adds	r7, r7, #8
 758              	.LCFI18:
 759              		.cfi_def_cfa_offset 8
 760 00be BD46     		mov	sp, r7
 761              	.LCFI19:
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 00c0 80BD     		pop	{r7, pc}
 765              	.L37:
 766 00c2 00BF     		.align	2
 767              	.L36:
 768 00c4 00000000 		.word	uxCurrentNumberOfTasks
 769 00c8 00000000 		.word	pxCurrentTCB
 770 00cc 00000000 		.word	xSchedulerRunning
 771 00d0 00000000 		.word	uxTaskNumber
 772 00d4 00000000 		.word	uxTopReadyPriority
 773 00d8 00000000 		.word	pxReadyTasksLists
 774 00dc 04ED00E0 		.word	-536810236
 775              		.cfi_endproc
 776              	.LFE7:
 778              		.section	.text.vTaskDelete,"ax",%progbits
 779              		.align	1
 780              		.global	vTaskDelete
ARM GAS  /tmp/ccIHW9zM.s 			page 37


 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	vTaskDelete:
 787              	.LFB8:
1102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 788              		.loc 1 1107 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 16
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 80B5     		push	{r7, lr}
 793              	.LCFI20:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 84B0     		sub	sp, sp, #16
 798              	.LCFI21:
 799              		.cfi_def_cfa_offset 24
 800 0004 00AF     		add	r7, sp, #0
 801              	.LCFI22:
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]
1108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 804              		.loc 1 1110 0
 805 0008 FFF7FEFF 		bl	vPortEnterCritical
1111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 806              		.loc 1 1114 0
 807 000c 7B68     		ldr	r3, [r7, #4]
 808 000e 002B     		cmp	r3, #0
 809 0010 02D1     		bne	.L39
 810              		.loc 1 1114 0 is_stmt 0 discriminator 1
 811 0012 2C4B     		ldr	r3, .L48
 812 0014 1B68     		ldr	r3, [r3]
 813 0016 00E0     		b	.L40
 814              	.L39:
 815              		.loc 1 1114 0 discriminator 2
 816 0018 7B68     		ldr	r3, [r7, #4]
 817              	.L40:
 818              		.loc 1 1114 0 discriminator 4
 819 001a FB60     		str	r3, [r7, #12]
1115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 820              		.loc 1 1117 0 is_stmt 1 discriminator 4
 821 001c FB68     		ldr	r3, [r7, #12]
 822 001e 0433     		adds	r3, r3, #4
ARM GAS  /tmp/ccIHW9zM.s 			page 38


 823 0020 1846     		mov	r0, r3
 824 0022 FFF7FEFF 		bl	uxListRemove
1118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 825              		.loc 1 1127 0 discriminator 4
 826 0026 FB68     		ldr	r3, [r7, #12]
 827 0028 9B6A     		ldr	r3, [r3, #40]
 828 002a 002B     		cmp	r3, #0
 829 002c 04D0     		beq	.L41
1128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 830              		.loc 1 1129 0
 831 002e FB68     		ldr	r3, [r7, #12]
 832 0030 1833     		adds	r3, r3, #24
 833 0032 1846     		mov	r0, r3
 834 0034 FFF7FEFF 		bl	uxListRemove
 835              	.L41:
1130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
 836              		.loc 1 1140 0
 837 0038 234B     		ldr	r3, .L48+4
 838 003a 1B68     		ldr	r3, [r3]
 839 003c 0133     		adds	r3, r3, #1
 840 003e 224A     		ldr	r2, .L48+4
 841 0040 1360     		str	r3, [r2]
1141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 842              		.loc 1 1142 0
 843 0042 204B     		ldr	r3, .L48
 844 0044 1B68     		ldr	r3, [r3]
 845 0046 FA68     		ldr	r2, [r7, #12]
 846 0048 9A42     		cmp	r2, r3
 847 004a 0BD1     		bne	.L42
1143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccIHW9zM.s 			page 39


 848              		.loc 1 1149 0
 849 004c FB68     		ldr	r3, [r7, #12]
 850 004e 0433     		adds	r3, r3, #4
 851 0050 1946     		mov	r1, r3
 852 0052 1E48     		ldr	r0, .L48+8
 853 0054 FFF7FEFF 		bl	vListInsertEnd
1150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
 854              		.loc 1 1154 0
 855 0058 1D4B     		ldr	r3, .L48+12
 856 005a 1B68     		ldr	r3, [r3]
 857 005c 0133     		adds	r3, r3, #1
 858 005e 1C4A     		ldr	r2, .L48+12
 859 0060 1360     		str	r3, [r2]
 860 0062 09E0     		b	.L43
 861              	.L42:
1155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 862              		.loc 1 1165 0
 863 0064 1B4B     		ldr	r3, .L48+16
 864 0066 1B68     		ldr	r3, [r3]
 865 0068 013B     		subs	r3, r3, #1
 866 006a 1A4A     		ldr	r2, .L48+16
 867 006c 1360     		str	r3, [r2]
1166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 868              		.loc 1 1166 0
 869 006e F868     		ldr	r0, [r7, #12]
 870 0070 FFF7FEFF 		bl	prvDeleteTCB
1167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
 871              		.loc 1 1170 0
 872 0074 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 873              	.L43:
1171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 874              		.loc 1 1175 0
 875 0078 FFF7FEFF 		bl	vPortExitCritical
1176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
ARM GAS  /tmp/ccIHW9zM.s 			page 40


1179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 876              		.loc 1 1179 0
 877 007c 164B     		ldr	r3, .L48+20
 878 007e 1B68     		ldr	r3, [r3]
 879 0080 002B     		cmp	r3, #0
 880 0082 1AD0     		beq	.L47
1180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 881              		.loc 1 1181 0
 882 0084 0F4B     		ldr	r3, .L48
 883 0086 1B68     		ldr	r3, [r3]
 884 0088 FA68     		ldr	r2, [r7, #12]
 885 008a 9A42     		cmp	r2, r3
 886 008c 15D1     		bne	.L47
1182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 887              		.loc 1 1183 0
 888 008e 134B     		ldr	r3, .L48+24
 889 0090 1B68     		ldr	r3, [r3]
 890 0092 002B     		cmp	r3, #0
 891 0094 09D0     		beq	.L45
 892              	.LBB123:
 893              	.LBB124:
 894              		.loc 2 195 0 discriminator 1
 895              		.syntax unified
 896              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 897 0096 4FF05003 			mov r3, #80												
 898 009a 83F31188 		msr basepri, r3											
 899 009e BFF36F8F 		isb														
 900 00a2 BFF34F8F 		dsb														
 901              	
 902              	@ 0 "" 2
 903              		.thumb
 904              		.syntax unified
 905 00a6 BB60     		str	r3, [r7, #8]
 906              	.L46:
 907              	.LBE124:
 908              	.LBE123:
 909              		.loc 1 1183 0 discriminator 1
 910 00a8 FEE7     		b	.L46
 911              	.L45:
1184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 912              		.loc 1 1184 0
 913 00aa 0D4B     		ldr	r3, .L48+28
 914 00ac 4FF08052 		mov	r2, #268435456
 915 00b0 1A60     		str	r2, [r3]
 916              		.syntax unified
 917              	@ 1184 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 918 00b2 BFF34F8F 		dsb
 919              	@ 0 "" 2
 920              	@ 1184 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 921 00b6 BFF36F8F 		isb
 922              	@ 0 "" 2
 923              		.thumb
 924              		.syntax unified
 925              	.L47:
1185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccIHW9zM.s 			page 41


1186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 926              		.loc 1 1191 0
 927 00ba 00BF     		nop
 928 00bc 1037     		adds	r7, r7, #16
 929              	.LCFI23:
 930              		.cfi_def_cfa_offset 8
 931 00be BD46     		mov	sp, r7
 932              	.LCFI24:
 933              		.cfi_def_cfa_register 13
 934              		@ sp needed
 935 00c0 80BD     		pop	{r7, pc}
 936              	.L49:
 937 00c2 00BF     		.align	2
 938              	.L48:
 939 00c4 00000000 		.word	pxCurrentTCB
 940 00c8 00000000 		.word	uxTaskNumber
 941 00cc 00000000 		.word	xTasksWaitingTermination
 942 00d0 00000000 		.word	uxDeletedTasksWaitingCleanUp
 943 00d4 00000000 		.word	uxCurrentNumberOfTasks
 944 00d8 00000000 		.word	xSchedulerRunning
 945 00dc 00000000 		.word	uxSchedulerSuspended
 946 00e0 04ED00E0 		.word	-536810236
 947              		.cfi_endproc
 948              	.LFE8:
 950              		.section	.text.vTaskDelayUntil,"ax",%progbits
 951              		.align	1
 952              		.global	vTaskDelayUntil
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 956              		.fpu fpv4-sp-d16
 958              	vTaskDelayUntil:
 959              	.LFB9:
1192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960              		.loc 1 1199 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 40
 963              		@ frame_needed = 1, uses_anonymous_args = 0
 964 0000 80B5     		push	{r7, lr}
 965              	.LCFI25:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 8AB0     		sub	sp, sp, #40
 970              	.LCFI26:
ARM GAS  /tmp/ccIHW9zM.s 			page 42


 971              		.cfi_def_cfa_offset 48
 972 0004 00AF     		add	r7, sp, #0
 973              	.LCFI27:
 974              		.cfi_def_cfa_register 7
 975 0006 7860     		str	r0, [r7, #4]
 976 0008 3960     		str	r1, [r7]
1200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 977              		.loc 1 1201 0
 978 000a 0023     		movs	r3, #0
 979 000c 7B62     		str	r3, [r7, #36]
1202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
 980              		.loc 1 1203 0
 981 000e 7B68     		ldr	r3, [r7, #4]
 982 0010 002B     		cmp	r3, #0
 983 0012 09D1     		bne	.L51
 984              	.LBB125:
 985              	.LBB126:
 986              		.loc 2 195 0 discriminator 1
 987              		.syntax unified
 988              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 989 0014 4FF05003 			mov r3, #80												
 990 0018 83F31188 		msr basepri, r3											
 991 001c BFF36F8F 		isb														
 992 0020 BFF34F8F 		dsb														
 993              	
 994              	@ 0 "" 2
 995              		.thumb
 996              		.syntax unified
 997 0024 7B61     		str	r3, [r7, #20]
 998              	.L52:
 999              	.LBE126:
 1000              	.LBE125:
 1001              		.loc 1 1203 0 discriminator 1
 1002 0026 FEE7     		b	.L52
 1003              	.L51:
1204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1004              		.loc 1 1204 0
 1005 0028 3B68     		ldr	r3, [r7]
 1006 002a 002B     		cmp	r3, #0
 1007 002c 09D1     		bne	.L53
 1008              	.LBB127:
 1009              	.LBB128:
 1010              		.loc 2 195 0 discriminator 1
 1011              		.syntax unified
 1012              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1013 002e 4FF05003 			mov r3, #80												
 1014 0032 83F31188 		msr basepri, r3											
 1015 0036 BFF36F8F 		isb														
 1016 003a BFF34F8F 		dsb														
 1017              	
 1018              	@ 0 "" 2
 1019              		.thumb
 1020              		.syntax unified
 1021 003e 3B61     		str	r3, [r7, #16]
 1022              	.L54:
ARM GAS  /tmp/ccIHW9zM.s 			page 43


 1023              	.LBE128:
 1024              	.LBE127:
 1025              		.loc 1 1204 0 discriminator 2
 1026 0040 FEE7     		b	.L54
 1027              	.L53:
1205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1028              		.loc 1 1205 0
 1029 0042 294B     		ldr	r3, .L63
 1030 0044 1B68     		ldr	r3, [r3]
 1031 0046 002B     		cmp	r3, #0
 1032 0048 09D0     		beq	.L55
 1033              	.LBB129:
 1034              	.LBB130:
 1035              		.loc 2 195 0 discriminator 1
 1036              		.syntax unified
 1037              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1038 004a 4FF05003 			mov r3, #80												
 1039 004e 83F31188 		msr basepri, r3											
 1040 0052 BFF36F8F 		isb														
 1041 0056 BFF34F8F 		dsb														
 1042              	
 1043              	@ 0 "" 2
 1044              		.thumb
 1045              		.syntax unified
 1046 005a FB60     		str	r3, [r7, #12]
 1047              	.L56:
 1048              	.LBE130:
 1049              	.LBE129:
 1050              		.loc 1 1205 0 discriminator 3
 1051 005c FEE7     		b	.L56
 1052              	.L55:
1206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 1053              		.loc 1 1207 0
 1054 005e FFF7FEFF 		bl	vTaskSuspendAll
 1055              	.LBB131:
1208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
 1056              		.loc 1 1211 0
 1057 0062 224B     		ldr	r3, .L63+4
 1058 0064 1B68     		ldr	r3, [r3]
 1059 0066 3B62     		str	r3, [r7, #32]
1212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 1060              		.loc 1 1214 0
 1061 0068 7B68     		ldr	r3, [r7, #4]
 1062 006a 1B68     		ldr	r3, [r3]
 1063 006c 3A68     		ldr	r2, [r7]
 1064 006e 1344     		add	r3, r3, r2
 1065 0070 FB61     		str	r3, [r7, #28]
1215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
 1066              		.loc 1 1216 0
 1067 0072 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIHW9zM.s 			page 44


 1068 0074 1B68     		ldr	r3, [r3]
 1069 0076 3A6A     		ldr	r2, [r7, #32]
 1070 0078 9A42     		cmp	r2, r3
 1071 007a 0BD2     		bcs	.L57
1217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
 1072              		.loc 1 1223 0
 1073 007c 7B68     		ldr	r3, [r7, #4]
 1074 007e 1B68     		ldr	r3, [r3]
 1075 0080 FA69     		ldr	r2, [r7, #28]
 1076 0082 9A42     		cmp	r2, r3
 1077 0084 11D2     		bcs	.L58
 1078              		.loc 1 1223 0 is_stmt 0 discriminator 1
 1079 0086 FA69     		ldr	r2, [r7, #28]
 1080 0088 3B6A     		ldr	r3, [r7, #32]
 1081 008a 9A42     		cmp	r2, r3
 1082 008c 0DD9     		bls	.L58
1224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 1083              		.loc 1 1225 0 is_stmt 1
 1084 008e 0123     		movs	r3, #1
 1085 0090 7B62     		str	r3, [r7, #36]
 1086 0092 0AE0     		b	.L58
 1087              	.L57:
1226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1230:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1231:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1232:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1233:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1235:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1236:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1237:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
 1088              		.loc 1 1237 0
 1089 0094 7B68     		ldr	r3, [r7, #4]
 1090 0096 1B68     		ldr	r3, [r3]
 1091 0098 FA69     		ldr	r2, [r7, #28]
 1092 009a 9A42     		cmp	r2, r3
 1093 009c 03D3     		bcc	.L59
 1094              		.loc 1 1237 0 is_stmt 0 discriminator 1
 1095 009e FA69     		ldr	r2, [r7, #28]
 1096 00a0 3B6A     		ldr	r3, [r7, #32]
 1097 00a2 9A42     		cmp	r2, r3
 1098 00a4 01D9     		bls	.L58
 1099              	.L59:
1238:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1239:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 1100              		.loc 1 1239 0 is_stmt 1
 1101 00a6 0123     		movs	r3, #1
ARM GAS  /tmp/ccIHW9zM.s 			page 45


 1102 00a8 7B62     		str	r3, [r7, #36]
 1103              	.L58:
1240:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1241:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1242:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1243:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1244:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1245:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1246:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1248:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 1104              		.loc 1 1248 0
 1105 00aa 7B68     		ldr	r3, [r7, #4]
 1106 00ac FA69     		ldr	r2, [r7, #28]
 1107 00ae 1A60     		str	r2, [r3]
1249:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1250:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
 1108              		.loc 1 1250 0
 1109 00b0 7B6A     		ldr	r3, [r7, #36]
 1110 00b2 002B     		cmp	r3, #0
 1111 00b4 06D0     		beq	.L60
1251:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1252:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1253:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1255:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1256:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
 1112              		.loc 1 1256 0
 1113 00b6 FA69     		ldr	r2, [r7, #28]
 1114 00b8 3B6A     		ldr	r3, [r7, #32]
 1115 00ba D31A     		subs	r3, r2, r3
 1116 00bc 0021     		movs	r1, #0
 1117 00be 1846     		mov	r0, r3
 1118 00c0 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 1119              	.L60:
 1120              	.LBE131:
1257:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1258:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1259:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1260:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1261:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1262:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1263:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
 1121              		.loc 1 1263 0
 1122 00c4 FFF7FEFF 		bl	xTaskResumeAll
 1123 00c8 B861     		str	r0, [r7, #24]
1264:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1265:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1266:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1267:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 1124              		.loc 1 1267 0
 1125 00ca BB69     		ldr	r3, [r7, #24]
 1126 00cc 002B     		cmp	r3, #0
 1127 00ce 07D1     		bne	.L62
1268:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1269:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 1128              		.loc 1 1269 0
ARM GAS  /tmp/ccIHW9zM.s 			page 46


 1129 00d0 074B     		ldr	r3, .L63+8
 1130 00d2 4FF08052 		mov	r2, #268435456
 1131 00d6 1A60     		str	r2, [r3]
 1132              		.syntax unified
 1133              	@ 1269 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1134 00d8 BFF34F8F 		dsb
 1135              	@ 0 "" 2
 1136              	@ 1269 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1137 00dc BFF36F8F 		isb
 1138              	@ 0 "" 2
 1139              		.thumb
 1140              		.syntax unified
 1141              	.L62:
1270:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1271:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1272:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1273:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1274:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1275:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1142              		.loc 1 1275 0
 1143 00e0 00BF     		nop
 1144 00e2 2837     		adds	r7, r7, #40
 1145              	.LCFI28:
 1146              		.cfi_def_cfa_offset 8
 1147 00e4 BD46     		mov	sp, r7
 1148              	.LCFI29:
 1149              		.cfi_def_cfa_register 13
 1150              		@ sp needed
 1151 00e6 80BD     		pop	{r7, pc}
 1152              	.L64:
 1153              		.align	2
 1154              	.L63:
 1155 00e8 00000000 		.word	uxSchedulerSuspended
 1156 00ec 00000000 		.word	xTickCount
 1157 00f0 04ED00E0 		.word	-536810236
 1158              		.cfi_endproc
 1159              	.LFE9:
 1161              		.section	.text.vTaskDelay,"ax",%progbits
 1162              		.align	1
 1163              		.global	vTaskDelay
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1167              		.fpu fpv4-sp-d16
 1169              	vTaskDelay:
 1170              	.LFB10:
1276:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1278:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1279:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1280:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1281:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1282:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1283:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1171              		.loc 1 1283 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccIHW9zM.s 			page 47


 1174              		@ frame_needed = 1, uses_anonymous_args = 0
 1175 0000 80B5     		push	{r7, lr}
 1176              	.LCFI30:
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 7, -8
 1179              		.cfi_offset 14, -4
 1180 0002 84B0     		sub	sp, sp, #16
 1181              	.LCFI31:
 1182              		.cfi_def_cfa_offset 24
 1183 0004 00AF     		add	r7, sp, #0
 1184              	.LCFI32:
 1185              		.cfi_def_cfa_register 7
 1186 0006 7860     		str	r0, [r7, #4]
1284:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 1187              		.loc 1 1284 0
 1188 0008 0023     		movs	r3, #0
 1189 000a FB60     		str	r3, [r7, #12]
1285:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1286:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1287:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
 1190              		.loc 1 1287 0
 1191 000c 7B68     		ldr	r3, [r7, #4]
 1192 000e 002B     		cmp	r3, #0
 1193 0010 16D0     		beq	.L66
1288:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1289:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
 1194              		.loc 1 1289 0
 1195 0012 134B     		ldr	r3, .L71
 1196 0014 1B68     		ldr	r3, [r3]
 1197 0016 002B     		cmp	r3, #0
 1198 0018 09D0     		beq	.L67
 1199              	.LBB132:
 1200              	.LBB133:
 1201              		.loc 2 195 0 discriminator 1
 1202              		.syntax unified
 1203              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1204 001a 4FF05003 			mov r3, #80												
 1205 001e 83F31188 		msr basepri, r3											
 1206 0022 BFF36F8F 		isb														
 1207 0026 BFF34F8F 		dsb														
 1208              	
 1209              	@ 0 "" 2
 1210              		.thumb
 1211              		.syntax unified
 1212 002a BB60     		str	r3, [r7, #8]
 1213              	.L68:
 1214              	.LBE133:
 1215              	.LBE132:
 1216              		.loc 1 1289 0 discriminator 1
 1217 002c FEE7     		b	.L68
 1218              	.L67:
1290:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 1219              		.loc 1 1290 0
 1220 002e FFF7FEFF 		bl	vTaskSuspendAll
1291:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1293:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 48


1294:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1295:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1296:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1297:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1298:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1299:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1300:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1301:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 1221              		.loc 1 1301 0
 1222 0032 0021     		movs	r1, #0
 1223 0034 7868     		ldr	r0, [r7, #4]
 1224 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
1302:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1303:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
 1225              		.loc 1 1303 0
 1226 003a FFF7FEFF 		bl	xTaskResumeAll
 1227 003e F860     		str	r0, [r7, #12]
 1228              	.L66:
1304:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1305:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1306:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1307:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1308:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1309:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1310:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1311:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1312:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 1229              		.loc 1 1312 0
 1230 0040 FB68     		ldr	r3, [r7, #12]
 1231 0042 002B     		cmp	r3, #0
 1232 0044 07D1     		bne	.L70
1313:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1314:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 1233              		.loc 1 1314 0
 1234 0046 074B     		ldr	r3, .L71+4
 1235 0048 4FF08052 		mov	r2, #268435456
 1236 004c 1A60     		str	r2, [r3]
 1237              		.syntax unified
 1238              	@ 1314 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1239 004e BFF34F8F 		dsb
 1240              	@ 0 "" 2
 1241              	@ 1314 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1242 0052 BFF36F8F 		isb
 1243              	@ 0 "" 2
 1244              		.thumb
 1245              		.syntax unified
 1246              	.L70:
1315:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1316:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1317:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1318:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1319:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1320:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1247              		.loc 1 1320 0
 1248 0056 00BF     		nop
 1249 0058 1037     		adds	r7, r7, #16
 1250              	.LCFI33:
ARM GAS  /tmp/ccIHW9zM.s 			page 49


 1251              		.cfi_def_cfa_offset 8
 1252 005a BD46     		mov	sp, r7
 1253              	.LCFI34:
 1254              		.cfi_def_cfa_register 13
 1255              		@ sp needed
 1256 005c 80BD     		pop	{r7, pc}
 1257              	.L72:
 1258 005e 00BF     		.align	2
 1259              	.L71:
 1260 0060 00000000 		.word	uxSchedulerSuspended
 1261 0064 04ED00E0 		.word	-536810236
 1262              		.cfi_endproc
 1263              	.LFE10:
 1265              		.section	.text.eTaskGetState,"ax",%progbits
 1266              		.align	1
 1267              		.global	eTaskGetState
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1271              		.fpu fpv4-sp-d16
 1273              	eTaskGetState:
 1274              	.LFB11:
1321:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1322:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1323:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1324:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1325:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1326:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1327:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1328:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1275              		.loc 1 1328 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 24
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              	.LCFI35:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 7, -8
 1283              		.cfi_offset 14, -4
 1284 0002 86B0     		sub	sp, sp, #24
 1285              	.LCFI36:
 1286              		.cfi_def_cfa_offset 32
 1287 0004 00AF     		add	r7, sp, #0
 1288              	.LCFI37:
 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
1329:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1330:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1331:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 1291              		.loc 1 1331 0
 1292 0008 7B68     		ldr	r3, [r7, #4]
 1293 000a 3B61     		str	r3, [r7, #16]
1332:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
 1294              		.loc 1 1333 0
 1295 000c 3B69     		ldr	r3, [r7, #16]
 1296 000e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccIHW9zM.s 			page 50


 1297 0010 09D1     		bne	.L74
 1298              	.LBB134:
 1299              	.LBB135:
 1300              		.loc 2 195 0 discriminator 1
 1301              		.syntax unified
 1302              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1303 0012 4FF05003 			mov r3, #80												
 1304 0016 83F31188 		msr basepri, r3											
 1305 001a BFF36F8F 		isb														
 1306 001e BFF34F8F 		dsb														
 1307              	
 1308              	@ 0 "" 2
 1309              		.thumb
 1310              		.syntax unified
 1311 0022 BB60     		str	r3, [r7, #8]
 1312              	.L75:
 1313              	.LBE135:
 1314              	.LBE134:
 1315              		.loc 1 1333 0 discriminator 1
 1316 0024 FEE7     		b	.L75
 1317              	.L74:
1334:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 1318              		.loc 1 1335 0
 1319 0026 1D4B     		ldr	r3, .L86
 1320 0028 1B68     		ldr	r3, [r3]
 1321 002a 3A69     		ldr	r2, [r7, #16]
 1322 002c 9A42     		cmp	r2, r3
 1323 002e 02D1     		bne	.L76
1336:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1337:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1338:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
 1324              		.loc 1 1338 0
 1325 0030 0023     		movs	r3, #0
 1326 0032 FB75     		strb	r3, [r7, #23]
 1327 0034 2DE0     		b	.L77
 1328              	.L76:
1339:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1340:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1341:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1342:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 1329              		.loc 1 1342 0
 1330 0036 FFF7FEFF 		bl	vPortEnterCritical
1343:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1344:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 1331              		.loc 1 1344 0
 1332 003a 3B69     		ldr	r3, [r7, #16]
 1333 003c 5B69     		ldr	r3, [r3, #20]
 1334 003e FB60     		str	r3, [r7, #12]
1345:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1346:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 1335              		.loc 1 1346 0
 1336 0040 FFF7FEFF 		bl	vPortExitCritical
1347:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1348:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
 1337              		.loc 1 1348 0
 1338 0044 164B     		ldr	r3, .L86+4
ARM GAS  /tmp/ccIHW9zM.s 			page 51


 1339 0046 1B68     		ldr	r3, [r3]
 1340 0048 FA68     		ldr	r2, [r7, #12]
 1341 004a 9A42     		cmp	r2, r3
 1342 004c 04D0     		beq	.L78
 1343              		.loc 1 1348 0 is_stmt 0 discriminator 1
 1344 004e 154B     		ldr	r3, .L86+8
 1345 0050 1B68     		ldr	r3, [r3]
 1346 0052 FA68     		ldr	r2, [r7, #12]
 1347 0054 9A42     		cmp	r2, r3
 1348 0056 02D1     		bne	.L79
 1349              	.L78:
1349:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1350:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1351:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1352:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
 1350              		.loc 1 1352 0 is_stmt 1
 1351 0058 0223     		movs	r3, #2
 1352 005a FB75     		strb	r3, [r7, #23]
 1353 005c 19E0     		b	.L77
 1354              	.L79:
1353:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1355:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1356:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
 1355              		.loc 1 1356 0
 1356 005e FB68     		ldr	r3, [r7, #12]
 1357 0060 114A     		ldr	r2, .L86+12
 1358 0062 9342     		cmp	r3, r2
 1359 0064 09D1     		bne	.L80
1357:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1358:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1359:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1360:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1361:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 1360              		.loc 1 1361 0
 1361 0066 3B69     		ldr	r3, [r7, #16]
 1362 0068 9B6A     		ldr	r3, [r3, #40]
 1363 006a 002B     		cmp	r3, #0
 1364 006c 02D1     		bne	.L81
1362:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1363:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
 1365              		.loc 1 1363 0
 1366 006e 0323     		movs	r3, #3
 1367 0070 FB75     		strb	r3, [r7, #23]
 1368 0072 0EE0     		b	.L77
 1369              	.L81:
1364:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1365:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1366:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1367:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
 1370              		.loc 1 1367 0
 1371 0074 0223     		movs	r3, #2
 1372 0076 FB75     		strb	r3, [r7, #23]
 1373 0078 0BE0     		b	.L77
 1374              	.L80:
1368:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1369:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccIHW9zM.s 			page 52


1370:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1371:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1372:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1373:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 1375              		.loc 1 1373 0
 1376 007a FB68     		ldr	r3, [r7, #12]
 1377 007c 0B4A     		ldr	r2, .L86+16
 1378 007e 9342     		cmp	r3, r2
 1379 0080 02D0     		beq	.L83
 1380              		.loc 1 1373 0 is_stmt 0 discriminator 1
 1381 0082 FB68     		ldr	r3, [r7, #12]
 1382 0084 002B     		cmp	r3, #0
 1383 0086 02D1     		bne	.L84
 1384              	.L83:
1374:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1375:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1376:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1377:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1378:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
 1385              		.loc 1 1378 0 is_stmt 1
 1386 0088 0423     		movs	r3, #4
 1387 008a FB75     		strb	r3, [r7, #23]
 1388 008c 01E0     		b	.L77
 1389              	.L84:
1379:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1380:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1381:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1382:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1383:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1384:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1385:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1386:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
 1390              		.loc 1 1386 0
 1391 008e 0123     		movs	r3, #1
 1392 0090 FB75     		strb	r3, [r7, #23]
 1393              	.L77:
1387:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1388:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1389:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1390:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
 1394              		.loc 1 1390 0
 1395 0092 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1391:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1396              		.loc 1 1391 0
 1397 0094 1846     		mov	r0, r3
 1398 0096 1837     		adds	r7, r7, #24
 1399              	.LCFI38:
 1400              		.cfi_def_cfa_offset 8
 1401 0098 BD46     		mov	sp, r7
 1402              	.LCFI39:
 1403              		.cfi_def_cfa_register 13
 1404              		@ sp needed
 1405 009a 80BD     		pop	{r7, pc}
 1406              	.L87:
 1407              		.align	2
 1408              	.L86:
 1409 009c 00000000 		.word	pxCurrentTCB
ARM GAS  /tmp/ccIHW9zM.s 			page 53


 1410 00a0 00000000 		.word	pxDelayedTaskList
 1411 00a4 00000000 		.word	pxOverflowDelayedTaskList
 1412 00a8 00000000 		.word	xSuspendedTaskList
 1413 00ac 00000000 		.word	xTasksWaitingTermination
 1414              		.cfi_endproc
 1415              	.LFE11:
 1417              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1418              		.align	1
 1419              		.global	uxTaskPriorityGet
 1420              		.syntax unified
 1421              		.thumb
 1422              		.thumb_func
 1423              		.fpu fpv4-sp-d16
 1425              	uxTaskPriorityGet:
 1426              	.LFB12:
1392:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1393:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1394:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1395:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1396:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1397:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1398:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1399:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1427              		.loc 1 1399 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 16
 1430              		@ frame_needed = 1, uses_anonymous_args = 0
 1431 0000 80B5     		push	{r7, lr}
 1432              	.LCFI40:
 1433              		.cfi_def_cfa_offset 8
 1434              		.cfi_offset 7, -8
 1435              		.cfi_offset 14, -4
 1436 0002 84B0     		sub	sp, sp, #16
 1437              	.LCFI41:
 1438              		.cfi_def_cfa_offset 24
 1439 0004 00AF     		add	r7, sp, #0
 1440              	.LCFI42:
 1441              		.cfi_def_cfa_register 7
 1442 0006 7860     		str	r0, [r7, #4]
1400:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1401:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1402:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1403:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1443              		.loc 1 1403 0
 1444 0008 FFF7FEFF 		bl	vPortEnterCritical
1404:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1405:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1406:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1407:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1445              		.loc 1 1407 0
 1446 000c 7B68     		ldr	r3, [r7, #4]
 1447 000e 002B     		cmp	r3, #0
 1448 0010 02D1     		bne	.L89
 1449              		.loc 1 1407 0 is_stmt 0 discriminator 1
 1450 0012 074B     		ldr	r3, .L92
 1451 0014 1B68     		ldr	r3, [r3]
 1452 0016 00E0     		b	.L90
ARM GAS  /tmp/ccIHW9zM.s 			page 54


 1453              	.L89:
 1454              		.loc 1 1407 0 discriminator 2
 1455 0018 7B68     		ldr	r3, [r7, #4]
 1456              	.L90:
 1457              		.loc 1 1407 0 discriminator 4
 1458 001a FB60     		str	r3, [r7, #12]
1408:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1459              		.loc 1 1408 0 is_stmt 1 discriminator 4
 1460 001c FB68     		ldr	r3, [r7, #12]
 1461 001e DB6A     		ldr	r3, [r3, #44]
 1462 0020 BB60     		str	r3, [r7, #8]
1409:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1410:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1463              		.loc 1 1410 0 discriminator 4
 1464 0022 FFF7FEFF 		bl	vPortExitCritical
1411:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1412:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 1465              		.loc 1 1412 0 discriminator 4
 1466 0026 BB68     		ldr	r3, [r7, #8]
1413:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1467              		.loc 1 1413 0 discriminator 4
 1468 0028 1846     		mov	r0, r3
 1469 002a 1037     		adds	r7, r7, #16
 1470              	.LCFI43:
 1471              		.cfi_def_cfa_offset 8
 1472 002c BD46     		mov	sp, r7
 1473              	.LCFI44:
 1474              		.cfi_def_cfa_register 13
 1475              		@ sp needed
 1476 002e 80BD     		pop	{r7, pc}
 1477              	.L93:
 1478              		.align	2
 1479              	.L92:
 1480 0030 00000000 		.word	pxCurrentTCB
 1481              		.cfi_endproc
 1482              	.LFE12:
 1484              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1485              		.align	1
 1486              		.global	uxTaskPriorityGetFromISR
 1487              		.syntax unified
 1488              		.thumb
 1489              		.thumb_func
 1490              		.fpu fpv4-sp-d16
 1492              	uxTaskPriorityGetFromISR:
 1493              	.LFB13:
1414:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1415:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1416:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1417:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1418:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1419:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1421:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1494              		.loc 1 1421 0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 32
 1497              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccIHW9zM.s 			page 55


 1498 0000 80B5     		push	{r7, lr}
 1499              	.LCFI45:
 1500              		.cfi_def_cfa_offset 8
 1501              		.cfi_offset 7, -8
 1502              		.cfi_offset 14, -4
 1503 0002 88B0     		sub	sp, sp, #32
 1504              	.LCFI46:
 1505              		.cfi_def_cfa_offset 40
 1506 0004 00AF     		add	r7, sp, #0
 1507              	.LCFI47:
 1508              		.cfi_def_cfa_register 7
 1509 0006 7860     		str	r0, [r7, #4]
1422:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1423:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1424:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1425:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1426:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1427:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1428:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1429:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1430:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1431:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1432:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1433:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1435:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1436:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1437:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1438:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1439:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1440:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1441:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1510              		.loc 1 1441 0
 1511 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1512              	.LBB136:
 1513              	.LBB137:
 196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1514              		.loc 2 211 0
 1515              		.syntax unified
 1516              	@ 211 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1517 000c EFF31182 			mrs r2, basepri											
 1518 0010 4FF05003 		mov r3, #80												
ARM GAS  /tmp/ccIHW9zM.s 			page 56


 1519 0014 83F31188 		msr basepri, r3											
 1520 0018 BFF36F8F 		isb														
 1521 001c BFF34F8F 		dsb														
 1522              	
 1523              	@ 0 "" 2
 1524              		.thumb
 1525              		.syntax unified
 1526 0020 3A61     		str	r2, [r7, #16]
 1527 0022 FB60     		str	r3, [r7, #12]
 212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1528              		.loc 2 223 0
 1529 0024 3B69     		ldr	r3, [r7, #16]
 1530              	.LBE137:
 1531              	.LBE136:
1442:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1443:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
 1532              		.loc 1 1443 0
 1533 0026 FB61     		str	r3, [r7, #28]
1444:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1445:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1446:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1447:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1534              		.loc 1 1447 0
 1535 0028 7B68     		ldr	r3, [r7, #4]
 1536 002a 002B     		cmp	r3, #0
 1537 002c 02D1     		bne	.L96
 1538              		.loc 1 1447 0 is_stmt 0 discriminator 1
 1539 002e 094B     		ldr	r3, .L99
 1540 0030 1B68     		ldr	r3, [r3]
 1541 0032 00E0     		b	.L97
 1542              	.L96:
 1543              		.loc 1 1447 0 discriminator 2
 1544 0034 7B68     		ldr	r3, [r7, #4]
 1545              	.L97:
 1546              		.loc 1 1447 0 discriminator 4
 1547 0036 BB61     		str	r3, [r7, #24]
1448:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1548              		.loc 1 1448 0 is_stmt 1 discriminator 4
 1549 0038 BB69     		ldr	r3, [r7, #24]
 1550 003a DB6A     		ldr	r3, [r3, #44]
 1551 003c 7B61     		str	r3, [r7, #20]
 1552 003e FB69     		ldr	r3, [r7, #28]
 1553 0040 BB60     		str	r3, [r7, #8]
 1554              	.LBB138:
 1555              	.LBB139:
 224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
ARM GAS  /tmp/ccIHW9zM.s 			page 57


 225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1556              		.loc 2 229 0 discriminator 4
 1557 0042 BB68     		ldr	r3, [r7, #8]
 1558              		.syntax unified
 1559              	@ 229 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1560 0044 83F31188 			msr basepri, r3	
 1561              	@ 0 "" 2
 1562              		.thumb
 1563              		.syntax unified
 1564              	.LBE139:
 1565              	.LBE138:
1449:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1450:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1451:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 1566              		.loc 1 1452 0 discriminator 4
 1567 0048 7B69     		ldr	r3, [r7, #20]
1453:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1568              		.loc 1 1453 0 discriminator 4
 1569 004a 1846     		mov	r0, r3
 1570 004c 2037     		adds	r7, r7, #32
 1571              	.LCFI48:
 1572              		.cfi_def_cfa_offset 8
 1573 004e BD46     		mov	sp, r7
 1574              	.LCFI49:
 1575              		.cfi_def_cfa_register 13
 1576              		@ sp needed
 1577 0050 80BD     		pop	{r7, pc}
 1578              	.L100:
 1579 0052 00BF     		.align	2
 1580              	.L99:
 1581 0054 00000000 		.word	pxCurrentTCB
 1582              		.cfi_endproc
 1583              	.LFE13:
 1585              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1586              		.align	1
 1587              		.global	vTaskPrioritySet
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu fpv4-sp-d16
 1593              	vTaskPrioritySet:
 1594              	.LFB14:
1454:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1455:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1456:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1457:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1458:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1459:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1460:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1461:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1595              		.loc 1 1461 0
 1596              		.cfi_startproc
ARM GAS  /tmp/ccIHW9zM.s 			page 58


 1597              		@ args = 0, pretend = 0, frame = 32
 1598              		@ frame_needed = 1, uses_anonymous_args = 0
 1599 0000 80B5     		push	{r7, lr}
 1600              	.LCFI50:
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 7, -8
 1603              		.cfi_offset 14, -4
 1604 0002 88B0     		sub	sp, sp, #32
 1605              	.LCFI51:
 1606              		.cfi_def_cfa_offset 40
 1607 0004 00AF     		add	r7, sp, #0
 1608              	.LCFI52:
 1609              		.cfi_def_cfa_register 7
 1610 0006 7860     		str	r0, [r7, #4]
 1611 0008 3960     		str	r1, [r7]
1462:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1463:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1464:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1612              		.loc 1 1464 0
 1613 000a 0023     		movs	r3, #0
 1614 000c FB61     		str	r3, [r7, #28]
1465:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1466:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
 1615              		.loc 1 1466 0
 1616 000e 3B68     		ldr	r3, [r7]
 1617 0010 372B     		cmp	r3, #55
 1618 0012 09D9     		bls	.L102
 1619              	.LBB140:
 1620              	.LBB141:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1621              		.loc 2 195 0 discriminator 1
 1622              		.syntax unified
 1623              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1624 0014 4FF05003 			mov r3, #80												
 1625 0018 83F31188 		msr basepri, r3											
 1626 001c BFF36F8F 		isb														
 1627 0020 BFF34F8F 		dsb														
 1628              	
 1629              	@ 0 "" 2
 1630              		.thumb
 1631              		.syntax unified
 1632 0024 FB60     		str	r3, [r7, #12]
 1633              	.L103:
 1634              	.LBE141:
 1635              	.LBE140:
 1636              		.loc 1 1466 0 discriminator 1
 1637 0026 FEE7     		b	.L103
 1638              	.L102:
1467:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1469:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 1639              		.loc 1 1469 0
 1640 0028 3B68     		ldr	r3, [r7]
 1641 002a 372B     		cmp	r3, #55
 1642 002c 01D9     		bls	.L104
1470:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1471:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
ARM GAS  /tmp/ccIHW9zM.s 			page 59


 1643              		.loc 1 1471 0
 1644 002e 3723     		movs	r3, #55
 1645 0030 3B60     		str	r3, [r7]
 1646              	.L104:
1472:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1473:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1474:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1475:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1476:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1477:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1647              		.loc 1 1478 0
 1648 0032 FFF7FEFF 		bl	vPortEnterCritical
1479:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1480:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1481:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1482:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1649              		.loc 1 1482 0
 1650 0036 7B68     		ldr	r3, [r7, #4]
 1651 0038 002B     		cmp	r3, #0
 1652 003a 02D1     		bne	.L105
 1653              		.loc 1 1482 0 is_stmt 0 discriminator 1
 1654 003c 3D4B     		ldr	r3, .L116
 1655 003e 1B68     		ldr	r3, [r3]
 1656 0040 00E0     		b	.L106
 1657              	.L105:
 1658              		.loc 1 1482 0 discriminator 2
 1659 0042 7B68     		ldr	r3, [r7, #4]
 1660              	.L106:
 1661              		.loc 1 1482 0 discriminator 4
 1662 0044 BB61     		str	r3, [r7, #24]
1483:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1485:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1486:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1487:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1488:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
 1663              		.loc 1 1488 0 is_stmt 1 discriminator 4
 1664 0046 BB69     		ldr	r3, [r7, #24]
 1665 0048 DB6C     		ldr	r3, [r3, #76]
 1666 004a 7B61     		str	r3, [r7, #20]
1489:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1490:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1491:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1492:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1493:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1494:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1495:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1496:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
 1667              		.loc 1 1496 0 discriminator 4
 1668 004c 7A69     		ldr	r2, [r7, #20]
 1669 004e 3B68     		ldr	r3, [r7]
 1670 0050 9A42     		cmp	r2, r3
 1671 0052 68D0     		beq	.L107
1497:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1498:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1499:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
ARM GAS  /tmp/ccIHW9zM.s 			page 60


1500:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
 1672              		.loc 1 1500 0
 1673 0054 3A68     		ldr	r2, [r7]
 1674 0056 7B69     		ldr	r3, [r7, #20]
 1675 0058 9A42     		cmp	r2, r3
 1676 005a 0DD9     		bls	.L108
1501:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
 1677              		.loc 1 1502 0
 1678 005c 354B     		ldr	r3, .L116
 1679 005e 1B68     		ldr	r3, [r3]
 1680 0060 BA69     		ldr	r2, [r7, #24]
 1681 0062 9A42     		cmp	r2, r3
 1682 0064 0FD0     		beq	.L109
1503:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1504:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1505:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1506:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1507:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
 1683              		.loc 1 1507 0
 1684 0066 334B     		ldr	r3, .L116
 1685 0068 1B68     		ldr	r3, [r3]
 1686 006a DB6A     		ldr	r3, [r3, #44]
 1687 006c 3A68     		ldr	r2, [r7]
 1688 006e 9A42     		cmp	r2, r3
 1689 0070 09D3     		bcc	.L109
1508:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1509:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
 1690              		.loc 1 1509 0
 1691 0072 0123     		movs	r3, #1
 1692 0074 FB61     		str	r3, [r7, #28]
 1693 0076 06E0     		b	.L109
 1694              	.L108:
1510:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1511:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1512:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1513:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1514:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1515:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1516:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1517:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1518:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1519:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1520:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1521:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1522:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1523:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
 1695              		.loc 1 1523 0
 1696 0078 2E4B     		ldr	r3, .L116
 1697 007a 1B68     		ldr	r3, [r3]
 1698 007c BA69     		ldr	r2, [r7, #24]
 1699 007e 9A42     		cmp	r2, r3
 1700 0080 01D1     		bne	.L109
1524:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1525:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1526:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1527:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
ARM GAS  /tmp/ccIHW9zM.s 			page 61


1528:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
 1701              		.loc 1 1528 0
 1702 0082 0123     		movs	r3, #1
 1703 0084 FB61     		str	r3, [r7, #28]
 1704              	.L109:
1529:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1530:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1531:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1532:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1533:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1534:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1535:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1536:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1537:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1538:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1539:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1540:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
 1705              		.loc 1 1540 0
 1706 0086 BB69     		ldr	r3, [r7, #24]
 1707 0088 DB6A     		ldr	r3, [r3, #44]
 1708 008a 3B61     		str	r3, [r7, #16]
1541:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1542:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1543:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1544:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1545:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1546:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 1709              		.loc 1 1546 0
 1710 008c BB69     		ldr	r3, [r7, #24]
 1711 008e DA6C     		ldr	r2, [r3, #76]
 1712 0090 BB69     		ldr	r3, [r7, #24]
 1713 0092 DB6A     		ldr	r3, [r3, #44]
 1714 0094 9A42     		cmp	r2, r3
 1715 0096 02D1     		bne	.L110
1547:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1548:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 1716              		.loc 1 1548 0
 1717 0098 BB69     		ldr	r3, [r7, #24]
 1718 009a 3A68     		ldr	r2, [r7]
 1719 009c DA62     		str	r2, [r3, #44]
 1720              	.L110:
1549:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1550:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1551:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1552:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1553:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1554:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1555:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1556:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
 1721              		.loc 1 1556 0
 1722 009e BB69     		ldr	r3, [r7, #24]
 1723 00a0 3A68     		ldr	r2, [r7]
 1724 00a2 DA64     		str	r2, [r3, #76]
1557:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1558:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1559:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1560:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
ARM GAS  /tmp/ccIHW9zM.s 			page 62


1561:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1562:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1563:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1565:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1566:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
 1725              		.loc 1 1566 0
 1726 00a4 BB69     		ldr	r3, [r7, #24]
 1727 00a6 9B69     		ldr	r3, [r3, #24]
 1728 00a8 002B     		cmp	r3, #0
 1729 00aa 04DB     		blt	.L111
1567:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1568:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
 1730              		.loc 1 1568 0
 1731 00ac 3B68     		ldr	r3, [r7]
 1732 00ae C3F13802 		rsb	r2, r3, #56
 1733 00b2 BB69     		ldr	r3, [r7, #24]
 1734 00b4 9A61     		str	r2, [r3, #24]
 1735              	.L111:
1569:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1570:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1571:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1572:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1573:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1574:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1575:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1576:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1577:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1578:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1579:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
 1736              		.loc 1 1579 0
 1737 00b6 BB69     		ldr	r3, [r7, #24]
 1738 00b8 5969     		ldr	r1, [r3, #20]
 1739 00ba 3A69     		ldr	r2, [r7, #16]
 1740 00bc 1346     		mov	r3, r2
 1741 00be 9B00     		lsls	r3, r3, #2
 1742 00c0 1344     		add	r3, r3, r2
 1743 00c2 9B00     		lsls	r3, r3, #2
 1744 00c4 1C4A     		ldr	r2, .L116+4
 1745 00c6 1344     		add	r3, r3, r2
 1746 00c8 9942     		cmp	r1, r3
 1747 00ca 01D1     		bne	.L112
 1748              		.loc 1 1579 0 is_stmt 0 discriminator 1
 1749 00cc 0123     		movs	r3, #1
 1750 00ce 00E0     		b	.L113
 1751              	.L112:
 1752              		.loc 1 1579 0 discriminator 2
 1753 00d0 0023     		movs	r3, #0
 1754              	.L113:
 1755              		.loc 1 1579 0 discriminator 4
 1756 00d2 002B     		cmp	r3, #0
 1757 00d4 1CD0     		beq	.L114
1580:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1581:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1582:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1583:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1584:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccIHW9zM.s 			page 63


 1758              		.loc 1 1584 0 is_stmt 1
 1759 00d6 BB69     		ldr	r3, [r7, #24]
 1760 00d8 0433     		adds	r3, r3, #4
 1761 00da 1846     		mov	r0, r3
 1762 00dc FFF7FEFF 		bl	uxListRemove
1585:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1586:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1587:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1588:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1589:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1590:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1591:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1592:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1593:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1594:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1595:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1763              		.loc 1 1595 0
 1764 00e0 BB69     		ldr	r3, [r7, #24]
 1765 00e2 DA6A     		ldr	r2, [r3, #44]
 1766 00e4 154B     		ldr	r3, .L116+8
 1767 00e6 1B68     		ldr	r3, [r3]
 1768 00e8 9A42     		cmp	r2, r3
 1769 00ea 03D9     		bls	.L115
 1770              		.loc 1 1595 0 is_stmt 0 discriminator 1
 1771 00ec BB69     		ldr	r3, [r7, #24]
 1772 00ee DB6A     		ldr	r3, [r3, #44]
 1773 00f0 124A     		ldr	r2, .L116+8
 1774 00f2 1360     		str	r3, [r2]
 1775              	.L115:
 1776              		.loc 1 1595 0 discriminator 3
 1777 00f4 BB69     		ldr	r3, [r7, #24]
 1778 00f6 DA6A     		ldr	r2, [r3, #44]
 1779 00f8 1346     		mov	r3, r2
 1780 00fa 9B00     		lsls	r3, r3, #2
 1781 00fc 1344     		add	r3, r3, r2
 1782 00fe 9B00     		lsls	r3, r3, #2
 1783 0100 0D4A     		ldr	r2, .L116+4
 1784 0102 1A44     		add	r2, r2, r3
 1785 0104 BB69     		ldr	r3, [r7, #24]
 1786 0106 0433     		adds	r3, r3, #4
 1787 0108 1946     		mov	r1, r3
 1788 010a 1046     		mov	r0, r2
 1789 010c FFF7FEFF 		bl	vListInsertEnd
 1790              	.L114:
1596:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1597:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1598:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1599:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1600:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1601:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1602:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
 1791              		.loc 1 1602 0 is_stmt 1
 1792 0110 FB69     		ldr	r3, [r7, #28]
 1793 0112 002B     		cmp	r3, #0
 1794 0114 07D0     		beq	.L107
1603:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
ARM GAS  /tmp/ccIHW9zM.s 			page 64


 1795              		.loc 1 1604 0
 1796 0116 0A4B     		ldr	r3, .L116+12
 1797 0118 4FF08052 		mov	r2, #268435456
 1798 011c 1A60     		str	r2, [r3]
 1799              		.syntax unified
 1800              	@ 1604 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1801 011e BFF34F8F 		dsb
 1802              	@ 0 "" 2
 1803              	@ 1604 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1804 0122 BFF36F8F 		isb
 1805              	@ 0 "" 2
 1806              		.thumb
 1807              		.syntax unified
 1808              	.L107:
1605:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1606:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1607:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1608:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1609:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1611:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1612:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1613:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1614:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1615:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1616:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1809              		.loc 1 1616 0
 1810 0126 FFF7FEFF 		bl	vPortExitCritical
1617:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1811              		.loc 1 1617 0
 1812 012a 00BF     		nop
 1813 012c 2037     		adds	r7, r7, #32
 1814              	.LCFI53:
 1815              		.cfi_def_cfa_offset 8
 1816 012e BD46     		mov	sp, r7
 1817              	.LCFI54:
 1818              		.cfi_def_cfa_register 13
 1819              		@ sp needed
 1820 0130 80BD     		pop	{r7, pc}
 1821              	.L117:
 1822 0132 00BF     		.align	2
 1823              	.L116:
 1824 0134 00000000 		.word	pxCurrentTCB
 1825 0138 00000000 		.word	pxReadyTasksLists
 1826 013c 00000000 		.word	uxTopReadyPriority
 1827 0140 04ED00E0 		.word	-536810236
 1828              		.cfi_endproc
 1829              	.LFE14:
 1831              		.section	.text.vTaskSuspend,"ax",%progbits
 1832              		.align	1
 1833              		.global	vTaskSuspend
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1837              		.fpu fpv4-sp-d16
 1839              	vTaskSuspend:
 1840              	.LFB15:
ARM GAS  /tmp/ccIHW9zM.s 			page 65


1618:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1619:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1620:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1621:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1623:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1624:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1625:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1841              		.loc 1 1625 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 16
 1844              		@ frame_needed = 1, uses_anonymous_args = 0
 1845 0000 80B5     		push	{r7, lr}
 1846              	.LCFI55:
 1847              		.cfi_def_cfa_offset 8
 1848              		.cfi_offset 7, -8
 1849              		.cfi_offset 14, -4
 1850 0002 84B0     		sub	sp, sp, #16
 1851              	.LCFI56:
 1852              		.cfi_def_cfa_offset 24
 1853 0004 00AF     		add	r7, sp, #0
 1854              	.LCFI57:
 1855              		.cfi_def_cfa_register 7
 1856 0006 7860     		str	r0, [r7, #4]
1626:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1627:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1628:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1857              		.loc 1 1628 0
 1858 0008 FFF7FEFF 		bl	vPortEnterCritical
1629:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1630:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1631:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1632:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 1859              		.loc 1 1632 0
 1860 000c 7B68     		ldr	r3, [r7, #4]
 1861 000e 002B     		cmp	r3, #0
 1862 0010 02D1     		bne	.L119
 1863              		.loc 1 1632 0 is_stmt 0 discriminator 1
 1864 0012 2F4B     		ldr	r3, .L131
 1865 0014 1B68     		ldr	r3, [r3]
 1866 0016 00E0     		b	.L120
 1867              	.L119:
 1868              		.loc 1 1632 0 discriminator 2
 1869 0018 7B68     		ldr	r3, [r7, #4]
 1870              	.L120:
 1871              		.loc 1 1632 0 discriminator 4
 1872 001a FB60     		str	r3, [r7, #12]
1633:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1634:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1635:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1637:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1638:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 1873              		.loc 1 1638 0 is_stmt 1 discriminator 4
 1874 001c FB68     		ldr	r3, [r7, #12]
 1875 001e 0433     		adds	r3, r3, #4
 1876 0020 1846     		mov	r0, r3
ARM GAS  /tmp/ccIHW9zM.s 			page 66


 1877 0022 FFF7FEFF 		bl	uxListRemove
1639:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1640:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1641:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1642:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1643:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1644:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1645:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1646:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1648:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 1878              		.loc 1 1648 0 discriminator 4
 1879 0026 FB68     		ldr	r3, [r7, #12]
 1880 0028 9B6A     		ldr	r3, [r3, #40]
 1881 002a 002B     		cmp	r3, #0
 1882 002c 04D0     		beq	.L121
1649:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1650:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1883              		.loc 1 1650 0
 1884 002e FB68     		ldr	r3, [r7, #12]
 1885 0030 1833     		adds	r3, r3, #24
 1886 0032 1846     		mov	r0, r3
 1887 0034 FFF7FEFF 		bl	uxListRemove
 1888              	.L121:
1651:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1652:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1653:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1654:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1655:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1656:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1657:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 1889              		.loc 1 1657 0
 1890 0038 FB68     		ldr	r3, [r7, #12]
 1891 003a 0433     		adds	r3, r3, #4
 1892 003c 1946     		mov	r1, r3
 1893 003e 2548     		ldr	r0, .L131+4
 1894 0040 FFF7FEFF 		bl	vListInsertEnd
1658:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1659:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1660:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1661:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 1895              		.loc 1 1661 0
 1896 0044 FB68     		ldr	r3, [r7, #12]
 1897 0046 93F85830 		ldrb	r3, [r3, #88]
 1898 004a DBB2     		uxtb	r3, r3
 1899 004c 012B     		cmp	r3, #1
 1900 004e 03D1     		bne	.L122
1662:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1663:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1664:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1665:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 1901              		.loc 1 1665 0
 1902 0050 FB68     		ldr	r3, [r7, #12]
 1903 0052 0022     		movs	r2, #0
 1904 0054 83F85820 		strb	r2, [r3, #88]
 1905              	.L122:
1666:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccIHW9zM.s 			page 67


1667:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1668:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1669:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1670:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1906              		.loc 1 1670 0
 1907 0058 FFF7FEFF 		bl	vPortExitCritical
1671:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1672:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 1908              		.loc 1 1672 0
 1909 005c 1E4B     		ldr	r3, .L131+8
 1910 005e 1B68     		ldr	r3, [r3]
 1911 0060 002B     		cmp	r3, #0
 1912 0062 05D0     		beq	.L123
1673:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1674:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1675:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1676:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 1913              		.loc 1 1676 0
 1914 0064 FFF7FEFF 		bl	vPortEnterCritical
1677:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1678:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
 1915              		.loc 1 1678 0
 1916 0068 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
1679:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1680:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 1917              		.loc 1 1680 0
 1918 006c FFF7FEFF 		bl	vPortExitCritical
 1919              	.L123:
1681:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1682:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1683:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1684:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1685:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1686:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1687:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 1920              		.loc 1 1687 0
 1921 0070 174B     		ldr	r3, .L131
 1922 0072 1B68     		ldr	r3, [r3]
 1923 0074 FA68     		ldr	r2, [r7, #12]
 1924 0076 9A42     		cmp	r2, r3
 1925 0078 26D1     		bne	.L130
1688:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1689:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 1926              		.loc 1 1689 0
 1927 007a 174B     		ldr	r3, .L131+8
 1928 007c 1B68     		ldr	r3, [r3]
 1929 007e 002B     		cmp	r3, #0
 1930 0080 16D0     		beq	.L125
1690:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1691:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1692:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 1931              		.loc 1 1692 0
 1932 0082 164B     		ldr	r3, .L131+12
 1933 0084 1B68     		ldr	r3, [r3]
 1934 0086 002B     		cmp	r3, #0
 1935 0088 09D0     		beq	.L126
 1936              	.LBB142:
ARM GAS  /tmp/ccIHW9zM.s 			page 68


 1937              	.LBB143:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1938              		.loc 2 195 0 discriminator 1
 1939              		.syntax unified
 1940              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1941 008a 4FF05003 			mov r3, #80												
 1942 008e 83F31188 		msr basepri, r3											
 1943 0092 BFF36F8F 		isb														
 1944 0096 BFF34F8F 		dsb														
 1945              	
 1946              	@ 0 "" 2
 1947              		.thumb
 1948              		.syntax unified
 1949 009a BB60     		str	r3, [r7, #8]
 1950              	.L127:
 1951              	.LBE143:
 1952              	.LBE142:
 1953              		.loc 1 1692 0 discriminator 1
 1954 009c FEE7     		b	.L127
 1955              	.L126:
1693:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1956              		.loc 1 1693 0
 1957 009e 104B     		ldr	r3, .L131+16
 1958 00a0 4FF08052 		mov	r2, #268435456
 1959 00a4 1A60     		str	r2, [r3]
 1960              		.syntax unified
 1961              	@ 1693 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1962 00a6 BFF34F8F 		dsb
 1963              	@ 0 "" 2
 1964              	@ 1693 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1965 00aa BFF36F8F 		isb
 1966              	@ 0 "" 2
1694:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1696:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1697:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1698:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1699:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1700:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1701:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1702:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1703:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1704:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1705:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1706:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1707:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1708:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1709:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1710:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1711:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1712:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1713:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1715:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1716:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1717:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1718:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIHW9zM.s 			page 69


 1967              		.loc 1 1718 0
 1968              		.thumb
 1969              		.syntax unified
 1970 00ae 0BE0     		b	.L130
 1971              	.L125:
1700:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1972              		.loc 1 1700 0
 1973 00b0 084B     		ldr	r3, .L131+4
 1974 00b2 1A68     		ldr	r2, [r3]
 1975 00b4 0B4B     		ldr	r3, .L131+20
 1976 00b6 1B68     		ldr	r3, [r3]
 1977 00b8 9A42     		cmp	r2, r3
 1978 00ba 03D1     		bne	.L129
1706:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1979              		.loc 1 1706 0
 1980 00bc 044B     		ldr	r3, .L131
 1981 00be 0022     		movs	r2, #0
 1982 00c0 1A60     		str	r2, [r3]
 1983              		.loc 1 1718 0
 1984 00c2 01E0     		b	.L130
 1985              	.L129:
1710:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1986              		.loc 1 1710 0
 1987 00c4 FFF7FEFF 		bl	vTaskSwitchContext
 1988              	.L130:
 1989              		.loc 1 1718 0
 1990 00c8 00BF     		nop
 1991 00ca 1037     		adds	r7, r7, #16
 1992              	.LCFI58:
 1993              		.cfi_def_cfa_offset 8
 1994 00cc BD46     		mov	sp, r7
 1995              	.LCFI59:
 1996              		.cfi_def_cfa_register 13
 1997              		@ sp needed
 1998 00ce 80BD     		pop	{r7, pc}
 1999              	.L132:
 2000              		.align	2
 2001              	.L131:
 2002 00d0 00000000 		.word	pxCurrentTCB
 2003 00d4 00000000 		.word	xSuspendedTaskList
 2004 00d8 00000000 		.word	xSchedulerRunning
 2005 00dc 00000000 		.word	uxSchedulerSuspended
 2006 00e0 04ED00E0 		.word	-536810236
 2007 00e4 00000000 		.word	uxCurrentNumberOfTasks
 2008              		.cfi_endproc
 2009              	.LFE15:
 2011              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
 2012              		.align	1
 2013              		.syntax unified
 2014              		.thumb
 2015              		.thumb_func
 2016              		.fpu fpv4-sp-d16
 2018              	prvTaskIsTaskSuspended:
 2019              	.LFB16:
1719:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1720:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1721:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccIHW9zM.s 			page 70


1722:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1723:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1724:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1725:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1726:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2020              		.loc 1 1726 0
 2021              		.cfi_startproc
 2022              		@ args = 0, pretend = 0, frame = 24
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024              		@ link register save eliminated.
 2025 0000 80B4     		push	{r7}
 2026              	.LCFI60:
 2027              		.cfi_def_cfa_offset 4
 2028              		.cfi_offset 7, -4
 2029 0002 87B0     		sub	sp, sp, #28
 2030              	.LCFI61:
 2031              		.cfi_def_cfa_offset 32
 2032 0004 00AF     		add	r7, sp, #0
 2033              	.LCFI62:
 2034              		.cfi_def_cfa_register 7
 2035 0006 7860     		str	r0, [r7, #4]
1727:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 2036              		.loc 1 1727 0
 2037 0008 0023     		movs	r3, #0
 2038 000a 7B61     		str	r3, [r7, #20]
1728:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 2039              		.loc 1 1728 0
 2040 000c 7B68     		ldr	r3, [r7, #4]
 2041 000e 3B61     		str	r3, [r7, #16]
1729:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1730:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1731:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1732:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1733:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1734:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
 2042              		.loc 1 1734 0
 2043 0010 7B68     		ldr	r3, [r7, #4]
 2044 0012 002B     		cmp	r3, #0
 2045 0014 09D1     		bne	.L134
 2046              	.LBB144:
 2047              	.LBB145:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2048              		.loc 2 195 0 discriminator 1
 2049              		.syntax unified
 2050              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2051 0016 4FF05003 			mov r3, #80												
 2052 001a 83F31188 		msr basepri, r3											
 2053 001e BFF36F8F 		isb														
 2054 0022 BFF34F8F 		dsb														
 2055              	
 2056              	@ 0 "" 2
 2057              		.thumb
 2058              		.syntax unified
 2059 0026 FB60     		str	r3, [r7, #12]
 2060              	.L135:
 2061              	.LBE145:
 2062              	.LBE144:
ARM GAS  /tmp/ccIHW9zM.s 			page 71


 2063              		.loc 1 1734 0 discriminator 1
 2064 0028 FEE7     		b	.L135
 2065              	.L134:
1735:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1736:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1737:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 2066              		.loc 1 1737 0
 2067 002a 3B69     		ldr	r3, [r7, #16]
 2068 002c 5B69     		ldr	r3, [r3, #20]
 2069 002e 0F4A     		ldr	r2, .L142
 2070 0030 9342     		cmp	r3, r2
 2071 0032 01D1     		bne	.L136
 2072              		.loc 1 1737 0 is_stmt 0 discriminator 1
 2073 0034 0123     		movs	r3, #1
 2074 0036 00E0     		b	.L137
 2075              	.L136:
 2076              		.loc 1 1737 0 discriminator 2
 2077 0038 0023     		movs	r3, #0
 2078              	.L137:
 2079              		.loc 1 1737 0 discriminator 4
 2080 003a 002B     		cmp	r3, #0
 2081 003c 0FD0     		beq	.L138
1738:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1739:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1740:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 2082              		.loc 1 1740 0 is_stmt 1
 2083 003e 3B69     		ldr	r3, [r7, #16]
 2084 0040 9B6A     		ldr	r3, [r3, #40]
 2085 0042 0B4A     		ldr	r2, .L142+4
 2086 0044 9342     		cmp	r3, r2
 2087 0046 0AD0     		beq	.L138
1741:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1742:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1743:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1744:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
 2088              		.loc 1 1744 0
 2089 0048 3B69     		ldr	r3, [r7, #16]
 2090 004a 9B6A     		ldr	r3, [r3, #40]
 2091 004c 002B     		cmp	r3, #0
 2092 004e 01D1     		bne	.L139
 2093              		.loc 1 1744 0 is_stmt 0 discriminator 1
 2094 0050 0123     		movs	r3, #1
 2095 0052 00E0     		b	.L140
 2096              	.L139:
 2097              		.loc 1 1744 0 discriminator 2
 2098 0054 0023     		movs	r3, #0
 2099              	.L140:
 2100              		.loc 1 1744 0 discriminator 4
 2101 0056 002B     		cmp	r3, #0
 2102 0058 01D0     		beq	.L138
1745:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1746:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 2103              		.loc 1 1746 0 is_stmt 1
 2104 005a 0123     		movs	r3, #1
 2105 005c 7B61     		str	r3, [r7, #20]
 2106              	.L138:
1747:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccIHW9zM.s 			page 72


1748:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1749:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1750:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1751:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1752:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1753:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1754:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1755:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1756:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1757:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1759:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1760:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1761:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1763:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 2107              		.loc 1 1763 0
 2108 005e 7B69     		ldr	r3, [r7, #20]
1764:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 2109              		.loc 1 1764 0
 2110 0060 1846     		mov	r0, r3
 2111 0062 1C37     		adds	r7, r7, #28
 2112              	.LCFI63:
 2113              		.cfi_def_cfa_offset 4
 2114 0064 BD46     		mov	sp, r7
 2115              	.LCFI64:
 2116              		.cfi_def_cfa_register 13
 2117              		@ sp needed
 2118 0066 5DF8047B 		ldr	r7, [sp], #4
 2119              	.LCFI65:
 2120              		.cfi_restore 7
 2121              		.cfi_def_cfa_offset 0
 2122 006a 7047     		bx	lr
 2123              	.L143:
 2124              		.align	2
 2125              	.L142:
 2126 006c 00000000 		.word	xSuspendedTaskList
 2127 0070 00000000 		.word	xPendingReadyList
 2128              		.cfi_endproc
 2129              	.LFE16:
 2131              		.section	.text.vTaskResume,"ax",%progbits
 2132              		.align	1
 2133              		.global	vTaskResume
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu fpv4-sp-d16
 2139              	vTaskResume:
 2140              	.LFB17:
1765:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1766:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1767:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1768:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1769:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1770:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1771:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1772:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccIHW9zM.s 			page 73


 2141              		.loc 1 1772 0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 16
 2144              		@ frame_needed = 1, uses_anonymous_args = 0
 2145 0000 80B5     		push	{r7, lr}
 2146              	.LCFI66:
 2147              		.cfi_def_cfa_offset 8
 2148              		.cfi_offset 7, -8
 2149              		.cfi_offset 14, -4
 2150 0002 84B0     		sub	sp, sp, #16
 2151              	.LCFI67:
 2152              		.cfi_def_cfa_offset 24
 2153 0004 00AF     		add	r7, sp, #0
 2154              	.LCFI68:
 2155              		.cfi_def_cfa_register 7
 2156 0006 7860     		str	r0, [r7, #4]
1773:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2157              		.loc 1 1773 0
 2158 0008 7B68     		ldr	r3, [r7, #4]
 2159 000a FB60     		str	r3, [r7, #12]
1774:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1775:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1776:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
 2160              		.loc 1 1776 0
 2161 000c 7B68     		ldr	r3, [r7, #4]
 2162 000e 002B     		cmp	r3, #0
 2163 0010 09D1     		bne	.L145
 2164              	.LBB146:
 2165              	.LBB147:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2166              		.loc 2 195 0 discriminator 1
 2167              		.syntax unified
 2168              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2169 0012 4FF05003 			mov r3, #80												
 2170 0016 83F31188 		msr basepri, r3											
 2171 001a BFF36F8F 		isb														
 2172 001e BFF34F8F 		dsb														
 2173              	
 2174              	@ 0 "" 2
 2175              		.thumb
 2176              		.syntax unified
 2177 0022 BB60     		str	r3, [r7, #8]
 2178              	.L146:
 2179              	.LBE147:
 2180              	.LBE146:
 2181              		.loc 1 1776 0 discriminator 1
 2182 0024 FEE7     		b	.L146
 2183              	.L145:
1777:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1778:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1779:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1780:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
 2184              		.loc 1 1780 0
 2185 0026 FB68     		ldr	r3, [r7, #12]
 2186 0028 002B     		cmp	r3, #0
 2187 002a 3AD0     		beq	.L150
 2188              		.loc 1 1780 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccIHW9zM.s 			page 74


 2189 002c 1F4B     		ldr	r3, .L151
 2190 002e 1B68     		ldr	r3, [r3]
 2191 0030 FA68     		ldr	r2, [r7, #12]
 2192 0032 9A42     		cmp	r2, r3
 2193 0034 35D0     		beq	.L150
1781:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1782:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 2194              		.loc 1 1782 0 is_stmt 1
 2195 0036 FFF7FEFF 		bl	vPortEnterCritical
1783:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1784:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2196              		.loc 1 1784 0
 2197 003a F868     		ldr	r0, [r7, #12]
 2198 003c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2199 0040 0346     		mov	r3, r0
 2200 0042 002B     		cmp	r3, #0
 2201 0044 2BD0     		beq	.L148
1785:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1786:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1787:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1789:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1790:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
 2202              		.loc 1 1790 0
 2203 0046 FB68     		ldr	r3, [r7, #12]
 2204 0048 0433     		adds	r3, r3, #4
 2205 004a 1846     		mov	r0, r3
 2206 004c FFF7FEFF 		bl	uxListRemove
1791:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2207              		.loc 1 1791 0
 2208 0050 FB68     		ldr	r3, [r7, #12]
 2209 0052 DA6A     		ldr	r2, [r3, #44]
 2210 0054 164B     		ldr	r3, .L151+4
 2211 0056 1B68     		ldr	r3, [r3]
 2212 0058 9A42     		cmp	r2, r3
 2213 005a 03D9     		bls	.L149
 2214              		.loc 1 1791 0 is_stmt 0 discriminator 1
 2215 005c FB68     		ldr	r3, [r7, #12]
 2216 005e DB6A     		ldr	r3, [r3, #44]
 2217 0060 134A     		ldr	r2, .L151+4
 2218 0062 1360     		str	r3, [r2]
 2219              	.L149:
 2220              		.loc 1 1791 0 discriminator 3
 2221 0064 FB68     		ldr	r3, [r7, #12]
 2222 0066 DA6A     		ldr	r2, [r3, #44]
 2223 0068 1346     		mov	r3, r2
 2224 006a 9B00     		lsls	r3, r3, #2
 2225 006c 1344     		add	r3, r3, r2
 2226 006e 9B00     		lsls	r3, r3, #2
 2227 0070 104A     		ldr	r2, .L151+8
 2228 0072 1A44     		add	r2, r2, r3
 2229 0074 FB68     		ldr	r3, [r7, #12]
 2230 0076 0433     		adds	r3, r3, #4
 2231 0078 1946     		mov	r1, r3
 2232 007a 1046     		mov	r0, r2
 2233 007c FFF7FEFF 		bl	vListInsertEnd
1792:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 75


1793:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1794:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2234              		.loc 1 1794 0 is_stmt 1 discriminator 3
 2235 0080 FB68     		ldr	r3, [r7, #12]
 2236 0082 DA6A     		ldr	r2, [r3, #44]
 2237 0084 094B     		ldr	r3, .L151
 2238 0086 1B68     		ldr	r3, [r3]
 2239 0088 DB6A     		ldr	r3, [r3, #44]
 2240 008a 9A42     		cmp	r2, r3
 2241 008c 07D3     		bcc	.L148
1795:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1796:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1797:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1798:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1799:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
 2242              		.loc 1 1799 0
 2243 008e 0A4B     		ldr	r3, .L151+12
 2244 0090 4FF08052 		mov	r2, #268435456
 2245 0094 1A60     		str	r2, [r3]
 2246              		.syntax unified
 2247              	@ 1799 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2248 0096 BFF34F8F 		dsb
 2249              	@ 0 "" 2
 2250              	@ 1799 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2251 009a BFF36F8F 		isb
 2252              	@ 0 "" 2
 2253              		.thumb
 2254              		.syntax unified
 2255              	.L148:
1800:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1802:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1803:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1804:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1805:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1806:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1807:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1808:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1809:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1810:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1811:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 2256              		.loc 1 1811 0
 2257 009e FFF7FEFF 		bl	vPortExitCritical
 2258              	.L150:
1812:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1813:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1814:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1815:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1816:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1817:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2259              		.loc 1 1817 0
 2260 00a2 00BF     		nop
 2261 00a4 1037     		adds	r7, r7, #16
 2262              	.LCFI69:
 2263              		.cfi_def_cfa_offset 8
 2264 00a6 BD46     		mov	sp, r7
 2265              	.LCFI70:
ARM GAS  /tmp/ccIHW9zM.s 			page 76


 2266              		.cfi_def_cfa_register 13
 2267              		@ sp needed
 2268 00a8 80BD     		pop	{r7, pc}
 2269              	.L152:
 2270 00aa 00BF     		.align	2
 2271              	.L151:
 2272 00ac 00000000 		.word	pxCurrentTCB
 2273 00b0 00000000 		.word	uxTopReadyPriority
 2274 00b4 00000000 		.word	pxReadyTasksLists
 2275 00b8 04ED00E0 		.word	-536810236
 2276              		.cfi_endproc
 2277              	.LFE17:
 2279              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2280              		.align	1
 2281              		.global	xTaskResumeFromISR
 2282              		.syntax unified
 2283              		.thumb
 2284              		.thumb_func
 2285              		.fpu fpv4-sp-d16
 2287              	xTaskResumeFromISR:
 2288              	.LFB18:
1818:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1819:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1820:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1821:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1822:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1824:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1825:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1826:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2289              		.loc 1 1826 0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 40
 2292              		@ frame_needed = 1, uses_anonymous_args = 0
 2293 0000 80B5     		push	{r7, lr}
 2294              	.LCFI71:
 2295              		.cfi_def_cfa_offset 8
 2296              		.cfi_offset 7, -8
 2297              		.cfi_offset 14, -4
 2298 0002 8AB0     		sub	sp, sp, #40
 2299              	.LCFI72:
 2300              		.cfi_def_cfa_offset 48
 2301 0004 00AF     		add	r7, sp, #0
 2302              	.LCFI73:
 2303              		.cfi_def_cfa_register 7
 2304 0006 7860     		str	r0, [r7, #4]
1827:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2305              		.loc 1 1827 0
 2306 0008 0023     		movs	r3, #0
 2307 000a 7B62     		str	r3, [r7, #36]
1828:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2308              		.loc 1 1828 0
 2309 000c 7B68     		ldr	r3, [r7, #4]
 2310 000e 3B62     		str	r3, [r7, #32]
1829:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1830:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1831:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  /tmp/ccIHW9zM.s 			page 77


 2311              		.loc 1 1831 0
 2312 0010 7B68     		ldr	r3, [r7, #4]
 2313 0012 002B     		cmp	r3, #0
 2314 0014 09D1     		bne	.L154
 2315              	.LBB148:
 2316              	.LBB149:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2317              		.loc 2 195 0 discriminator 1
 2318              		.syntax unified
 2319              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2320 0016 4FF05003 			mov r3, #80												
 2321 001a 83F31188 		msr basepri, r3											
 2322 001e BFF36F8F 		isb														
 2323 0022 BFF34F8F 		dsb														
 2324              	
 2325              	@ 0 "" 2
 2326              		.thumb
 2327              		.syntax unified
 2328 0026 BB61     		str	r3, [r7, #24]
 2329              	.L155:
 2330              	.LBE149:
 2331              	.LBE148:
 2332              		.loc 1 1831 0 discriminator 1
 2333 0028 FEE7     		b	.L155
 2334              	.L154:
1832:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1833:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1834:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1835:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1836:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1837:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1838:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1839:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1840:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1841:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1842:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1843:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1844:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1845:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1846:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1847:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1848:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1849:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2335              		.loc 1 1849 0
 2336 002a FFF7FEFF 		bl	vPortValidateInterruptPriority
 2337              	.LBB150:
 2338              	.LBB151:
 211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2339              		.loc 2 211 0
 2340              		.syntax unified
 2341              	@ 211 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2342 002e EFF31182 			mrs r2, basepri											
 2343 0032 4FF05003 		mov r3, #80												
 2344 0036 83F31188 		msr basepri, r3											
 2345 003a BFF36F8F 		isb														
 2346 003e BFF34F8F 		dsb														
 2347              	
ARM GAS  /tmp/ccIHW9zM.s 			page 78


 2348              	@ 0 "" 2
 2349              		.thumb
 2350              		.syntax unified
 2351 0042 7A61     		str	r2, [r7, #20]
 2352 0044 3B61     		str	r3, [r7, #16]
 223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2353              		.loc 2 223 0
 2354 0046 7B69     		ldr	r3, [r7, #20]
 2355              	.LBE151:
 2356              	.LBE150:
1850:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2357              		.loc 1 1851 0
 2358 0048 FB61     		str	r3, [r7, #28]
1852:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1853:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2359              		.loc 1 1853 0
 2360 004a 386A     		ldr	r0, [r7, #32]
 2361 004c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2362 0050 0346     		mov	r3, r0
 2363 0052 002B     		cmp	r3, #0
 2364 0054 30D0     		beq	.L157
1854:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1855:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1856:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1857:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1858:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2365              		.loc 1 1858 0
 2366 0056 1D4B     		ldr	r3, .L163
 2367 0058 1B68     		ldr	r3, [r3]
 2368 005a 002B     		cmp	r3, #0
 2369 005c 26D1     		bne	.L158
1859:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1860:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1861:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1862:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2370              		.loc 1 1862 0
 2371 005e 3B6A     		ldr	r3, [r7, #32]
 2372 0060 DA6A     		ldr	r2, [r3, #44]
 2373 0062 1B4B     		ldr	r3, .L163+4
 2374 0064 1B68     		ldr	r3, [r3]
 2375 0066 DB6A     		ldr	r3, [r3, #44]
 2376 0068 9A42     		cmp	r2, r3
 2377 006a 01D3     		bcc	.L159
1863:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1864:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
 2378              		.loc 1 1864 0
 2379 006c 0123     		movs	r3, #1
 2380 006e 7B62     		str	r3, [r7, #36]
 2381              	.L159:
1865:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1866:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1867:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1868:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1869:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1870:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1871:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccIHW9zM.s 			page 79


 2382              		.loc 1 1871 0
 2383 0070 3B6A     		ldr	r3, [r7, #32]
 2384 0072 0433     		adds	r3, r3, #4
 2385 0074 1846     		mov	r0, r3
 2386 0076 FFF7FEFF 		bl	uxListRemove
1872:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2387              		.loc 1 1872 0
 2388 007a 3B6A     		ldr	r3, [r7, #32]
 2389 007c DA6A     		ldr	r2, [r3, #44]
 2390 007e 154B     		ldr	r3, .L163+8
 2391 0080 1B68     		ldr	r3, [r3]
 2392 0082 9A42     		cmp	r2, r3
 2393 0084 03D9     		bls	.L160
 2394              		.loc 1 1872 0 is_stmt 0 discriminator 1
 2395 0086 3B6A     		ldr	r3, [r7, #32]
 2396 0088 DB6A     		ldr	r3, [r3, #44]
 2397 008a 124A     		ldr	r2, .L163+8
 2398 008c 1360     		str	r3, [r2]
 2399              	.L160:
 2400              		.loc 1 1872 0 discriminator 3
 2401 008e 3B6A     		ldr	r3, [r7, #32]
 2402 0090 DA6A     		ldr	r2, [r3, #44]
 2403 0092 1346     		mov	r3, r2
 2404 0094 9B00     		lsls	r3, r3, #2
 2405 0096 1344     		add	r3, r3, r2
 2406 0098 9B00     		lsls	r3, r3, #2
 2407 009a 0F4A     		ldr	r2, .L163+12
 2408 009c 1A44     		add	r2, r2, r3
 2409 009e 3B6A     		ldr	r3, [r7, #32]
 2410 00a0 0433     		adds	r3, r3, #4
 2411 00a2 1946     		mov	r1, r3
 2412 00a4 1046     		mov	r0, r2
 2413 00a6 FFF7FEFF 		bl	vListInsertEnd
 2414 00aa 05E0     		b	.L157
 2415              	.L158:
1873:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1874:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1875:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1876:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1877:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1878:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1879:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 2416              		.loc 1 1879 0 is_stmt 1
 2417 00ac 3B6A     		ldr	r3, [r7, #32]
 2418 00ae 1833     		adds	r3, r3, #24
 2419 00b0 1946     		mov	r1, r3
 2420 00b2 0A48     		ldr	r0, .L163+16
 2421 00b4 FFF7FEFF 		bl	vListInsertEnd
 2422              	.L157:
 2423 00b8 FB69     		ldr	r3, [r7, #28]
 2424 00ba FB60     		str	r3, [r7, #12]
 2425              	.LBB152:
 2426              	.LBB153:
 2427              		.loc 2 229 0
 2428 00bc FB68     		ldr	r3, [r7, #12]
 2429              		.syntax unified
 2430              	@ 229 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccIHW9zM.s 			page 80


 2431 00be 83F31188 			msr basepri, r3	
 2432              	@ 0 "" 2
 2433              		.thumb
 2434              		.syntax unified
 2435              	.LBE153:
 2436              	.LBE152:
1880:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1881:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1882:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1883:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1884:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1885:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1886:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1887:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1888:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1889:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
 2437              		.loc 1 1889 0
 2438 00c2 7B6A     		ldr	r3, [r7, #36]
1890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2439              		.loc 1 1890 0
 2440 00c4 1846     		mov	r0, r3
 2441 00c6 2837     		adds	r7, r7, #40
 2442              	.LCFI74:
 2443              		.cfi_def_cfa_offset 8
 2444 00c8 BD46     		mov	sp, r7
 2445              	.LCFI75:
 2446              		.cfi_def_cfa_register 13
 2447              		@ sp needed
 2448 00ca 80BD     		pop	{r7, pc}
 2449              	.L164:
 2450              		.align	2
 2451              	.L163:
 2452 00cc 00000000 		.word	uxSchedulerSuspended
 2453 00d0 00000000 		.word	pxCurrentTCB
 2454 00d4 00000000 		.word	uxTopReadyPriority
 2455 00d8 00000000 		.word	pxReadyTasksLists
 2456 00dc 00000000 		.word	xPendingReadyList
 2457              		.cfi_endproc
 2458              	.LFE18:
 2460              		.section	.rodata
 2461              		.align	2
 2462              	.LC0:
 2463 0000 49444C45 		.ascii	"IDLE\000"
 2463      00
 2464              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2465              		.align	1
 2466              		.global	vTaskStartScheduler
 2467              		.syntax unified
 2468              		.thumb
 2469              		.thumb_func
 2470              		.fpu fpv4-sp-d16
 2472              	vTaskStartScheduler:
 2473              	.LFB19:
1891:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1892:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1893:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1894:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 81


1895:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1896:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2474              		.loc 1 1896 0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 24
 2477              		@ frame_needed = 1, uses_anonymous_args = 0
 2478 0000 80B5     		push	{r7, lr}
 2479              	.LCFI76:
 2480              		.cfi_def_cfa_offset 8
 2481              		.cfi_offset 7, -8
 2482              		.cfi_offset 14, -4
 2483 0002 8AB0     		sub	sp, sp, #40
 2484              	.LCFI77:
 2485              		.cfi_def_cfa_offset 48
 2486 0004 04AF     		add	r7, sp, #16
 2487              	.LCFI78:
 2488              		.cfi_def_cfa 7, 32
 2489              	.LBB154:
1897:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1898:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1900:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1901:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1902:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 2490              		.loc 1 1902 0
 2491 0006 0023     		movs	r3, #0
 2492 0008 BB60     		str	r3, [r7, #8]
1903:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2493              		.loc 1 1903 0
 2494 000a 0023     		movs	r3, #0
 2495 000c 7B60     		str	r3, [r7, #4]
1904:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1905:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1906:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1907:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1908:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
 2496              		.loc 1 1908 0
 2497 000e 3A46     		mov	r2, r7
 2498 0010 391D     		adds	r1, r7, #4
 2499 0012 07F10803 		add	r3, r7, #8
 2500 0016 1846     		mov	r0, r3
 2501 0018 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
1909:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2502              		.loc 1 1909 0
 2503 001c 3968     		ldr	r1, [r7]
 2504 001e 7B68     		ldr	r3, [r7, #4]
 2505 0020 BA68     		ldr	r2, [r7, #8]
 2506 0022 0292     		str	r2, [sp, #8]
 2507 0024 0193     		str	r3, [sp, #4]
 2508 0026 0023     		movs	r3, #0
 2509 0028 0093     		str	r3, [sp]
 2510 002a 0023     		movs	r3, #0
 2511 002c 0A46     		mov	r2, r1
 2512 002e 2049     		ldr	r1, .L173
 2513 0030 2048     		ldr	r0, .L173+4
 2514 0032 FFF7FEFF 		bl	xTaskCreateStatic
 2515 0036 0246     		mov	r2, r0
ARM GAS  /tmp/ccIHW9zM.s 			page 82


 2516 0038 1F4B     		ldr	r3, .L173+8
 2517 003a 1A60     		str	r2, [r3]
1910:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1911:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1912:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1913:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1914:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1915:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1916:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1917:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
 2518              		.loc 1 1917 0
 2519 003c 1E4B     		ldr	r3, .L173+8
 2520 003e 1B68     		ldr	r3, [r3]
 2521 0040 002B     		cmp	r3, #0
 2522 0042 02D0     		beq	.L166
1918:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1919:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 2523              		.loc 1 1919 0
 2524 0044 0123     		movs	r3, #1
 2525 0046 7B61     		str	r3, [r7, #20]
 2526 0048 01E0     		b	.L167
 2527              	.L166:
1920:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1921:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1922:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1923:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
 2528              		.loc 1 1923 0
 2529 004a 0023     		movs	r3, #0
 2530 004c 7B61     		str	r3, [r7, #20]
 2531              	.L167:
 2532              	.LBE154:
1924:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1925:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1926:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1927:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1928:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1929:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1930:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1931:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1932:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1933:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1934:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1935:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1936:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1937:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1938:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1939:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1940:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
 2533              		.loc 1 1940 0
 2534 004e 7B69     		ldr	r3, [r7, #20]
 2535 0050 012B     		cmp	r3, #1
 2536 0052 02D1     		bne	.L168
1941:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1942:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
 2537              		.loc 1 1942 0
 2538 0054 FFF7FEFF 		bl	xTimerCreateTimerTask
 2539 0058 7861     		str	r0, [r7, #20]
ARM GAS  /tmp/ccIHW9zM.s 			page 83


 2540              	.L168:
1943:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1944:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1945:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1946:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1947:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1948:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1949:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1950:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
 2541              		.loc 1 1951 0
 2542 005a 7B69     		ldr	r3, [r7, #20]
 2543 005c 012B     		cmp	r3, #1
 2544 005e 15D1     		bne	.L169
 2545              	.LBB155:
 2546              	.LBB156:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2547              		.loc 2 195 0
 2548              		.syntax unified
 2549              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2550 0060 4FF05003 			mov r3, #80												
 2551 0064 83F31188 		msr basepri, r3											
 2552 0068 BFF36F8F 		isb														
 2553 006c BFF34F8F 		dsb														
 2554              	
 2555              	@ 0 "" 2
 2556              		.thumb
 2557              		.syntax unified
 2558 0070 3B61     		str	r3, [r7, #16]
 2559              	.LBE156:
 2560              	.LBE155:
1952:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1953:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1954:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1955:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
1956:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1957:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1958:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
1959:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1960:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1961:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1962:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1963:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1964:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1965:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1966:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1967:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1968:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1970:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1971:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1972:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1973:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1974:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1975:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1976:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1977:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
ARM GAS  /tmp/ccIHW9zM.s 			page 84


 2561              		.loc 1 1977 0
 2562 0072 124B     		ldr	r3, .L173+12
 2563 0074 4FF0FF32 		mov	r2, #-1
 2564 0078 1A60     		str	r2, [r3]
1978:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2565              		.loc 1 1978 0
 2566 007a 114B     		ldr	r3, .L173+16
 2567 007c 0122     		movs	r2, #1
 2568 007e 1A60     		str	r2, [r3]
1979:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2569              		.loc 1 1979 0
 2570 0080 104B     		ldr	r3, .L173+20
 2571 0082 0022     		movs	r2, #0
 2572 0084 1A60     		str	r2, [r3]
1980:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1981:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1982:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1983:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1984:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1985:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1986:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
1987:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1988:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1990:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1991:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
 2573              		.loc 1 1991 0
 2574 0086 FFF7FEFF 		bl	xPortStartScheduler
1992:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1993:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1994:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1995:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1996:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1997:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1998:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1999:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2000:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2001:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2002:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2003:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2004:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2005:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2006:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2007:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2008:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2009:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2010:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2011:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2012:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2575              		.loc 1 2012 0
 2576 008a 0DE0     		b	.L172
 2577              	.L169:
2006:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2578              		.loc 1 2006 0
 2579 008c 7B69     		ldr	r3, [r7, #20]
 2580 008e B3F1FF3F 		cmp	r3, #-1
 2581 0092 09D1     		bne	.L172
ARM GAS  /tmp/ccIHW9zM.s 			page 85


 2582              	.LBB157:
 2583              	.LBB158:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2584              		.loc 2 195 0 discriminator 1
 2585              		.syntax unified
 2586              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2587 0094 4FF05003 			mov r3, #80												
 2588 0098 83F31188 		msr basepri, r3											
 2589 009c BFF36F8F 		isb														
 2590 00a0 BFF34F8F 		dsb														
 2591              	
 2592              	@ 0 "" 2
 2593              		.thumb
 2594              		.syntax unified
 2595 00a4 FB60     		str	r3, [r7, #12]
 2596              	.L171:
 2597              	.LBE158:
 2598              	.LBE157:
2006:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2599              		.loc 1 2006 0 discriminator 2
 2600 00a6 FEE7     		b	.L171
 2601              	.L172:
 2602              		.loc 1 2012 0
 2603 00a8 00BF     		nop
 2604 00aa 1837     		adds	r7, r7, #24
 2605              	.LCFI79:
 2606              		.cfi_def_cfa_offset 8
 2607 00ac BD46     		mov	sp, r7
 2608              	.LCFI80:
 2609              		.cfi_def_cfa_register 13
 2610              		@ sp needed
 2611 00ae 80BD     		pop	{r7, pc}
 2612              	.L174:
 2613              		.align	2
 2614              	.L173:
 2615 00b0 00000000 		.word	.LC0
 2616 00b4 00000000 		.word	prvIdleTask
 2617 00b8 00000000 		.word	xIdleTaskHandle
 2618 00bc 00000000 		.word	xNextTaskUnblockTime
 2619 00c0 00000000 		.word	xSchedulerRunning
 2620 00c4 00000000 		.word	xTickCount
 2621              		.cfi_endproc
 2622              	.LFE19:
 2624              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2625              		.align	1
 2626              		.global	vTaskEndScheduler
 2627              		.syntax unified
 2628              		.thumb
 2629              		.thumb_func
 2630              		.fpu fpv4-sp-d16
 2632              	vTaskEndScheduler:
 2633              	.LFB20:
2013:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2014:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2015:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2016:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2634              		.loc 1 2016 0
ARM GAS  /tmp/ccIHW9zM.s 			page 86


 2635              		.cfi_startproc
 2636              		@ args = 0, pretend = 0, frame = 8
 2637              		@ frame_needed = 1, uses_anonymous_args = 0
 2638 0000 80B5     		push	{r7, lr}
 2639              	.LCFI81:
 2640              		.cfi_def_cfa_offset 8
 2641              		.cfi_offset 7, -8
 2642              		.cfi_offset 14, -4
 2643 0002 82B0     		sub	sp, sp, #8
 2644              	.LCFI82:
 2645              		.cfi_def_cfa_offset 16
 2646 0004 00AF     		add	r7, sp, #0
 2647              	.LCFI83:
 2648              		.cfi_def_cfa_register 7
 2649              	.LBB159:
 2650              	.LBB160:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2651              		.loc 2 195 0
 2652              		.syntax unified
 2653              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2654 0006 4FF05003 			mov r3, #80												
 2655 000a 83F31188 		msr basepri, r3											
 2656 000e BFF36F8F 		isb														
 2657 0012 BFF34F8F 		dsb														
 2658              	
 2659              	@ 0 "" 2
 2660              		.thumb
 2661              		.syntax unified
 2662 0016 7B60     		str	r3, [r7, #4]
 2663              	.LBE160:
 2664              	.LBE159:
2017:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2018:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2019:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2020:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2021:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2665              		.loc 1 2021 0
 2666 0018 044B     		ldr	r3, .L176
 2667 001a 0022     		movs	r2, #0
 2668 001c 1A60     		str	r2, [r3]
2022:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2669              		.loc 1 2022 0
 2670 001e FFF7FEFF 		bl	vPortEndScheduler
2023:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2671              		.loc 1 2023 0
 2672 0022 00BF     		nop
 2673 0024 0837     		adds	r7, r7, #8
 2674              	.LCFI84:
 2675              		.cfi_def_cfa_offset 8
 2676 0026 BD46     		mov	sp, r7
 2677              	.LCFI85:
 2678              		.cfi_def_cfa_register 13
 2679              		@ sp needed
 2680 0028 80BD     		pop	{r7, pc}
 2681              	.L177:
 2682 002a 00BF     		.align	2
 2683              	.L176:
ARM GAS  /tmp/ccIHW9zM.s 			page 87


 2684 002c 00000000 		.word	xSchedulerRunning
 2685              		.cfi_endproc
 2686              	.LFE20:
 2688              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2689              		.align	1
 2690              		.global	vTaskSuspendAll
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2694              		.fpu fpv4-sp-d16
 2696              	vTaskSuspendAll:
 2697              	.LFB21:
2024:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2025:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2027:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2698              		.loc 1 2027 0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 0
 2701              		@ frame_needed = 1, uses_anonymous_args = 0
 2702              		@ link register save eliminated.
 2703 0000 80B4     		push	{r7}
 2704              	.LCFI86:
 2705              		.cfi_def_cfa_offset 4
 2706              		.cfi_offset 7, -4
 2707 0002 00AF     		add	r7, sp, #0
 2708              	.LCFI87:
 2709              		.cfi_def_cfa_register 7
2028:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2029:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2030:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2031:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2032:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
 2710              		.loc 1 2032 0
 2711 0004 044B     		ldr	r3, .L179
 2712 0006 1B68     		ldr	r3, [r3]
 2713 0008 0133     		adds	r3, r3, #1
 2714 000a 034A     		ldr	r2, .L179
 2715 000c 1360     		str	r3, [r2]
2033:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2716              		.loc 1 2033 0
 2717 000e 00BF     		nop
 2718 0010 BD46     		mov	sp, r7
 2719              	.LCFI88:
 2720              		.cfi_def_cfa_register 13
 2721              		@ sp needed
 2722 0012 5DF8047B 		ldr	r7, [sp], #4
 2723              	.LCFI89:
 2724              		.cfi_restore 7
 2725              		.cfi_def_cfa_offset 0
 2726 0016 7047     		bx	lr
 2727              	.L180:
 2728              		.align	2
 2729              	.L179:
 2730 0018 00000000 		.word	uxSchedulerSuspended
 2731              		.cfi_endproc
 2732              	.LFE21:
ARM GAS  /tmp/ccIHW9zM.s 			page 88


 2734              		.section	.text.xTaskResumeAll,"ax",%progbits
 2735              		.align	1
 2736              		.global	xTaskResumeAll
 2737              		.syntax unified
 2738              		.thumb
 2739              		.thumb_func
 2740              		.fpu fpv4-sp-d16
 2742              	xTaskResumeAll:
 2743              	.LFB22:
2034:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2035:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2036:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2037:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2038:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2039:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2040:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2041:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2042:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2043:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2044:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2045:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2046:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2047:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2048:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2049:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2050:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2051:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2052:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2053:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2054:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2055:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2056:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2057:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2058:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2059:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2060:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2061:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2062:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2063:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2064:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2065:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2066:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2067:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2068:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2069:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2070:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2071:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2072:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2073:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2075:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2076:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2077:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2078:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2079:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2080:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2081:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
ARM GAS  /tmp/ccIHW9zM.s 			page 89


2082:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2083:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2084:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2085:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2086:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2087:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2088:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2089:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2090:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2091:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2092:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2094:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2095:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2096:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2097:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2098:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2744              		.loc 1 2100 0
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 16
 2747              		@ frame_needed = 1, uses_anonymous_args = 0
 2748 0000 80B5     		push	{r7, lr}
 2749              	.LCFI90:
 2750              		.cfi_def_cfa_offset 8
 2751              		.cfi_offset 7, -8
 2752              		.cfi_offset 14, -4
 2753 0002 84B0     		sub	sp, sp, #16
 2754              	.LCFI91:
 2755              		.cfi_def_cfa_offset 24
 2756 0004 00AF     		add	r7, sp, #0
 2757              	.LCFI92:
 2758              		.cfi_def_cfa_register 7
2101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2759              		.loc 1 2101 0
 2760 0006 0023     		movs	r3, #0
 2761 0008 FB60     		str	r3, [r7, #12]
2102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2762              		.loc 1 2102 0
 2763 000a 0023     		movs	r3, #0
 2764 000c BB60     		str	r3, [r7, #8]
2103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
 2765              		.loc 1 2106 0
 2766 000e 414B     		ldr	r3, .L193
 2767 0010 1B68     		ldr	r3, [r3]
 2768 0012 002B     		cmp	r3, #0
 2769 0014 09D1     		bne	.L182
 2770              	.LBB161:
 2771              	.LBB162:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2772              		.loc 2 195 0 discriminator 1
 2773              		.syntax unified
 2774              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccIHW9zM.s 			page 90


 2775 0016 4FF05003 			mov r3, #80												
 2776 001a 83F31188 		msr basepri, r3											
 2777 001e BFF36F8F 		isb														
 2778 0022 BFF34F8F 		dsb														
 2779              	
 2780              	@ 0 "" 2
 2781              		.thumb
 2782              		.syntax unified
 2783 0026 3B60     		str	r3, [r7]
 2784              	.L183:
 2785              	.LBE162:
 2786              	.LBE161:
 2787              		.loc 1 2106 0 discriminator 1
 2788 0028 FEE7     		b	.L183
 2789              	.L182:
2107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2790              		.loc 1 2113 0
 2791 002a FFF7FEFF 		bl	vPortEnterCritical
2114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
 2792              		.loc 1 2115 0
 2793 002e 394B     		ldr	r3, .L193
 2794 0030 1B68     		ldr	r3, [r3]
 2795 0032 013B     		subs	r3, r3, #1
 2796 0034 374A     		ldr	r2, .L193
 2797 0036 1360     		str	r3, [r2]
2116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2798              		.loc 1 2117 0
 2799 0038 364B     		ldr	r3, .L193
 2800 003a 1B68     		ldr	r3, [r3]
 2801 003c 002B     		cmp	r3, #0
 2802 003e 62D1     		bne	.L184
2118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 2803              		.loc 1 2119 0
 2804 0040 354B     		ldr	r3, .L193+4
 2805 0042 1B68     		ldr	r3, [r3]
 2806 0044 002B     		cmp	r3, #0
 2807 0046 5ED0     		beq	.L184
2120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 2808              		.loc 1 2123 0
 2809 0048 2FE0     		b	.L185
 2810              	.L187:
2124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
 2811              		.loc 1 2125 0
 2812 004a 344B     		ldr	r3, .L193+8
ARM GAS  /tmp/ccIHW9zM.s 			page 91


 2813 004c DB68     		ldr	r3, [r3, #12]
 2814 004e DB68     		ldr	r3, [r3, #12]
 2815 0050 FB60     		str	r3, [r7, #12]
2126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2816              		.loc 1 2126 0
 2817 0052 FB68     		ldr	r3, [r7, #12]
 2818 0054 1833     		adds	r3, r3, #24
 2819 0056 1846     		mov	r0, r3
 2820 0058 FFF7FEFF 		bl	uxListRemove
2127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2821              		.loc 1 2127 0
 2822 005c FB68     		ldr	r3, [r7, #12]
 2823 005e 0433     		adds	r3, r3, #4
 2824 0060 1846     		mov	r0, r3
 2825 0062 FFF7FEFF 		bl	uxListRemove
2128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2826              		.loc 1 2128 0
 2827 0066 FB68     		ldr	r3, [r7, #12]
 2828 0068 DA6A     		ldr	r2, [r3, #44]
 2829 006a 2D4B     		ldr	r3, .L193+12
 2830 006c 1B68     		ldr	r3, [r3]
 2831 006e 9A42     		cmp	r2, r3
 2832 0070 03D9     		bls	.L186
 2833              		.loc 1 2128 0 is_stmt 0 discriminator 1
 2834 0072 FB68     		ldr	r3, [r7, #12]
 2835 0074 DB6A     		ldr	r3, [r3, #44]
 2836 0076 2A4A     		ldr	r2, .L193+12
 2837 0078 1360     		str	r3, [r2]
 2838              	.L186:
 2839              		.loc 1 2128 0 discriminator 3
 2840 007a FB68     		ldr	r3, [r7, #12]
 2841 007c DA6A     		ldr	r2, [r3, #44]
 2842 007e 1346     		mov	r3, r2
 2843 0080 9B00     		lsls	r3, r3, #2
 2844 0082 1344     		add	r3, r3, r2
 2845 0084 9B00     		lsls	r3, r3, #2
 2846 0086 274A     		ldr	r2, .L193+16
 2847 0088 1A44     		add	r2, r2, r3
 2848 008a FB68     		ldr	r3, [r7, #12]
 2849 008c 0433     		adds	r3, r3, #4
 2850 008e 1946     		mov	r1, r3
 2851 0090 1046     		mov	r0, r2
 2852 0092 FFF7FEFF 		bl	vListInsertEnd
2129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2853              		.loc 1 2132 0 is_stmt 1 discriminator 3
 2854 0096 FB68     		ldr	r3, [r7, #12]
 2855 0098 DA6A     		ldr	r2, [r3, #44]
 2856 009a 234B     		ldr	r3, .L193+20
 2857 009c 1B68     		ldr	r3, [r3]
 2858 009e DB6A     		ldr	r3, [r3, #44]
 2859 00a0 9A42     		cmp	r2, r3
 2860 00a2 02D3     		bcc	.L185
2133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
ARM GAS  /tmp/ccIHW9zM.s 			page 92


 2861              		.loc 1 2134 0
 2862 00a4 214B     		ldr	r3, .L193+24
 2863 00a6 0122     		movs	r2, #1
 2864 00a8 1A60     		str	r2, [r3]
 2865              	.L185:
2123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2866              		.loc 1 2123 0
 2867 00aa 1C4B     		ldr	r3, .L193+8
 2868 00ac 1B68     		ldr	r3, [r3]
 2869 00ae 002B     		cmp	r3, #0
 2870 00b0 CBD1     		bne	.L187
2135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
 2871              		.loc 1 2142 0
 2872 00b2 FB68     		ldr	r3, [r7, #12]
 2873 00b4 002B     		cmp	r3, #0
 2874 00b6 01D0     		beq	.L188
2143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
 2875              		.loc 1 2150 0
 2876 00b8 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2877              	.L188:
 2878              	.LBB163:
2151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 2879              		.loc 1 2158 0
 2880 00bc 1C4B     		ldr	r3, .L193+28
 2881 00be 1B68     		ldr	r3, [r3]
 2882 00c0 7B60     		str	r3, [r7, #4]
2159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
 2883              		.loc 1 2160 0
 2884 00c2 7B68     		ldr	r3, [r7, #4]
 2885 00c4 002B     		cmp	r3, #0
 2886 00c6 10D0     		beq	.L189
 2887              	.L191:
2161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/ccIHW9zM.s 			page 93


2164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
 2888              		.loc 1 2164 0
 2889 00c8 FFF7FEFF 		bl	xTaskIncrementTick
 2890 00cc 0346     		mov	r3, r0
 2891 00ce 002B     		cmp	r3, #0
 2892 00d0 02D0     		beq	.L190
2165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
 2893              		.loc 1 2166 0
 2894 00d2 164B     		ldr	r3, .L193+24
 2895 00d4 0122     		movs	r2, #1
 2896 00d6 1A60     		str	r2, [r3]
 2897              	.L190:
2167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
 2898              		.loc 1 2172 0
 2899 00d8 7B68     		ldr	r3, [r7, #4]
 2900 00da 013B     		subs	r3, r3, #1
 2901 00dc 7B60     		str	r3, [r7, #4]
2173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2902              		.loc 1 2173 0
 2903 00de 7B68     		ldr	r3, [r7, #4]
 2904 00e0 002B     		cmp	r3, #0
 2905 00e2 F1D1     		bne	.L191
2174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
 2906              		.loc 1 2175 0
 2907 00e4 124B     		ldr	r3, .L193+28
 2908 00e6 0022     		movs	r2, #0
 2909 00e8 1A60     		str	r2, [r3]
 2910              	.L189:
 2911              	.LBE163:
2176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
 2912              		.loc 1 2183 0
 2913 00ea 104B     		ldr	r3, .L193+24
 2914 00ec 1B68     		ldr	r3, [r3]
 2915 00ee 002B     		cmp	r3, #0
 2916 00f0 09D0     		beq	.L184
2184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
 2917              		.loc 1 2187 0
 2918 00f2 0123     		movs	r3, #1
 2919 00f4 BB60     		str	r3, [r7, #8]
2188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccIHW9zM.s 			page 94


2189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 2920              		.loc 1 2190 0
 2921 00f6 0F4B     		ldr	r3, .L193+32
 2922 00f8 4FF08052 		mov	r2, #268435456
 2923 00fc 1A60     		str	r2, [r3]
 2924              		.syntax unified
 2925              	@ 2190 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2926 00fe BFF34F8F 		dsb
 2927              	@ 0 "" 2
 2928              	@ 2190 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2929 0102 BFF36F8F 		isb
 2930              	@ 0 "" 2
 2931              		.thumb
 2932              		.syntax unified
 2933              	.L184:
2191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 2934              		.loc 1 2203 0
 2935 0106 FFF7FEFF 		bl	vPortExitCritical
2204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
 2936              		.loc 1 2205 0
 2937 010a BB68     		ldr	r3, [r7, #8]
2206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2938              		.loc 1 2206 0
 2939 010c 1846     		mov	r0, r3
 2940 010e 1037     		adds	r7, r7, #16
 2941              	.LCFI93:
 2942              		.cfi_def_cfa_offset 8
 2943 0110 BD46     		mov	sp, r7
 2944              	.LCFI94:
 2945              		.cfi_def_cfa_register 13
 2946              		@ sp needed
 2947 0112 80BD     		pop	{r7, pc}
 2948              	.L194:
 2949              		.align	2
 2950              	.L193:
 2951 0114 00000000 		.word	uxSchedulerSuspended
 2952 0118 00000000 		.word	uxCurrentNumberOfTasks
 2953 011c 00000000 		.word	xPendingReadyList
 2954 0120 00000000 		.word	uxTopReadyPriority
 2955 0124 00000000 		.word	pxReadyTasksLists
 2956 0128 00000000 		.word	pxCurrentTCB
 2957 012c 00000000 		.word	xYieldPending
 2958 0130 00000000 		.word	uxPendedTicks
ARM GAS  /tmp/ccIHW9zM.s 			page 95


 2959 0134 04ED00E0 		.word	-536810236
 2960              		.cfi_endproc
 2961              	.LFE22:
 2963              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2964              		.align	1
 2965              		.global	xTaskGetTickCount
 2966              		.syntax unified
 2967              		.thumb
 2968              		.thumb_func
 2969              		.fpu fpv4-sp-d16
 2971              	xTaskGetTickCount:
 2972              	.LFB23:
2207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2973              		.loc 1 2210 0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 8
 2976              		@ frame_needed = 1, uses_anonymous_args = 0
 2977              		@ link register save eliminated.
 2978 0000 80B4     		push	{r7}
 2979              	.LCFI95:
 2980              		.cfi_def_cfa_offset 4
 2981              		.cfi_offset 7, -4
 2982 0002 83B0     		sub	sp, sp, #12
 2983              	.LCFI96:
 2984              		.cfi_def_cfa_offset 16
 2985 0004 00AF     		add	r7, sp, #0
 2986              	.LCFI97:
 2987              		.cfi_def_cfa_register 7
2211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
 2988              		.loc 1 2216 0
 2989 0006 054B     		ldr	r3, .L197
 2990 0008 1B68     		ldr	r3, [r3]
 2991 000a 7B60     		str	r3, [r7, #4]
2217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
 2992              		.loc 1 2220 0
 2993 000c 7B68     		ldr	r3, [r7, #4]
2221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2994              		.loc 1 2221 0
 2995 000e 1846     		mov	r0, r3
 2996 0010 0C37     		adds	r7, r7, #12
 2997              	.LCFI98:
 2998              		.cfi_def_cfa_offset 4
 2999 0012 BD46     		mov	sp, r7
 3000              	.LCFI99:
 3001              		.cfi_def_cfa_register 13
 3002              		@ sp needed
ARM GAS  /tmp/ccIHW9zM.s 			page 96


 3003 0014 5DF8047B 		ldr	r7, [sp], #4
 3004              	.LCFI100:
 3005              		.cfi_restore 7
 3006              		.cfi_def_cfa_offset 0
 3007 0018 7047     		bx	lr
 3008              	.L198:
 3009 001a 00BF     		.align	2
 3010              	.L197:
 3011 001c 00000000 		.word	xTickCount
 3012              		.cfi_endproc
 3013              	.LFE23:
 3015              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 3016              		.align	1
 3017              		.global	xTaskGetTickCountFromISR
 3018              		.syntax unified
 3019              		.thumb
 3020              		.thumb_func
 3021              		.fpu fpv4-sp-d16
 3023              	xTaskGetTickCountFromISR:
 3024              	.LFB24:
2222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3025              		.loc 1 2225 0
 3026              		.cfi_startproc
 3027              		@ args = 0, pretend = 0, frame = 8
 3028              		@ frame_needed = 1, uses_anonymous_args = 0
 3029 0000 80B5     		push	{r7, lr}
 3030              	.LCFI101:
 3031              		.cfi_def_cfa_offset 8
 3032              		.cfi_offset 7, -8
 3033              		.cfi_offset 14, -4
 3034 0002 82B0     		sub	sp, sp, #8
 3035              	.LCFI102:
 3036              		.cfi_def_cfa_offset 16
 3037 0004 00AF     		add	r7, sp, #0
 3038              	.LCFI103:
 3039              		.cfi_def_cfa_register 7
2226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2230:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2231:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2232:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2233:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2234:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2235:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2236:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2237:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2238:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2239:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2240:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2241:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2242:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2243:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
ARM GAS  /tmp/ccIHW9zM.s 			page 97


 3040              		.loc 1 2243 0
 3041 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
2244:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2245:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
 3042              		.loc 1 2245 0
 3043 000a 0023     		movs	r3, #0
 3044 000c 7B60     		str	r3, [r7, #4]
2246:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2247:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
 3045              		.loc 1 2247 0
 3046 000e 044B     		ldr	r3, .L201
 3047 0010 1B68     		ldr	r3, [r3]
 3048 0012 3B60     		str	r3, [r7]
2248:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2249:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2250:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 3049              		.loc 1 2251 0
 3050 0014 3B68     		ldr	r3, [r7]
2252:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3051              		.loc 1 2252 0
 3052 0016 1846     		mov	r0, r3
 3053 0018 0837     		adds	r7, r7, #8
 3054              	.LCFI104:
 3055              		.cfi_def_cfa_offset 8
 3056 001a BD46     		mov	sp, r7
 3057              	.LCFI105:
 3058              		.cfi_def_cfa_register 13
 3059              		@ sp needed
 3060 001c 80BD     		pop	{r7, pc}
 3061              	.L202:
 3062 001e 00BF     		.align	2
 3063              	.L201:
 3064 0020 00000000 		.word	xTickCount
 3065              		.cfi_endproc
 3066              	.LFE24:
 3068              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 3069              		.align	1
 3070              		.global	uxTaskGetNumberOfTasks
 3071              		.syntax unified
 3072              		.thumb
 3073              		.thumb_func
 3074              		.fpu fpv4-sp-d16
 3076              	uxTaskGetNumberOfTasks:
 3077              	.LFB25:
2253:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2254:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2256:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3078              		.loc 1 2256 0
 3079              		.cfi_startproc
 3080              		@ args = 0, pretend = 0, frame = 0
 3081              		@ frame_needed = 1, uses_anonymous_args = 0
 3082              		@ link register save eliminated.
 3083 0000 80B4     		push	{r7}
 3084              	.LCFI106:
 3085              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccIHW9zM.s 			page 98


 3086              		.cfi_offset 7, -4
 3087 0002 00AF     		add	r7, sp, #0
 3088              	.LCFI107:
 3089              		.cfi_def_cfa_register 7
2257:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2258:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2259:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
 3090              		.loc 1 2259 0
 3091 0004 034B     		ldr	r3, .L205
 3092 0006 1B68     		ldr	r3, [r3]
2260:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3093              		.loc 1 2260 0
 3094 0008 1846     		mov	r0, r3
 3095 000a BD46     		mov	sp, r7
 3096              	.LCFI108:
 3097              		.cfi_def_cfa_register 13
 3098              		@ sp needed
 3099 000c 5DF8047B 		ldr	r7, [sp], #4
 3100              	.LCFI109:
 3101              		.cfi_restore 7
 3102              		.cfi_def_cfa_offset 0
 3103 0010 7047     		bx	lr
 3104              	.L206:
 3105 0012 00BF     		.align	2
 3106              	.L205:
 3107 0014 00000000 		.word	uxCurrentNumberOfTasks
 3108              		.cfi_endproc
 3109              	.LFE25:
 3111              		.section	.text.pcTaskGetName,"ax",%progbits
 3112              		.align	1
 3113              		.global	pcTaskGetName
 3114              		.syntax unified
 3115              		.thumb
 3116              		.thumb_func
 3117              		.fpu fpv4-sp-d16
 3119              	pcTaskGetName:
 3120              	.LFB26:
2261:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2262:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2263:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2264:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3121              		.loc 1 2264 0
 3122              		.cfi_startproc
 3123              		@ args = 0, pretend = 0, frame = 16
 3124              		@ frame_needed = 1, uses_anonymous_args = 0
 3125              		@ link register save eliminated.
 3126 0000 80B4     		push	{r7}
 3127              	.LCFI110:
 3128              		.cfi_def_cfa_offset 4
 3129              		.cfi_offset 7, -4
 3130 0002 85B0     		sub	sp, sp, #20
 3131              	.LCFI111:
 3132              		.cfi_def_cfa_offset 24
 3133 0004 00AF     		add	r7, sp, #0
 3134              	.LCFI112:
 3135              		.cfi_def_cfa_register 7
 3136 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccIHW9zM.s 			page 99


2265:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2266:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2267:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2268:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2269:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
 3137              		.loc 1 2269 0
 3138 0008 7B68     		ldr	r3, [r7, #4]
 3139 000a 002B     		cmp	r3, #0
 3140 000c 02D1     		bne	.L208
 3141              		.loc 1 2269 0 is_stmt 0 discriminator 1
 3142 000e 0D4B     		ldr	r3, .L213
 3143 0010 1B68     		ldr	r3, [r3]
 3144 0012 00E0     		b	.L209
 3145              	.L208:
 3146              		.loc 1 2269 0 discriminator 2
 3147 0014 7B68     		ldr	r3, [r7, #4]
 3148              	.L209:
 3149              		.loc 1 2269 0 discriminator 4
 3150 0016 FB60     		str	r3, [r7, #12]
2270:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 3151              		.loc 1 2270 0 is_stmt 1 discriminator 4
 3152 0018 FB68     		ldr	r3, [r7, #12]
 3153 001a 002B     		cmp	r3, #0
 3154 001c 09D1     		bne	.L210
 3155              	.LBB164:
 3156              	.LBB165:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3157              		.loc 2 195 0 discriminator 1
 3158              		.syntax unified
 3159              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3160 001e 4FF05003 			mov r3, #80												
 3161 0022 83F31188 		msr basepri, r3											
 3162 0026 BFF36F8F 		isb														
 3163 002a BFF34F8F 		dsb														
 3164              	
 3165              	@ 0 "" 2
 3166              		.thumb
 3167              		.syntax unified
 3168 002e BB60     		str	r3, [r7, #8]
 3169              	.L211:
 3170              	.LBE165:
 3171              	.LBE164:
 3172              		.loc 1 2270 0 discriminator 1
 3173 0030 FEE7     		b	.L211
 3174              	.L210:
2271:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3175              		.loc 1 2271 0
 3176 0032 FB68     		ldr	r3, [r7, #12]
 3177 0034 3433     		adds	r3, r3, #52
2272:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3178              		.loc 1 2272 0
 3179 0036 1846     		mov	r0, r3
 3180 0038 1437     		adds	r7, r7, #20
 3181              	.LCFI113:
 3182              		.cfi_def_cfa_offset 4
 3183 003a BD46     		mov	sp, r7
 3184              	.LCFI114:
ARM GAS  /tmp/ccIHW9zM.s 			page 100


 3185              		.cfi_def_cfa_register 13
 3186              		@ sp needed
 3187 003c 5DF8047B 		ldr	r7, [sp], #4
 3188              	.LCFI115:
 3189              		.cfi_restore 7
 3190              		.cfi_def_cfa_offset 0
 3191 0040 7047     		bx	lr
 3192              	.L214:
 3193 0042 00BF     		.align	2
 3194              	.L213:
 3195 0044 00000000 		.word	pxCurrentTCB
 3196              		.cfi_endproc
 3197              	.LFE26:
 3199              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 3200              		.align	1
 3201              		.global	uxTaskGetSystemState
 3202              		.syntax unified
 3203              		.thumb
 3204              		.thumb_func
 3205              		.fpu fpv4-sp-d16
 3207              	uxTaskGetSystemState:
 3208              	.LFB27:
2273:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2274:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2275:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2276:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2277:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2278:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2279:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2280:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2281:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2282:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2283:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2284:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2285:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2286:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2287:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2288:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2289:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2290:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2291:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2292:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2293:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2294:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2295:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2296:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2297:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2298:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2300:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2301:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2302:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2303:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2304:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2305:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2306:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2307:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
ARM GAS  /tmp/ccIHW9zM.s 			page 101


2308:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2309:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2310:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2311:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2312:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2313:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2314:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2315:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2316:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2317:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2318:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2319:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2320:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2321:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2322:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2323:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2324:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2325:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2326:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2328:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2329:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2331:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2332:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2333:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2334:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2335:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2336:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2337:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2339:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2340:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2341:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2342:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2343:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2344:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2345:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2347:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2348:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2349:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2350:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2351:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2352:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2353:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2354:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2355:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2356:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2357:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2358:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2359:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2361:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2363:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2364:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccIHW9zM.s 			page 102


2365:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2366:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2367:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2368:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2369:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2370:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2371:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2372:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2373:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2374:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2375:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2376:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2377:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2378:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2379:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2380:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2381:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2382:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2383:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2384:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2385:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2386:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2387:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2388:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2389:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2390:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2391:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2392:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2393:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2394:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2396:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2397:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2398:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2399:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2400:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2401:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2402:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2404:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3209              		.loc 1 2404 0
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 24
 3212              		@ frame_needed = 1, uses_anonymous_args = 0
 3213 0000 80B5     		push	{r7, lr}
 3214              	.LCFI116:
 3215              		.cfi_def_cfa_offset 8
 3216              		.cfi_offset 7, -8
 3217              		.cfi_offset 14, -4
 3218 0002 86B0     		sub	sp, sp, #24
 3219              	.LCFI117:
 3220              		.cfi_def_cfa_offset 32
 3221 0004 00AF     		add	r7, sp, #0
 3222              	.LCFI118:
 3223              		.cfi_def_cfa_register 7
 3224 0006 F860     		str	r0, [r7, #12]
 3225 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccIHW9zM.s 			page 103


 3226 000a 7A60     		str	r2, [r7, #4]
2405:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 3227              		.loc 1 2405 0
 3228 000c 0023     		movs	r3, #0
 3229 000e 7B61     		str	r3, [r7, #20]
 3230 0010 3823     		movs	r3, #56
 3231 0012 3B61     		str	r3, [r7, #16]
2406:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2407:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 3232              		.loc 1 2407 0
 3233 0014 FFF7FEFF 		bl	vTaskSuspendAll
2408:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2410:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
 3234              		.loc 1 2410 0
 3235 0018 3A4B     		ldr	r3, .L220
 3236 001a 1B68     		ldr	r3, [r3]
 3237 001c BA68     		ldr	r2, [r7, #8]
 3238 001e 9A42     		cmp	r2, r3
 3239 0020 68D3     		bcc	.L216
 3240              	.L217:
2411:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2412:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2413:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2414:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2415:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2416:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
 3241              		.loc 1 2416 0 discriminator 1
 3242 0022 3B69     		ldr	r3, [r7, #16]
 3243 0024 013B     		subs	r3, r3, #1
 3244 0026 3B61     		str	r3, [r7, #16]
2417:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
 3245              		.loc 1 2417 0 discriminator 1
 3246 0028 7A69     		ldr	r2, [r7, #20]
 3247 002a 1346     		mov	r3, r2
 3248 002c DB00     		lsls	r3, r3, #3
 3249 002e 1344     		add	r3, r3, r2
 3250 0030 9B00     		lsls	r3, r3, #2
 3251 0032 1A46     		mov	r2, r3
 3252 0034 FB68     		ldr	r3, [r7, #12]
 3253 0036 9818     		adds	r0, r3, r2
 3254 0038 3A69     		ldr	r2, [r7, #16]
 3255 003a 1346     		mov	r3, r2
 3256 003c 9B00     		lsls	r3, r3, #2
 3257 003e 1344     		add	r3, r3, r2
 3258 0040 9B00     		lsls	r3, r3, #2
 3259 0042 314A     		ldr	r2, .L220+4
 3260 0044 1344     		add	r3, r3, r2
 3261 0046 0122     		movs	r2, #1
 3262 0048 1946     		mov	r1, r3
 3263 004a FFF7FEFF 		bl	prvListTasksWithinSingleList
 3264 004e 0246     		mov	r2, r0
 3265 0050 7B69     		ldr	r3, [r7, #20]
 3266 0052 1344     		add	r3, r3, r2
 3267 0054 7B61     		str	r3, [r7, #20]
2418:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
ARM GAS  /tmp/ccIHW9zM.s 			page 104


 3268              		.loc 1 2419 0 discriminator 1
 3269 0056 3B69     		ldr	r3, [r7, #16]
 3270 0058 002B     		cmp	r3, #0
 3271 005a E2D1     		bne	.L217
2420:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2421:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2422:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2423:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
 3272              		.loc 1 2423 0
 3273 005c 7A69     		ldr	r2, [r7, #20]
 3274 005e 1346     		mov	r3, r2
 3275 0060 DB00     		lsls	r3, r3, #3
 3276 0062 1344     		add	r3, r3, r2
 3277 0064 9B00     		lsls	r3, r3, #2
 3278 0066 1A46     		mov	r2, r3
 3279 0068 FB68     		ldr	r3, [r7, #12]
 3280 006a 9818     		adds	r0, r3, r2
 3281 006c 274B     		ldr	r3, .L220+8
 3282 006e 1B68     		ldr	r3, [r3]
 3283 0070 0222     		movs	r2, #2
 3284 0072 1946     		mov	r1, r3
 3285 0074 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3286 0078 0246     		mov	r2, r0
 3287 007a 7B69     		ldr	r3, [r7, #20]
 3288 007c 1344     		add	r3, r3, r2
 3289 007e 7B61     		str	r3, [r7, #20]
2424:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
 3290              		.loc 1 2424 0
 3291 0080 7A69     		ldr	r2, [r7, #20]
 3292 0082 1346     		mov	r3, r2
 3293 0084 DB00     		lsls	r3, r3, #3
 3294 0086 1344     		add	r3, r3, r2
 3295 0088 9B00     		lsls	r3, r3, #2
 3296 008a 1A46     		mov	r2, r3
 3297 008c FB68     		ldr	r3, [r7, #12]
 3298 008e 9818     		adds	r0, r3, r2
 3299 0090 1F4B     		ldr	r3, .L220+12
 3300 0092 1B68     		ldr	r3, [r3]
 3301 0094 0222     		movs	r2, #2
 3302 0096 1946     		mov	r1, r3
 3303 0098 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3304 009c 0246     		mov	r2, r0
 3305 009e 7B69     		ldr	r3, [r7, #20]
 3306 00a0 1344     		add	r3, r3, r2
 3307 00a2 7B61     		str	r3, [r7, #20]
2425:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2426:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2427:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2428:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2429:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2430:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
 3308              		.loc 1 2430 0
 3309 00a4 7A69     		ldr	r2, [r7, #20]
 3310 00a6 1346     		mov	r3, r2
 3311 00a8 DB00     		lsls	r3, r3, #3
 3312 00aa 1344     		add	r3, r3, r2
 3313 00ac 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccIHW9zM.s 			page 105


 3314 00ae 1A46     		mov	r2, r3
 3315 00b0 FB68     		ldr	r3, [r7, #12]
 3316 00b2 1344     		add	r3, r3, r2
 3317 00b4 0422     		movs	r2, #4
 3318 00b6 1749     		ldr	r1, .L220+16
 3319 00b8 1846     		mov	r0, r3
 3320 00ba FFF7FEFF 		bl	prvListTasksWithinSingleList
 3321 00be 0246     		mov	r2, r0
 3322 00c0 7B69     		ldr	r3, [r7, #20]
 3323 00c2 1344     		add	r3, r3, r2
 3324 00c4 7B61     		str	r3, [r7, #20]
2431:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2432:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2433:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2435:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2436:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2437:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2438:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
 3325              		.loc 1 2438 0
 3326 00c6 7A69     		ldr	r2, [r7, #20]
 3327 00c8 1346     		mov	r3, r2
 3328 00ca DB00     		lsls	r3, r3, #3
 3329 00cc 1344     		add	r3, r3, r2
 3330 00ce 9B00     		lsls	r3, r3, #2
 3331 00d0 1A46     		mov	r2, r3
 3332 00d2 FB68     		ldr	r3, [r7, #12]
 3333 00d4 1344     		add	r3, r3, r2
 3334 00d6 0322     		movs	r2, #3
 3335 00d8 0F49     		ldr	r1, .L220+20
 3336 00da 1846     		mov	r0, r3
 3337 00dc FFF7FEFF 		bl	prvListTasksWithinSingleList
 3338 00e0 0246     		mov	r2, r0
 3339 00e2 7B69     		ldr	r3, [r7, #20]
 3340 00e4 1344     		add	r3, r3, r2
 3341 00e6 7B61     		str	r3, [r7, #20]
2439:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2440:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2441:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2443:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2444:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2445:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2446:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2447:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2448:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2449:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2450:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2451:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2452:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2453:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2454:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2455:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
 3342              		.loc 1 2455 0
 3343 00e8 7B68     		ldr	r3, [r7, #4]
 3344 00ea 002B     		cmp	r3, #0
 3345 00ec 02D0     		beq	.L216
ARM GAS  /tmp/ccIHW9zM.s 			page 106


2456:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2457:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
 3346              		.loc 1 2457 0
 3347 00ee 7B68     		ldr	r3, [r7, #4]
 3348 00f0 0022     		movs	r2, #0
 3349 00f2 1A60     		str	r2, [r3]
 3350              	.L216:
2458:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2459:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2460:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2461:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2462:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2463:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2464:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2465:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2466:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2467:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
 3351              		.loc 1 2467 0
 3352 00f4 FFF7FEFF 		bl	xTaskResumeAll
2468:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2469:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
 3353              		.loc 1 2469 0
 3354 00f8 7B69     		ldr	r3, [r7, #20]
2470:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3355              		.loc 1 2470 0
 3356 00fa 1846     		mov	r0, r3
 3357 00fc 1837     		adds	r7, r7, #24
 3358              	.LCFI119:
 3359              		.cfi_def_cfa_offset 8
 3360 00fe BD46     		mov	sp, r7
 3361              	.LCFI120:
 3362              		.cfi_def_cfa_register 13
 3363              		@ sp needed
 3364 0100 80BD     		pop	{r7, pc}
 3365              	.L221:
 3366 0102 00BF     		.align	2
 3367              	.L220:
 3368 0104 00000000 		.word	uxCurrentNumberOfTasks
 3369 0108 00000000 		.word	pxReadyTasksLists
 3370 010c 00000000 		.word	pxDelayedTaskList
 3371 0110 00000000 		.word	pxOverflowDelayedTaskList
 3372 0114 00000000 		.word	xTasksWaitingTermination
 3373 0118 00000000 		.word	xSuspendedTaskList
 3374              		.cfi_endproc
 3375              	.LFE27:
 3377              		.section	.text.xTaskIncrementTick,"ax",%progbits
 3378              		.align	1
 3379              		.global	xTaskIncrementTick
 3380              		.syntax unified
 3381              		.thumb
 3382              		.thumb_func
 3383              		.fpu fpv4-sp-d16
 3385              	xTaskIncrementTick:
 3386              	.LFB28:
2471:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2472:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2473:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
ARM GAS  /tmp/ccIHW9zM.s 			page 107


2474:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2476:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2478:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2479:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2480:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2481:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2482:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2483:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2484:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2486:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2487:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2488:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2489:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2490:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2491:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2492:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2493:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2494:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2495:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2496:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2497:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2498:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2499:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2500:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2501:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2502:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2503:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2504:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2505:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2506:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2507:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2508:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2510:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2512:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2513:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2514:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2515:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2517:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2518:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2519:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2520:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2521:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2522:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2523:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2525:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2526:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2527:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2528:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2529:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2530:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
ARM GAS  /tmp/ccIHW9zM.s 			page 108


2531:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2532:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2533:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2534:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2535:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2536:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2537:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2538:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2539:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2540:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2541:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2542:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2543:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2544:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2545:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2546:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2547:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2548:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2549:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2550:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2551:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2552:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2553:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2554:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2555:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2556:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2557:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2558:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2560:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2561:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2562:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2563:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2564:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2565:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2566:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2567:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2568:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2569:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2570:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2571:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2572:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2573:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2574:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2575:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2576:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2578:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2579:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2580:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2581:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2582:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2583:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2584:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3387              		.loc 1 2584 0
 3388              		.cfi_startproc
 3389              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccIHW9zM.s 			page 109


 3390              		@ frame_needed = 1, uses_anonymous_args = 0
 3391 0000 80B5     		push	{r7, lr}
 3392              	.LCFI121:
 3393              		.cfi_def_cfa_offset 8
 3394              		.cfi_offset 7, -8
 3395              		.cfi_offset 14, -4
 3396 0002 86B0     		sub	sp, sp, #24
 3397              	.LCFI122:
 3398              		.cfi_def_cfa_offset 32
 3399 0004 00AF     		add	r7, sp, #0
 3400              	.LCFI123:
 3401              		.cfi_def_cfa_register 7
2585:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2586:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2587:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 3402              		.loc 1 2587 0
 3403 0006 0023     		movs	r3, #0
 3404 0008 7B61     		str	r3, [r7, #20]
2588:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2590:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2591:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2592:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2593:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3405              		.loc 1 2593 0
 3406 000a 514B     		ldr	r3, .L240
 3407 000c 1B68     		ldr	r3, [r3]
 3408 000e 002B     		cmp	r3, #0
 3409 0010 40F08D80 		bne	.L223
 3410              	.LBB166:
2594:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2595:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2596:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2597:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 3411              		.loc 1 2597 0
 3412 0014 4F4B     		ldr	r3, .L240+4
 3413 0016 1B68     		ldr	r3, [r3]
 3414 0018 0133     		adds	r3, r3, #1
 3415 001a 3B61     		str	r3, [r7, #16]
2598:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2599:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2600:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2601:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
 3416              		.loc 1 2601 0
 3417 001c 4D4A     		ldr	r2, .L240+4
 3418 001e 3B69     		ldr	r3, [r7, #16]
 3419 0020 1360     		str	r3, [r2]
2602:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2603:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
 3420              		.loc 1 2603 0
 3421 0022 3B69     		ldr	r3, [r7, #16]
 3422 0024 002B     		cmp	r3, #0
 3423 0026 1FD1     		bne	.L224
 3424              	.LBB167:
2604:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2605:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
 3425              		.loc 1 2605 0
ARM GAS  /tmp/ccIHW9zM.s 			page 110


 3426 0028 4B4B     		ldr	r3, .L240+8
 3427 002a 1B68     		ldr	r3, [r3]
 3428 002c 1B68     		ldr	r3, [r3]
 3429 002e 002B     		cmp	r3, #0
 3430 0030 09D0     		beq	.L225
 3431              	.LBB168:
 3432              	.LBB169:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3433              		.loc 2 195 0 discriminator 1
 3434              		.syntax unified
 3435              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3436 0032 4FF05003 			mov r3, #80												
 3437 0036 83F31188 		msr basepri, r3											
 3438 003a BFF36F8F 		isb														
 3439 003e BFF34F8F 		dsb														
 3440              	
 3441              	@ 0 "" 2
 3442              		.thumb
 3443              		.syntax unified
 3444 0042 3B60     		str	r3, [r7]
 3445              	.L226:
 3446              	.LBE169:
 3447              	.LBE168:
 3448              		.loc 1 2605 0 discriminator 1
 3449 0044 FEE7     		b	.L226
 3450              	.L225:
 3451              		.loc 1 2605 0 is_stmt 0 discriminator 2
 3452 0046 444B     		ldr	r3, .L240+8
 3453 0048 1B68     		ldr	r3, [r3]
 3454 004a FB60     		str	r3, [r7, #12]
 3455 004c 434B     		ldr	r3, .L240+12
 3456 004e 1B68     		ldr	r3, [r3]
 3457 0050 414A     		ldr	r2, .L240+8
 3458 0052 1360     		str	r3, [r2]
 3459 0054 414A     		ldr	r2, .L240+12
 3460 0056 FB68     		ldr	r3, [r7, #12]
 3461 0058 1360     		str	r3, [r2]
 3462 005a 414B     		ldr	r3, .L240+16
 3463 005c 1B68     		ldr	r3, [r3]
 3464 005e 0133     		adds	r3, r3, #1
 3465 0060 3F4A     		ldr	r2, .L240+16
 3466 0062 1360     		str	r3, [r2]
 3467 0064 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3468              	.L224:
 3469              	.LBE167:
2606:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2607:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2608:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2609:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2610:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2611:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2612:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2613:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2614:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2615:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2616:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
 3470              		.loc 1 2616 0 is_stmt 1
ARM GAS  /tmp/ccIHW9zM.s 			page 111


 3471 0068 3E4B     		ldr	r3, .L240+20
 3472 006a 1B68     		ldr	r3, [r3]
 3473 006c 3A69     		ldr	r2, [r7, #16]
 3474 006e 9A42     		cmp	r2, r3
 3475 0070 4ED3     		bcc	.L227
 3476              	.L235:
2617:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2618:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2619:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2620:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 3477              		.loc 1 2620 0
 3478 0072 394B     		ldr	r3, .L240+8
 3479 0074 1B68     		ldr	r3, [r3]
 3480 0076 1B68     		ldr	r3, [r3]
 3481 0078 002B     		cmp	r3, #0
 3482 007a 01D1     		bne	.L228
 3483              		.loc 1 2620 0 is_stmt 0 discriminator 1
 3484 007c 0123     		movs	r3, #1
 3485 007e 00E0     		b	.L229
 3486              	.L228:
 3487              		.loc 1 2620 0 discriminator 2
 3488 0080 0023     		movs	r3, #0
 3489              	.L229:
 3490              		.loc 1 2620 0 discriminator 4
 3491 0082 002B     		cmp	r3, #0
 3492 0084 04D0     		beq	.L230
2621:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2622:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2623:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2624:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2625:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2626:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2627:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
 3493              		.loc 1 2627 0 is_stmt 1
 3494 0086 374B     		ldr	r3, .L240+20
 3495 0088 4FF0FF32 		mov	r2, #-1
 3496 008c 1A60     		str	r2, [r3]
2628:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 3497              		.loc 1 2628 0
 3498 008e 3FE0     		b	.L227
 3499              	.L230:
2629:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2630:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2631:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2632:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2633:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2634:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2635:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2636:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 3500              		.loc 1 2636 0
 3501 0090 314B     		ldr	r3, .L240+8
 3502 0092 1B68     		ldr	r3, [r3]
 3503 0094 DB68     		ldr	r3, [r3, #12]
 3504 0096 DB68     		ldr	r3, [r3, #12]
 3505 0098 BB60     		str	r3, [r7, #8]
2637:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3506              		.loc 1 2637 0
ARM GAS  /tmp/ccIHW9zM.s 			page 112


 3507 009a BB68     		ldr	r3, [r7, #8]
 3508 009c 5B68     		ldr	r3, [r3, #4]
 3509 009e 7B60     		str	r3, [r7, #4]
2638:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2639:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
 3510              		.loc 1 2639 0
 3511 00a0 3A69     		ldr	r2, [r7, #16]
 3512 00a2 7B68     		ldr	r3, [r7, #4]
 3513 00a4 9A42     		cmp	r2, r3
 3514 00a6 03D2     		bcs	.L231
2640:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2642:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2643:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2644:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2645:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2646:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
 3515              		.loc 1 2646 0
 3516 00a8 2E4A     		ldr	r2, .L240+20
 3517 00aa 7B68     		ldr	r3, [r7, #4]
 3518 00ac 1360     		str	r3, [r2]
2647:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 3519              		.loc 1 2647 0
 3520 00ae 2FE0     		b	.L227
 3521              	.L231:
2648:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2650:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2651:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2652:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2653:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2655:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 3522              		.loc 1 2655 0
 3523 00b0 BB68     		ldr	r3, [r7, #8]
 3524 00b2 0433     		adds	r3, r3, #4
 3525 00b4 1846     		mov	r0, r3
 3526 00b6 FFF7FEFF 		bl	uxListRemove
2656:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2657:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2658:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2659:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 3527              		.loc 1 2659 0
 3528 00ba BB68     		ldr	r3, [r7, #8]
 3529 00bc 9B6A     		ldr	r3, [r3, #40]
 3530 00be 002B     		cmp	r3, #0
 3531 00c0 04D0     		beq	.L232
2660:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2661:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 3532              		.loc 1 2661 0
 3533 00c2 BB68     		ldr	r3, [r7, #8]
 3534 00c4 1833     		adds	r3, r3, #24
 3535 00c6 1846     		mov	r0, r3
 3536 00c8 FFF7FEFF 		bl	uxListRemove
 3537              	.L232:
2662:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2663:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccIHW9zM.s 			page 113


2664:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2665:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2666:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2667:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2668:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2669:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2670:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3538              		.loc 1 2670 0
 3539 00cc BB68     		ldr	r3, [r7, #8]
 3540 00ce DA6A     		ldr	r2, [r3, #44]
 3541 00d0 254B     		ldr	r3, .L240+24
 3542 00d2 1B68     		ldr	r3, [r3]
 3543 00d4 9A42     		cmp	r2, r3
 3544 00d6 03D9     		bls	.L233
 3545              		.loc 1 2670 0 is_stmt 0 discriminator 1
 3546 00d8 BB68     		ldr	r3, [r7, #8]
 3547 00da DB6A     		ldr	r3, [r3, #44]
 3548 00dc 224A     		ldr	r2, .L240+24
 3549 00de 1360     		str	r3, [r2]
 3550              	.L233:
 3551              		.loc 1 2670 0 discriminator 3
 3552 00e0 BB68     		ldr	r3, [r7, #8]
 3553 00e2 DA6A     		ldr	r2, [r3, #44]
 3554 00e4 1346     		mov	r3, r2
 3555 00e6 9B00     		lsls	r3, r3, #2
 3556 00e8 1344     		add	r3, r3, r2
 3557 00ea 9B00     		lsls	r3, r3, #2
 3558 00ec 1F4A     		ldr	r2, .L240+28
 3559 00ee 1A44     		add	r2, r2, r3
 3560 00f0 BB68     		ldr	r3, [r7, #8]
 3561 00f2 0433     		adds	r3, r3, #4
 3562 00f4 1946     		mov	r1, r3
 3563 00f6 1046     		mov	r0, r2
 3564 00f8 FFF7FEFF 		bl	vListInsertEnd
2671:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2672:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2673:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2674:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2675:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2676:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2677:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2678:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2679:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2680:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 3565              		.loc 1 2680 0 is_stmt 1 discriminator 3
 3566 00fc BB68     		ldr	r3, [r7, #8]
 3567 00fe DA6A     		ldr	r2, [r3, #44]
 3568 0100 1B4B     		ldr	r3, .L240+32
 3569 0102 1B68     		ldr	r3, [r3]
 3570 0104 DB6A     		ldr	r3, [r3, #44]
 3571 0106 9A42     		cmp	r2, r3
 3572 0108 B3D3     		bcc	.L235
2681:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2682:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
 3573              		.loc 1 2682 0
 3574 010a 0123     		movs	r3, #1
 3575 010c 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccIHW9zM.s 			page 114


2620:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3576              		.loc 1 2620 0
 3577 010e B0E7     		b	.L235
 3578              	.L227:
2683:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2684:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2685:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2686:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2687:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2688:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2689:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2690:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2691:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2692:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2695:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2696:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2697:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2698:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2699:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
 3579              		.loc 1 2699 0
 3580 0110 174B     		ldr	r3, .L240+32
 3581 0112 1B68     		ldr	r3, [r3]
 3582 0114 DA6A     		ldr	r2, [r3, #44]
 3583 0116 1549     		ldr	r1, .L240+28
 3584 0118 1346     		mov	r3, r2
 3585 011a 9B00     		lsls	r3, r3, #2
 3586 011c 1344     		add	r3, r3, r2
 3587 011e 9B00     		lsls	r3, r3, #2
 3588 0120 0B44     		add	r3, r3, r1
 3589 0122 1B68     		ldr	r3, [r3]
 3590 0124 012B     		cmp	r3, #1
 3591 0126 07D9     		bls	.L237
2700:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2701:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
 3592              		.loc 1 2701 0
 3593 0128 0123     		movs	r3, #1
 3594 012a 7B61     		str	r3, [r7, #20]
 3595 012c 04E0     		b	.L237
 3596              	.L223:
 3597              	.LBE166:
2702:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2703:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2704:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2705:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2706:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2707:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2708:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2709:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2710:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2711:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2713:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2715:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2716:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
ARM GAS  /tmp/ccIHW9zM.s 			page 115


2717:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2718:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2719:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2720:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2721:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2722:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2723:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2724:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2726:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2727:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
 3598              		.loc 1 2727 0
 3599 012e 114B     		ldr	r3, .L240+36
 3600 0130 1B68     		ldr	r3, [r3]
 3601 0132 0133     		adds	r3, r3, #1
 3602 0134 0F4A     		ldr	r2, .L240+36
 3603 0136 1360     		str	r3, [r2]
 3604              	.L237:
2728:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2730:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2731:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2732:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2734:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2736:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2737:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2738:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2739:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2740:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
 3605              		.loc 1 2740 0
 3606 0138 0F4B     		ldr	r3, .L240+40
 3607 013a 1B68     		ldr	r3, [r3]
 3608 013c 002B     		cmp	r3, #0
 3609 013e 01D0     		beq	.L238
2741:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
 3610              		.loc 1 2742 0
 3611 0140 0123     		movs	r3, #1
 3612 0142 7B61     		str	r3, [r7, #20]
 3613              	.L238:
2743:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2744:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2745:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2746:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2747:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2748:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2749:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2750:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2751:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
 3614              		.loc 1 2751 0
 3615 0144 7B69     		ldr	r3, [r7, #20]
2752:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3616              		.loc 1 2752 0
 3617 0146 1846     		mov	r0, r3
 3618 0148 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccIHW9zM.s 			page 116


 3619              	.LCFI124:
 3620              		.cfi_def_cfa_offset 8
 3621 014a BD46     		mov	sp, r7
 3622              	.LCFI125:
 3623              		.cfi_def_cfa_register 13
 3624              		@ sp needed
 3625 014c 80BD     		pop	{r7, pc}
 3626              	.L241:
 3627 014e 00BF     		.align	2
 3628              	.L240:
 3629 0150 00000000 		.word	uxSchedulerSuspended
 3630 0154 00000000 		.word	xTickCount
 3631 0158 00000000 		.word	pxDelayedTaskList
 3632 015c 00000000 		.word	pxOverflowDelayedTaskList
 3633 0160 00000000 		.word	xNumOfOverflows
 3634 0164 00000000 		.word	xNextTaskUnblockTime
 3635 0168 00000000 		.word	uxTopReadyPriority
 3636 016c 00000000 		.word	pxReadyTasksLists
 3637 0170 00000000 		.word	pxCurrentTCB
 3638 0174 00000000 		.word	uxPendedTicks
 3639 0178 00000000 		.word	xYieldPending
 3640              		.cfi_endproc
 3641              	.LFE28:
 3643              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3644              		.align	1
 3645              		.global	vTaskSwitchContext
 3646              		.syntax unified
 3647              		.thumb
 3648              		.thumb_func
 3649              		.fpu fpv4-sp-d16
 3651              	vTaskSwitchContext:
 3652              	.LFB29:
2753:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2754:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2756:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2757:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2758:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2759:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2760:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2762:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2763:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2764:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2765:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2766:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2767:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2768:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2769:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2770:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2771:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2772:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2773:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2774:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2775:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2776:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2777:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIHW9zM.s 			page 117


2778:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2779:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2780:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2781:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2783:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2784:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2785:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2786:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2787:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2788:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2789:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2790:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2791:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2792:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2793:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2794:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2795:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2796:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2797:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2798:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2799:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2800:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2801:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2802:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2803:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2804:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2806:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2807:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2808:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2809:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2810:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2811:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2812:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2813:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2814:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2815:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2816:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2817:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2818:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2819:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2821:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2822:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2824:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2825:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2826:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2827:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2828:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2829:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2830:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2831:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2832:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2833:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2834:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/ccIHW9zM.s 			page 118


2835:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2837:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2838:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2840:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2841:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2842:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2843:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2844:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2846:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3653              		.loc 1 2846 0
 3654              		.cfi_startproc
 3655              		@ args = 0, pretend = 0, frame = 16
 3656              		@ frame_needed = 1, uses_anonymous_args = 0
 3657              		@ link register save eliminated.
 3658 0000 80B4     		push	{r7}
 3659              	.LCFI126:
 3660              		.cfi_def_cfa_offset 4
 3661              		.cfi_offset 7, -4
 3662 0002 85B0     		sub	sp, sp, #20
 3663              	.LCFI127:
 3664              		.cfi_def_cfa_offset 24
 3665 0004 00AF     		add	r7, sp, #0
 3666              	.LCFI128:
 3667              		.cfi_def_cfa_register 7
2847:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3668              		.loc 1 2847 0
 3669 0006 274B     		ldr	r3, .L251
 3670 0008 1B68     		ldr	r3, [r3]
 3671 000a 002B     		cmp	r3, #0
 3672 000c 03D0     		beq	.L243
2848:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2849:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2850:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2851:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 3673              		.loc 1 2851 0
 3674 000e 264B     		ldr	r3, .L251+4
 3675 0010 0122     		movs	r2, #1
 3676 0012 1A60     		str	r2, [r3]
2852:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2853:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2854:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2855:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2856:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2857:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2858:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2859:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2860:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2861:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2862:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2863:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2864:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2865:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2867:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
ARM GAS  /tmp/ccIHW9zM.s 			page 119


2868:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2869:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2870:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2871:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2872:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2873:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2874:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2875:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2876:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2877:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2878:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2879:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2880:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2881:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2882:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2883:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2884:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2886:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2887:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2888:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2889:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2891:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2892:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2893:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2894:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2895:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2896:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2897:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2898:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2899:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2900:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2901:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3677              		.loc 1 2901 0
 3678 0014 40E0     		b	.L250
 3679              	.L243:
2855:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3680              		.loc 1 2855 0
 3681 0016 244B     		ldr	r3, .L251+4
 3682 0018 0022     		movs	r2, #0
 3683 001a 1A60     		str	r2, [r3]
 3684              	.LBB170:
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3685              		.loc 1 2890 0
 3686 001c 234B     		ldr	r3, .L251+8
 3687 001e 1B68     		ldr	r3, [r3]
 3688 0020 FB60     		str	r3, [r7, #12]
 3689 0022 0FE0     		b	.L245
 3690              	.L248:
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3691              		.loc 1 2890 0 is_stmt 0 discriminator 5
 3692 0024 FB68     		ldr	r3, [r7, #12]
 3693 0026 002B     		cmp	r3, #0
 3694 0028 09D1     		bne	.L246
 3695              	.LBB171:
 3696              	.LBB172:
ARM GAS  /tmp/ccIHW9zM.s 			page 120


 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3697              		.loc 2 195 0 is_stmt 1 discriminator 2
 3698              		.syntax unified
 3699              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3700 002a 4FF05003 			mov r3, #80												
 3701 002e 83F31188 		msr basepri, r3											
 3702 0032 BFF36F8F 		isb														
 3703 0036 BFF34F8F 		dsb														
 3704              	
 3705              	@ 0 "" 2
 3706              		.thumb
 3707              		.syntax unified
 3708 003a 7B60     		str	r3, [r7, #4]
 3709              	.L247:
 3710              	.LBE172:
 3711              	.LBE171:
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3712              		.loc 1 2890 0 discriminator 1
 3713 003c FEE7     		b	.L247
 3714              	.L246:
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3715              		.loc 1 2890 0 is_stmt 0 discriminator 3
 3716 003e FB68     		ldr	r3, [r7, #12]
 3717 0040 013B     		subs	r3, r3, #1
 3718 0042 FB60     		str	r3, [r7, #12]
 3719              	.L245:
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3720              		.loc 1 2890 0 discriminator 4
 3721 0044 1A49     		ldr	r1, .L251+12
 3722 0046 FA68     		ldr	r2, [r7, #12]
 3723 0048 1346     		mov	r3, r2
 3724 004a 9B00     		lsls	r3, r3, #2
 3725 004c 1344     		add	r3, r3, r2
 3726 004e 9B00     		lsls	r3, r3, #2
 3727 0050 0B44     		add	r3, r3, r1
 3728 0052 1B68     		ldr	r3, [r3]
 3729 0054 002B     		cmp	r3, #0
 3730 0056 E5D0     		beq	.L248
 3731              	.LBB173:
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3732              		.loc 1 2890 0 discriminator 6
 3733 0058 FA68     		ldr	r2, [r7, #12]
 3734 005a 1346     		mov	r3, r2
 3735 005c 9B00     		lsls	r3, r3, #2
 3736 005e 1344     		add	r3, r3, r2
 3737 0060 9B00     		lsls	r3, r3, #2
 3738 0062 134A     		ldr	r2, .L251+12
 3739 0064 1344     		add	r3, r3, r2
 3740 0066 BB60     		str	r3, [r7, #8]
 3741 0068 BB68     		ldr	r3, [r7, #8]
 3742 006a 5B68     		ldr	r3, [r3, #4]
 3743 006c 5A68     		ldr	r2, [r3, #4]
 3744 006e BB68     		ldr	r3, [r7, #8]
 3745 0070 5A60     		str	r2, [r3, #4]
 3746 0072 BB68     		ldr	r3, [r7, #8]
 3747 0074 5A68     		ldr	r2, [r3, #4]
 3748 0076 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccIHW9zM.s 			page 121


 3749 0078 0833     		adds	r3, r3, #8
 3750 007a 9A42     		cmp	r2, r3
 3751 007c 04D1     		bne	.L249
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3752              		.loc 1 2890 0 discriminator 7
 3753 007e BB68     		ldr	r3, [r7, #8]
 3754 0080 5B68     		ldr	r3, [r3, #4]
 3755 0082 5A68     		ldr	r2, [r3, #4]
 3756 0084 BB68     		ldr	r3, [r7, #8]
 3757 0086 5A60     		str	r2, [r3, #4]
 3758              	.L249:
2890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3759              		.loc 1 2890 0 discriminator 9
 3760 0088 BB68     		ldr	r3, [r7, #8]
 3761 008a 5B68     		ldr	r3, [r3, #4]
 3762 008c DB68     		ldr	r3, [r3, #12]
 3763 008e 094A     		ldr	r2, .L251+16
 3764 0090 1360     		str	r3, [r2]
 3765              	.LBE173:
 3766 0092 064A     		ldr	r2, .L251+8
 3767 0094 FB68     		ldr	r3, [r7, #12]
 3768 0096 1360     		str	r3, [r2]
 3769              	.L250:
 3770              	.LBE170:
 3771              		.loc 1 2901 0 is_stmt 1
 3772 0098 00BF     		nop
 3773 009a 1437     		adds	r7, r7, #20
 3774              	.LCFI129:
 3775              		.cfi_def_cfa_offset 4
 3776 009c BD46     		mov	sp, r7
 3777              	.LCFI130:
 3778              		.cfi_def_cfa_register 13
 3779              		@ sp needed
 3780 009e 5DF8047B 		ldr	r7, [sp], #4
 3781              	.LCFI131:
 3782              		.cfi_restore 7
 3783              		.cfi_def_cfa_offset 0
 3784 00a2 7047     		bx	lr
 3785              	.L252:
 3786              		.align	2
 3787              	.L251:
 3788 00a4 00000000 		.word	uxSchedulerSuspended
 3789 00a8 00000000 		.word	xYieldPending
 3790 00ac 00000000 		.word	uxTopReadyPriority
 3791 00b0 00000000 		.word	pxReadyTasksLists
 3792 00b4 00000000 		.word	pxCurrentTCB
 3793              		.cfi_endproc
 3794              	.LFE29:
 3796              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3797              		.align	1
 3798              		.global	vTaskPlaceOnEventList
 3799              		.syntax unified
 3800              		.thumb
 3801              		.thumb_func
 3802              		.fpu fpv4-sp-d16
 3804              	vTaskPlaceOnEventList:
 3805              	.LFB30:
ARM GAS  /tmp/ccIHW9zM.s 			page 122


2902:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2903:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2904:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2905:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3806              		.loc 1 2905 0
 3807              		.cfi_startproc
 3808              		@ args = 0, pretend = 0, frame = 16
 3809              		@ frame_needed = 1, uses_anonymous_args = 0
 3810 0000 80B5     		push	{r7, lr}
 3811              	.LCFI132:
 3812              		.cfi_def_cfa_offset 8
 3813              		.cfi_offset 7, -8
 3814              		.cfi_offset 14, -4
 3815 0002 84B0     		sub	sp, sp, #16
 3816              	.LCFI133:
 3817              		.cfi_def_cfa_offset 24
 3818 0004 00AF     		add	r7, sp, #0
 3819              	.LCFI134:
 3820              		.cfi_def_cfa_register 7
 3821 0006 7860     		str	r0, [r7, #4]
 3822 0008 3960     		str	r1, [r7]
2906:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3823              		.loc 1 2906 0
 3824 000a 7B68     		ldr	r3, [r7, #4]
 3825 000c 002B     		cmp	r3, #0
 3826 000e 09D1     		bne	.L254
 3827              	.LBB174:
 3828              	.LBB175:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3829              		.loc 2 195 0 discriminator 1
 3830              		.syntax unified
 3831              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3832 0010 4FF05003 			mov r3, #80												
 3833 0014 83F31188 		msr basepri, r3											
 3834 0018 BFF36F8F 		isb														
 3835 001c BFF34F8F 		dsb														
 3836              	
 3837              	@ 0 "" 2
 3838              		.thumb
 3839              		.syntax unified
 3840 0020 FB60     		str	r3, [r7, #12]
 3841              	.L255:
 3842              	.LBE175:
 3843              	.LBE174:
 3844              		.loc 1 2906 0 discriminator 1
 3845 0022 FEE7     		b	.L255
 3846              	.L254:
2907:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2909:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2910:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2911:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2912:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2913:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2914:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2915:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3847              		.loc 1 2915 0
ARM GAS  /tmp/ccIHW9zM.s 			page 123


 3848 0024 074B     		ldr	r3, .L256
 3849 0026 1B68     		ldr	r3, [r3]
 3850 0028 1833     		adds	r3, r3, #24
 3851 002a 1946     		mov	r1, r3
 3852 002c 7868     		ldr	r0, [r7, #4]
 3853 002e FFF7FEFF 		bl	vListInsert
2916:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 3854              		.loc 1 2917 0
 3855 0032 0121     		movs	r1, #1
 3856 0034 3868     		ldr	r0, [r7]
 3857 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
2918:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3858              		.loc 1 2918 0
 3859 003a 00BF     		nop
 3860 003c 1037     		adds	r7, r7, #16
 3861              	.LCFI135:
 3862              		.cfi_def_cfa_offset 8
 3863 003e BD46     		mov	sp, r7
 3864              	.LCFI136:
 3865              		.cfi_def_cfa_register 13
 3866              		@ sp needed
 3867 0040 80BD     		pop	{r7, pc}
 3868              	.L257:
 3869 0042 00BF     		.align	2
 3870              	.L256:
 3871 0044 00000000 		.word	pxCurrentTCB
 3872              		.cfi_endproc
 3873              	.LFE30:
 3875              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3876              		.align	1
 3877              		.global	vTaskPlaceOnUnorderedEventList
 3878              		.syntax unified
 3879              		.thumb
 3880              		.thumb_func
 3881              		.fpu fpv4-sp-d16
 3883              	vTaskPlaceOnUnorderedEventList:
 3884              	.LFB31:
2919:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2921:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2922:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3885              		.loc 1 2922 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 24
 3888              		@ frame_needed = 1, uses_anonymous_args = 0
 3889 0000 80B5     		push	{r7, lr}
 3890              	.LCFI137:
 3891              		.cfi_def_cfa_offset 8
 3892              		.cfi_offset 7, -8
 3893              		.cfi_offset 14, -4
 3894 0002 86B0     		sub	sp, sp, #24
 3895              	.LCFI138:
 3896              		.cfi_def_cfa_offset 32
 3897 0004 00AF     		add	r7, sp, #0
 3898              	.LCFI139:
 3899              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccIHW9zM.s 			page 124


 3900 0006 F860     		str	r0, [r7, #12]
 3901 0008 B960     		str	r1, [r7, #8]
 3902 000a 7A60     		str	r2, [r7, #4]
2923:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3903              		.loc 1 2923 0
 3904 000c FB68     		ldr	r3, [r7, #12]
 3905 000e 002B     		cmp	r3, #0
 3906 0010 09D1     		bne	.L259
 3907              	.LBB176:
 3908              	.LBB177:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3909              		.loc 2 195 0 discriminator 1
 3910              		.syntax unified
 3911              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3912 0012 4FF05003 			mov r3, #80												
 3913 0016 83F31188 		msr basepri, r3											
 3914 001a BFF36F8F 		isb														
 3915 001e BFF34F8F 		dsb														
 3916              	
 3917              	@ 0 "" 2
 3918              		.thumb
 3919              		.syntax unified
 3920 0022 7B61     		str	r3, [r7, #20]
 3921              	.L260:
 3922              	.LBE177:
 3923              	.LBE176:
 3924              		.loc 1 2923 0 discriminator 1
 3925 0024 FEE7     		b	.L260
 3926              	.L259:
2924:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2925:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2926:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2927:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
 3927              		.loc 1 2927 0
 3928 0026 114B     		ldr	r3, .L263
 3929 0028 1B68     		ldr	r3, [r3]
 3930 002a 002B     		cmp	r3, #0
 3931 002c 09D1     		bne	.L261
 3932              	.LBB178:
 3933              	.LBB179:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3934              		.loc 2 195 0 discriminator 1
 3935              		.syntax unified
 3936              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3937 002e 4FF05003 			mov r3, #80												
 3938 0032 83F31188 		msr basepri, r3											
 3939 0036 BFF36F8F 		isb														
 3940 003a BFF34F8F 		dsb														
 3941              	
 3942              	@ 0 "" 2
 3943              		.thumb
 3944              		.syntax unified
 3945 003e 3B61     		str	r3, [r7, #16]
 3946              	.L262:
 3947              	.LBE179:
 3948              	.LBE178:
 3949              		.loc 1 2927 0 discriminator 2
ARM GAS  /tmp/ccIHW9zM.s 			page 125


 3950 0040 FEE7     		b	.L262
 3951              	.L261:
2928:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2930:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2931:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2932:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
 3952              		.loc 1 2932 0
 3953 0042 0B4B     		ldr	r3, .L263+4
 3954 0044 1B68     		ldr	r3, [r3]
 3955 0046 BA68     		ldr	r2, [r7, #8]
 3956 0048 42F00042 		orr	r2, r2, #-2147483648
 3957 004c 9A61     		str	r2, [r3, #24]
2933:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2935:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2936:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2937:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2938:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2939:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3958              		.loc 1 2939 0
 3959 004e 084B     		ldr	r3, .L263+4
 3960 0050 1B68     		ldr	r3, [r3]
 3961 0052 1833     		adds	r3, r3, #24
 3962 0054 1946     		mov	r1, r3
 3963 0056 F868     		ldr	r0, [r7, #12]
 3964 0058 FFF7FEFF 		bl	vListInsertEnd
2940:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2941:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 3965              		.loc 1 2941 0
 3966 005c 0121     		movs	r1, #1
 3967 005e 7868     		ldr	r0, [r7, #4]
 3968 0060 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
2942:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3969              		.loc 1 2942 0
 3970 0064 00BF     		nop
 3971 0066 1837     		adds	r7, r7, #24
 3972              	.LCFI140:
 3973              		.cfi_def_cfa_offset 8
 3974 0068 BD46     		mov	sp, r7
 3975              	.LCFI141:
 3976              		.cfi_def_cfa_register 13
 3977              		@ sp needed
 3978 006a 80BD     		pop	{r7, pc}
 3979              	.L264:
 3980              		.align	2
 3981              	.L263:
 3982 006c 00000000 		.word	uxSchedulerSuspended
 3983 0070 00000000 		.word	pxCurrentTCB
 3984              		.cfi_endproc
 3985              	.LFE31:
 3987              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 3988              		.align	1
 3989              		.global	vTaskPlaceOnEventListRestricted
 3990              		.syntax unified
 3991              		.thumb
 3992              		.thumb_func
ARM GAS  /tmp/ccIHW9zM.s 			page 126


 3993              		.fpu fpv4-sp-d16
 3995              	vTaskPlaceOnEventListRestricted:
 3996              	.LFB32:
2943:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2944:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2945:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2946:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2948:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3997              		.loc 1 2948 0
 3998              		.cfi_startproc
 3999              		@ args = 0, pretend = 0, frame = 24
 4000              		@ frame_needed = 1, uses_anonymous_args = 0
 4001 0000 80B5     		push	{r7, lr}
 4002              	.LCFI142:
 4003              		.cfi_def_cfa_offset 8
 4004              		.cfi_offset 7, -8
 4005              		.cfi_offset 14, -4
 4006 0002 86B0     		sub	sp, sp, #24
 4007              	.LCFI143:
 4008              		.cfi_def_cfa_offset 32
 4009 0004 00AF     		add	r7, sp, #0
 4010              	.LCFI144:
 4011              		.cfi_def_cfa_register 7
 4012 0006 F860     		str	r0, [r7, #12]
 4013 0008 B960     		str	r1, [r7, #8]
 4014 000a 7A60     		str	r2, [r7, #4]
2949:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
 4015              		.loc 1 2949 0
 4016 000c FB68     		ldr	r3, [r7, #12]
 4017 000e 002B     		cmp	r3, #0
 4018 0010 09D1     		bne	.L266
 4019              	.LBB180:
 4020              	.LBB181:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4021              		.loc 2 195 0 discriminator 1
 4022              		.syntax unified
 4023              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4024 0012 4FF05003 			mov r3, #80												
 4025 0016 83F31188 		msr basepri, r3											
 4026 001a BFF36F8F 		isb														
 4027 001e BFF34F8F 		dsb														
 4028              	
 4029              	@ 0 "" 2
 4030              		.thumb
 4031              		.syntax unified
 4032 0022 7B61     		str	r3, [r7, #20]
 4033              	.L267:
 4034              	.LBE181:
 4035              	.LBE180:
 4036              		.loc 1 2949 0 discriminator 1
 4037 0024 FEE7     		b	.L267
 4038              	.L266:
2950:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2952:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2953:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
ARM GAS  /tmp/ccIHW9zM.s 			page 127


2954:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2955:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2956:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2958:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2959:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2960:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2961:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 4039              		.loc 1 2961 0
 4040 0026 0A4B     		ldr	r3, .L269
 4041 0028 1B68     		ldr	r3, [r3]
 4042 002a 1833     		adds	r3, r3, #24
 4043 002c 1946     		mov	r1, r3
 4044 002e F868     		ldr	r0, [r7, #12]
 4045 0030 FFF7FEFF 		bl	vListInsertEnd
2962:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2963:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2964:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2965:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2966:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
 4046              		.loc 1 2966 0
 4047 0034 7B68     		ldr	r3, [r7, #4]
 4048 0036 002B     		cmp	r3, #0
 4049 0038 02D0     		beq	.L268
2967:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2968:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
 4050              		.loc 1 2968 0
 4051 003a 4FF0FF33 		mov	r3, #-1
 4052 003e BB60     		str	r3, [r7, #8]
 4053              	.L268:
2969:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2970:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2972:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 4054              		.loc 1 2972 0
 4055 0040 7968     		ldr	r1, [r7, #4]
 4056 0042 B868     		ldr	r0, [r7, #8]
 4057 0044 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
2973:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4058              		.loc 1 2973 0
 4059 0048 00BF     		nop
 4060 004a 1837     		adds	r7, r7, #24
 4061              	.LCFI145:
 4062              		.cfi_def_cfa_offset 8
 4063 004c BD46     		mov	sp, r7
 4064              	.LCFI146:
 4065              		.cfi_def_cfa_register 13
 4066              		@ sp needed
 4067 004e 80BD     		pop	{r7, pc}
 4068              	.L270:
 4069              		.align	2
 4070              	.L269:
 4071 0050 00000000 		.word	pxCurrentTCB
 4072              		.cfi_endproc
 4073              	.LFE32:
 4075              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 4076              		.align	1
ARM GAS  /tmp/ccIHW9zM.s 			page 128


 4077              		.global	xTaskRemoveFromEventList
 4078              		.syntax unified
 4079              		.thumb
 4080              		.thumb_func
 4081              		.fpu fpv4-sp-d16
 4083              	xTaskRemoveFromEventList:
 4084              	.LFB33:
2974:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2975:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2976:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2977:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2978:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2979:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4085              		.loc 1 2979 0
 4086              		.cfi_startproc
 4087              		@ args = 0, pretend = 0, frame = 24
 4088              		@ frame_needed = 1, uses_anonymous_args = 0
 4089 0000 80B5     		push	{r7, lr}
 4090              	.LCFI147:
 4091              		.cfi_def_cfa_offset 8
 4092              		.cfi_offset 7, -8
 4093              		.cfi_offset 14, -4
 4094 0002 86B0     		sub	sp, sp, #24
 4095              	.LCFI148:
 4096              		.cfi_def_cfa_offset 32
 4097 0004 00AF     		add	r7, sp, #0
 4098              	.LCFI149:
 4099              		.cfi_def_cfa_register 7
 4100 0006 7860     		str	r0, [r7, #4]
2980:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2981:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2982:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2984:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2985:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2987:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2988:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2989:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2991:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2992:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2993:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2995:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2996:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
 4101              		.loc 1 2996 0
 4102 0008 7B68     		ldr	r3, [r7, #4]
 4103 000a DB68     		ldr	r3, [r3, #12]
 4104 000c DB68     		ldr	r3, [r3, #12]
 4105 000e 3B61     		str	r3, [r7, #16]
2997:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4106              		.loc 1 2997 0
 4107 0010 3B69     		ldr	r3, [r7, #16]
 4108 0012 002B     		cmp	r3, #0
 4109 0014 09D1     		bne	.L272
 4110              	.LBB182:
ARM GAS  /tmp/ccIHW9zM.s 			page 129


 4111              	.LBB183:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4112              		.loc 2 195 0 discriminator 1
 4113              		.syntax unified
 4114              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4115 0016 4FF05003 			mov r3, #80												
 4116 001a 83F31188 		msr basepri, r3											
 4117 001e BFF36F8F 		isb														
 4118 0022 BFF34F8F 		dsb														
 4119              	
 4120              	@ 0 "" 2
 4121              		.thumb
 4122              		.syntax unified
 4123 0026 FB60     		str	r3, [r7, #12]
 4124              	.L273:
 4125              	.LBE183:
 4126              	.LBE182:
 4127              		.loc 1 2997 0 discriminator 1
 4128 0028 FEE7     		b	.L273
 4129              	.L272:
2998:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4130              		.loc 1 2998 0
 4131 002a 3B69     		ldr	r3, [r7, #16]
 4132 002c 1833     		adds	r3, r3, #24
 4133 002e 1846     		mov	r0, r3
 4134 0030 FFF7FEFF 		bl	uxListRemove
2999:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3000:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 4135              		.loc 1 3000 0
 4136 0034 1D4B     		ldr	r3, .L280
 4137 0036 1B68     		ldr	r3, [r3]
 4138 0038 002B     		cmp	r3, #0
 4139 003a 1DD1     		bne	.L274
3001:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3002:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 4140              		.loc 1 3002 0
 4141 003c 3B69     		ldr	r3, [r7, #16]
 4142 003e 0433     		adds	r3, r3, #4
 4143 0040 1846     		mov	r0, r3
 4144 0042 FFF7FEFF 		bl	uxListRemove
3003:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 4145              		.loc 1 3003 0
 4146 0046 3B69     		ldr	r3, [r7, #16]
 4147 0048 DA6A     		ldr	r2, [r3, #44]
 4148 004a 194B     		ldr	r3, .L280+4
 4149 004c 1B68     		ldr	r3, [r3]
 4150 004e 9A42     		cmp	r2, r3
 4151 0050 03D9     		bls	.L275
 4152              		.loc 1 3003 0 is_stmt 0 discriminator 1
 4153 0052 3B69     		ldr	r3, [r7, #16]
 4154 0054 DB6A     		ldr	r3, [r3, #44]
 4155 0056 164A     		ldr	r2, .L280+4
 4156 0058 1360     		str	r3, [r2]
 4157              	.L275:
 4158              		.loc 1 3003 0 discriminator 3
 4159 005a 3B69     		ldr	r3, [r7, #16]
 4160 005c DA6A     		ldr	r2, [r3, #44]
ARM GAS  /tmp/ccIHW9zM.s 			page 130


 4161 005e 1346     		mov	r3, r2
 4162 0060 9B00     		lsls	r3, r3, #2
 4163 0062 1344     		add	r3, r3, r2
 4164 0064 9B00     		lsls	r3, r3, #2
 4165 0066 134A     		ldr	r2, .L280+8
 4166 0068 1A44     		add	r2, r2, r3
 4167 006a 3B69     		ldr	r3, [r7, #16]
 4168 006c 0433     		adds	r3, r3, #4
 4169 006e 1946     		mov	r1, r3
 4170 0070 1046     		mov	r0, r2
 4171 0072 FFF7FEFF 		bl	vListInsertEnd
 4172 0076 05E0     		b	.L276
 4173              	.L274:
3004:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3005:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3006:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3007:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3008:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3009:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 4174              		.loc 1 3009 0 is_stmt 1
 4175 0078 3B69     		ldr	r3, [r7, #16]
 4176 007a 1833     		adds	r3, r3, #24
 4177 007c 1946     		mov	r1, r3
 4178 007e 0E48     		ldr	r0, .L280+12
 4179 0080 FFF7FEFF 		bl	vListInsertEnd
 4180              	.L276:
3010:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3011:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3012:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 4181              		.loc 1 3012 0
 4182 0084 3B69     		ldr	r3, [r7, #16]
 4183 0086 DA6A     		ldr	r2, [r3, #44]
 4184 0088 0C4B     		ldr	r3, .L280+16
 4185 008a 1B68     		ldr	r3, [r3]
 4186 008c DB6A     		ldr	r3, [r3, #44]
 4187 008e 9A42     		cmp	r2, r3
 4188 0090 05D9     		bls	.L277
3013:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3014:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3015:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3016:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3017:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
 4189              		.loc 1 3017 0
 4190 0092 0123     		movs	r3, #1
 4191 0094 7B61     		str	r3, [r7, #20]
3018:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3020:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3021:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 4192              		.loc 1 3021 0
 4193 0096 0A4B     		ldr	r3, .L280+20
 4194 0098 0122     		movs	r2, #1
 4195 009a 1A60     		str	r2, [r3]
 4196 009c 01E0     		b	.L278
 4197              	.L277:
3022:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3023:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
ARM GAS  /tmp/ccIHW9zM.s 			page 131


3024:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3025:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
 4198              		.loc 1 3025 0
 4199 009e 0023     		movs	r3, #0
 4200 00a0 7B61     		str	r3, [r7, #20]
 4201              	.L278:
3026:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3027:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3028:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3029:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3030:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3031:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3032:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3033:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3034:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3035:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3036:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3037:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3038:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3039:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3040:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3041:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3042:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 4202              		.loc 1 3042 0
 4203 00a2 7B69     		ldr	r3, [r7, #20]
3043:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4204              		.loc 1 3043 0
 4205 00a4 1846     		mov	r0, r3
 4206 00a6 1837     		adds	r7, r7, #24
 4207              	.LCFI150:
 4208              		.cfi_def_cfa_offset 8
 4209 00a8 BD46     		mov	sp, r7
 4210              	.LCFI151:
 4211              		.cfi_def_cfa_register 13
 4212              		@ sp needed
 4213 00aa 80BD     		pop	{r7, pc}
 4214              	.L281:
 4215              		.align	2
 4216              	.L280:
 4217 00ac 00000000 		.word	uxSchedulerSuspended
 4218 00b0 00000000 		.word	uxTopReadyPriority
 4219 00b4 00000000 		.word	pxReadyTasksLists
 4220 00b8 00000000 		.word	xPendingReadyList
 4221 00bc 00000000 		.word	pxCurrentTCB
 4222 00c0 00000000 		.word	xYieldPending
 4223              		.cfi_endproc
 4224              	.LFE33:
 4226              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4227              		.align	1
 4228              		.global	vTaskRemoveFromUnorderedEventList
 4229              		.syntax unified
 4230              		.thumb
 4231              		.thumb_func
 4232              		.fpu fpv4-sp-d16
 4234              	vTaskRemoveFromUnorderedEventList:
 4235              	.LFB34:
3044:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccIHW9zM.s 			page 132


3045:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3046:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3047:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4236              		.loc 1 3047 0
 4237              		.cfi_startproc
 4238              		@ args = 0, pretend = 0, frame = 24
 4239              		@ frame_needed = 1, uses_anonymous_args = 0
 4240 0000 80B5     		push	{r7, lr}
 4241              	.LCFI152:
 4242              		.cfi_def_cfa_offset 8
 4243              		.cfi_offset 7, -8
 4244              		.cfi_offset 14, -4
 4245 0002 86B0     		sub	sp, sp, #24
 4246              	.LCFI153:
 4247              		.cfi_def_cfa_offset 32
 4248 0004 00AF     		add	r7, sp, #0
 4249              	.LCFI154:
 4250              		.cfi_def_cfa_register 7
 4251 0006 7860     		str	r0, [r7, #4]
 4252 0008 3960     		str	r1, [r7]
3048:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3049:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3051:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3052:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
 4253              		.loc 1 3052 0
 4254 000a 284B     		ldr	r3, .L290
 4255 000c 1B68     		ldr	r3, [r3]
 4256 000e 002B     		cmp	r3, #0
 4257 0010 09D1     		bne	.L283
 4258              	.LBB184:
 4259              	.LBB185:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4260              		.loc 2 195 0 discriminator 1
 4261              		.syntax unified
 4262              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4263 0012 4FF05003 			mov r3, #80												
 4264 0016 83F31188 		msr basepri, r3											
 4265 001a BFF36F8F 		isb														
 4266 001e BFF34F8F 		dsb														
 4267              	
 4268              	@ 0 "" 2
 4269              		.thumb
 4270              		.syntax unified
 4271 0022 3B61     		str	r3, [r7, #16]
 4272              	.L284:
 4273              	.LBE185:
 4274              	.LBE184:
 4275              		.loc 1 3052 0 discriminator 1
 4276 0024 FEE7     		b	.L284
 4277              	.L283:
3053:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3054:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3055:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
 4278              		.loc 1 3055 0
 4279 0026 3B68     		ldr	r3, [r7]
 4280 0028 43F00042 		orr	r2, r3, #-2147483648
ARM GAS  /tmp/ccIHW9zM.s 			page 133


 4281 002c 7B68     		ldr	r3, [r7, #4]
 4282 002e 1A60     		str	r2, [r3]
3056:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3058:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3059:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
 4283              		.loc 1 3059 0
 4284 0030 7B68     		ldr	r3, [r7, #4]
 4285 0032 DB68     		ldr	r3, [r3, #12]
 4286 0034 7B61     		str	r3, [r7, #20]
3060:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4287              		.loc 1 3060 0
 4288 0036 7B69     		ldr	r3, [r7, #20]
 4289 0038 002B     		cmp	r3, #0
 4290 003a 09D1     		bne	.L285
 4291              	.LBB186:
 4292              	.LBB187:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4293              		.loc 2 195 0 discriminator 1
 4294              		.syntax unified
 4295              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4296 003c 4FF05003 			mov r3, #80												
 4297 0040 83F31188 		msr basepri, r3											
 4298 0044 BFF36F8F 		isb														
 4299 0048 BFF34F8F 		dsb														
 4300              	
 4301              	@ 0 "" 2
 4302              		.thumb
 4303              		.syntax unified
 4304 004c FB60     		str	r3, [r7, #12]
 4305              	.L286:
 4306              	.LBE187:
 4307              	.LBE186:
 4308              		.loc 1 3060 0 discriminator 2
 4309 004e FEE7     		b	.L286
 4310              	.L285:
3061:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4311              		.loc 1 3061 0
 4312 0050 7868     		ldr	r0, [r7, #4]
 4313 0052 FFF7FEFF 		bl	uxListRemove
3062:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3064:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3065:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3066:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 4314              		.loc 1 3066 0
 4315 0056 7B69     		ldr	r3, [r7, #20]
 4316 0058 0433     		adds	r3, r3, #4
 4317 005a 1846     		mov	r0, r3
 4318 005c FFF7FEFF 		bl	uxListRemove
3067:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4319              		.loc 1 3067 0
 4320 0060 7B69     		ldr	r3, [r7, #20]
 4321 0062 DA6A     		ldr	r2, [r3, #44]
 4322 0064 124B     		ldr	r3, .L290+4
 4323 0066 1B68     		ldr	r3, [r3]
 4324 0068 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccIHW9zM.s 			page 134


 4325 006a 03D9     		bls	.L287
 4326              		.loc 1 3067 0 is_stmt 0 discriminator 1
 4327 006c 7B69     		ldr	r3, [r7, #20]
 4328 006e DB6A     		ldr	r3, [r3, #44]
 4329 0070 0F4A     		ldr	r2, .L290+4
 4330 0072 1360     		str	r3, [r2]
 4331              	.L287:
 4332              		.loc 1 3067 0 discriminator 3
 4333 0074 7B69     		ldr	r3, [r7, #20]
 4334 0076 DA6A     		ldr	r2, [r3, #44]
 4335 0078 1346     		mov	r3, r2
 4336 007a 9B00     		lsls	r3, r3, #2
 4337 007c 1344     		add	r3, r3, r2
 4338 007e 9B00     		lsls	r3, r3, #2
 4339 0080 0C4A     		ldr	r2, .L290+8
 4340 0082 1A44     		add	r2, r2, r3
 4341 0084 7B69     		ldr	r3, [r7, #20]
 4342 0086 0433     		adds	r3, r3, #4
 4343 0088 1946     		mov	r1, r3
 4344 008a 1046     		mov	r0, r2
 4345 008c FFF7FEFF 		bl	vListInsertEnd
3068:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3069:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 4346              		.loc 1 3069 0 is_stmt 1 discriminator 3
 4347 0090 7B69     		ldr	r3, [r7, #20]
 4348 0092 DA6A     		ldr	r2, [r3, #44]
 4349 0094 084B     		ldr	r3, .L290+12
 4350 0096 1B68     		ldr	r3, [r3]
 4351 0098 DB6A     		ldr	r3, [r3, #44]
 4352 009a 9A42     		cmp	r2, r3
 4353 009c 02D9     		bls	.L289
3070:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3071:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3072:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3073:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3074:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3075:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 4354              		.loc 1 3075 0
 4355 009e 074B     		ldr	r3, .L290+16
 4356 00a0 0122     		movs	r2, #1
 4357 00a2 1A60     		str	r2, [r3]
 4358              	.L289:
3076:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3077:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4359              		.loc 1 3077 0
 4360 00a4 00BF     		nop
 4361 00a6 1837     		adds	r7, r7, #24
 4362              	.LCFI155:
 4363              		.cfi_def_cfa_offset 8
 4364 00a8 BD46     		mov	sp, r7
 4365              	.LCFI156:
 4366              		.cfi_def_cfa_register 13
 4367              		@ sp needed
 4368 00aa 80BD     		pop	{r7, pc}
 4369              	.L291:
 4370              		.align	2
 4371              	.L290:
ARM GAS  /tmp/ccIHW9zM.s 			page 135


 4372 00ac 00000000 		.word	uxSchedulerSuspended
 4373 00b0 00000000 		.word	uxTopReadyPriority
 4374 00b4 00000000 		.word	pxReadyTasksLists
 4375 00b8 00000000 		.word	pxCurrentTCB
 4376 00bc 00000000 		.word	xYieldPending
 4377              		.cfi_endproc
 4378              	.LFE34:
 4380              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4381              		.align	1
 4382              		.global	vTaskSetTimeOutState
 4383              		.syntax unified
 4384              		.thumb
 4385              		.thumb_func
 4386              		.fpu fpv4-sp-d16
 4388              	vTaskSetTimeOutState:
 4389              	.LFB35:
3078:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3079:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3080:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3081:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4390              		.loc 1 3081 0
 4391              		.cfi_startproc
 4392              		@ args = 0, pretend = 0, frame = 16
 4393              		@ frame_needed = 1, uses_anonymous_args = 0
 4394 0000 80B5     		push	{r7, lr}
 4395              	.LCFI157:
 4396              		.cfi_def_cfa_offset 8
 4397              		.cfi_offset 7, -8
 4398              		.cfi_offset 14, -4
 4399 0002 84B0     		sub	sp, sp, #16
 4400              	.LCFI158:
 4401              		.cfi_def_cfa_offset 24
 4402 0004 00AF     		add	r7, sp, #0
 4403              	.LCFI159:
 4404              		.cfi_def_cfa_register 7
 4405 0006 7860     		str	r0, [r7, #4]
3082:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4406              		.loc 1 3082 0
 4407 0008 7B68     		ldr	r3, [r7, #4]
 4408 000a 002B     		cmp	r3, #0
 4409 000c 09D1     		bne	.L293
 4410              	.LBB188:
 4411              	.LBB189:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4412              		.loc 2 195 0 discriminator 1
 4413              		.syntax unified
 4414              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4415 000e 4FF05003 			mov r3, #80												
 4416 0012 83F31188 		msr basepri, r3											
 4417 0016 BFF36F8F 		isb														
 4418 001a BFF34F8F 		dsb														
 4419              	
 4420              	@ 0 "" 2
 4421              		.thumb
 4422              		.syntax unified
 4423 001e FB60     		str	r3, [r7, #12]
 4424              	.L294:
ARM GAS  /tmp/ccIHW9zM.s 			page 136


 4425              	.LBE189:
 4426              	.LBE188:
 4427              		.loc 1 3082 0 discriminator 1
 4428 0020 FEE7     		b	.L294
 4429              	.L293:
3083:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4430              		.loc 1 3083 0
 4431 0022 FFF7FEFF 		bl	vPortEnterCritical
3084:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3085:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
 4432              		.loc 1 3085 0
 4433 0026 074B     		ldr	r3, .L295
 4434 0028 1A68     		ldr	r2, [r3]
 4435 002a 7B68     		ldr	r3, [r7, #4]
 4436 002c 1A60     		str	r2, [r3]
3086:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4437              		.loc 1 3086 0
 4438 002e 064B     		ldr	r3, .L295+4
 4439 0030 1A68     		ldr	r2, [r3]
 4440 0032 7B68     		ldr	r3, [r7, #4]
 4441 0034 5A60     		str	r2, [r3, #4]
3087:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3088:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 4442              		.loc 1 3088 0
 4443 0036 FFF7FEFF 		bl	vPortExitCritical
3089:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4444              		.loc 1 3089 0
 4445 003a 00BF     		nop
 4446 003c 1037     		adds	r7, r7, #16
 4447              	.LCFI160:
 4448              		.cfi_def_cfa_offset 8
 4449 003e BD46     		mov	sp, r7
 4450              	.LCFI161:
 4451              		.cfi_def_cfa_register 13
 4452              		@ sp needed
 4453 0040 80BD     		pop	{r7, pc}
 4454              	.L296:
 4455 0042 00BF     		.align	2
 4456              	.L295:
 4457 0044 00000000 		.word	xNumOfOverflows
 4458 0048 00000000 		.word	xTickCount
 4459              		.cfi_endproc
 4460              	.LFE35:
 4462              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4463              		.align	1
 4464              		.global	vTaskInternalSetTimeOutState
 4465              		.syntax unified
 4466              		.thumb
 4467              		.thumb_func
 4468              		.fpu fpv4-sp-d16
 4470              	vTaskInternalSetTimeOutState:
 4471              	.LFB36:
3090:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3091:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3092:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3093:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4472              		.loc 1 3093 0
ARM GAS  /tmp/ccIHW9zM.s 			page 137


 4473              		.cfi_startproc
 4474              		@ args = 0, pretend = 0, frame = 8
 4475              		@ frame_needed = 1, uses_anonymous_args = 0
 4476              		@ link register save eliminated.
 4477 0000 80B4     		push	{r7}
 4478              	.LCFI162:
 4479              		.cfi_def_cfa_offset 4
 4480              		.cfi_offset 7, -4
 4481 0002 83B0     		sub	sp, sp, #12
 4482              	.LCFI163:
 4483              		.cfi_def_cfa_offset 16
 4484 0004 00AF     		add	r7, sp, #0
 4485              	.LCFI164:
 4486              		.cfi_def_cfa_register 7
 4487 0006 7860     		str	r0, [r7, #4]
3094:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3095:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 4488              		.loc 1 3095 0
 4489 0008 064B     		ldr	r3, .L298
 4490 000a 1A68     		ldr	r2, [r3]
 4491 000c 7B68     		ldr	r3, [r7, #4]
 4492 000e 1A60     		str	r2, [r3]
3096:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4493              		.loc 1 3096 0
 4494 0010 054B     		ldr	r3, .L298+4
 4495 0012 1A68     		ldr	r2, [r3]
 4496 0014 7B68     		ldr	r3, [r7, #4]
 4497 0016 5A60     		str	r2, [r3, #4]
3097:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4498              		.loc 1 3097 0
 4499 0018 00BF     		nop
 4500 001a 0C37     		adds	r7, r7, #12
 4501              	.LCFI165:
 4502              		.cfi_def_cfa_offset 4
 4503 001c BD46     		mov	sp, r7
 4504              	.LCFI166:
 4505              		.cfi_def_cfa_register 13
 4506              		@ sp needed
 4507 001e 5DF8047B 		ldr	r7, [sp], #4
 4508              	.LCFI167:
 4509              		.cfi_restore 7
 4510              		.cfi_def_cfa_offset 0
 4511 0022 7047     		bx	lr
 4512              	.L299:
 4513              		.align	2
 4514              	.L298:
 4515 0024 00000000 		.word	xNumOfOverflows
 4516 0028 00000000 		.word	xTickCount
 4517              		.cfi_endproc
 4518              	.LFE36:
 4520              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4521              		.align	1
 4522              		.global	xTaskCheckForTimeOut
 4523              		.syntax unified
 4524              		.thumb
 4525              		.thumb_func
 4526              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccIHW9zM.s 			page 138


 4528              	xTaskCheckForTimeOut:
 4529              	.LFB37:
3098:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3099:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4530              		.loc 1 3101 0
 4531              		.cfi_startproc
 4532              		@ args = 0, pretend = 0, frame = 32
 4533              		@ frame_needed = 1, uses_anonymous_args = 0
 4534 0000 80B5     		push	{r7, lr}
 4535              	.LCFI168:
 4536              		.cfi_def_cfa_offset 8
 4537              		.cfi_offset 7, -8
 4538              		.cfi_offset 14, -4
 4539 0002 88B0     		sub	sp, sp, #32
 4540              	.LCFI169:
 4541              		.cfi_def_cfa_offset 40
 4542 0004 00AF     		add	r7, sp, #0
 4543              	.LCFI170:
 4544              		.cfi_def_cfa_register 7
 4545 0006 7860     		str	r0, [r7, #4]
 4546 0008 3960     		str	r1, [r7]
3102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4547              		.loc 1 3104 0
 4548 000a 7B68     		ldr	r3, [r7, #4]
 4549 000c 002B     		cmp	r3, #0
 4550 000e 09D1     		bne	.L301
 4551              	.LBB190:
 4552              	.LBB191:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4553              		.loc 2 195 0 discriminator 1
 4554              		.syntax unified
 4555              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4556 0010 4FF05003 			mov r3, #80												
 4557 0014 83F31188 		msr basepri, r3											
 4558 0018 BFF36F8F 		isb														
 4559 001c BFF34F8F 		dsb														
 4560              	
 4561              	@ 0 "" 2
 4562              		.thumb
 4563              		.syntax unified
 4564 0020 3B61     		str	r3, [r7, #16]
 4565              	.L302:
 4566              	.LBE191:
 4567              	.LBE190:
 4568              		.loc 1 3104 0 discriminator 1
 4569 0022 FEE7     		b	.L302
 4570              	.L301:
3105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4571              		.loc 1 3105 0
 4572 0024 3B68     		ldr	r3, [r7]
 4573 0026 002B     		cmp	r3, #0
 4574 0028 09D1     		bne	.L303
 4575              	.LBB192:
ARM GAS  /tmp/ccIHW9zM.s 			page 139


 4576              	.LBB193:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4577              		.loc 2 195 0 discriminator 1
 4578              		.syntax unified
 4579              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4580 002a 4FF05003 			mov r3, #80												
 4581 002e 83F31188 		msr basepri, r3											
 4582 0032 BFF36F8F 		isb														
 4583 0036 BFF34F8F 		dsb														
 4584              	
 4585              	@ 0 "" 2
 4586              		.thumb
 4587              		.syntax unified
 4588 003a FB60     		str	r3, [r7, #12]
 4589              	.L304:
 4590              	.LBE193:
 4591              	.LBE192:
 4592              		.loc 1 3105 0 discriminator 2
 4593 003c FEE7     		b	.L304
 4594              	.L303:
3106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4595              		.loc 1 3107 0
 4596 003e FFF7FEFF 		bl	vPortEnterCritical
 4597              	.LBB194:
3108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
 4598              		.loc 1 3110 0
 4599 0042 1D4B     		ldr	r3, .L310
 4600 0044 1B68     		ldr	r3, [r3]
 4601 0046 BB61     		str	r3, [r7, #24]
3111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4602              		.loc 1 3111 0
 4603 0048 7B68     		ldr	r3, [r7, #4]
 4604 004a 5B68     		ldr	r3, [r3, #4]
 4605 004c BA69     		ldr	r2, [r7, #24]
 4606 004e D31A     		subs	r3, r2, r3
 4607 0050 7B61     		str	r3, [r7, #20]
3112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
 4608              		.loc 1 3125 0
 4609 0052 3B68     		ldr	r3, [r7]
 4610 0054 1B68     		ldr	r3, [r3]
 4611 0056 B3F1FF3F 		cmp	r3, #-1
ARM GAS  /tmp/ccIHW9zM.s 			page 140


 4612 005a 02D1     		bne	.L305
3126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 4613              		.loc 1 3130 0
 4614 005c 0023     		movs	r3, #0
 4615 005e FB61     		str	r3, [r7, #28]
 4616 0060 23E0     		b	.L306
 4617              	.L305:
3131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
 4618              		.loc 1 3135 0
 4619 0062 7B68     		ldr	r3, [r7, #4]
 4620 0064 1A68     		ldr	r2, [r3]
 4621 0066 154B     		ldr	r3, .L310+4
 4622 0068 1B68     		ldr	r3, [r3]
 4623 006a 9A42     		cmp	r2, r3
 4624 006c 07D0     		beq	.L307
 4625              		.loc 1 3135 0 is_stmt 0 discriminator 1
 4626 006e 7B68     		ldr	r3, [r7, #4]
 4627 0070 5B68     		ldr	r3, [r3, #4]
 4628 0072 BA69     		ldr	r2, [r7, #24]
 4629 0074 9A42     		cmp	r2, r3
 4630 0076 02D3     		bcc	.L307
3136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4631              		.loc 1 3142 0 is_stmt 1
 4632 0078 0123     		movs	r3, #1
 4633 007a FB61     		str	r3, [r7, #28]
 4634 007c 15E0     		b	.L306
 4635              	.L307:
3143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
 4636              		.loc 1 3144 0
 4637 007e 3B68     		ldr	r3, [r7]
 4638 0080 1B68     		ldr	r3, [r3]
 4639 0082 7A69     		ldr	r2, [r7, #20]
 4640 0084 9A42     		cmp	r2, r3
 4641 0086 0BD2     		bcs	.L308
3145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
 4642              		.loc 1 3147 0
 4643 0088 3B68     		ldr	r3, [r7]
 4644 008a 1A68     		ldr	r2, [r3]
 4645 008c 7B69     		ldr	r3, [r7, #20]
 4646 008e D21A     		subs	r2, r2, r3
ARM GAS  /tmp/ccIHW9zM.s 			page 141


 4647 0090 3B68     		ldr	r3, [r7]
 4648 0092 1A60     		str	r2, [r3]
3148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4649              		.loc 1 3148 0
 4650 0094 7868     		ldr	r0, [r7, #4]
 4651 0096 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
3149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4652              		.loc 1 3149 0
 4653 009a 0023     		movs	r3, #0
 4654 009c FB61     		str	r3, [r7, #28]
 4655 009e 04E0     		b	.L306
 4656              	.L308:
3150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
 4657              		.loc 1 3153 0
 4658 00a0 3B68     		ldr	r3, [r7]
 4659 00a2 0022     		movs	r2, #0
 4660 00a4 1A60     		str	r2, [r3]
3154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4661              		.loc 1 3154 0
 4662 00a6 0123     		movs	r3, #1
 4663 00a8 FB61     		str	r3, [r7, #28]
 4664              	.L306:
 4665              	.LBE194:
3155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 4666              		.loc 1 3157 0
 4667 00aa FFF7FEFF 		bl	vPortExitCritical
3158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 4668              		.loc 1 3159 0
 4669 00ae FB69     		ldr	r3, [r7, #28]
3160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4670              		.loc 1 3160 0
 4671 00b0 1846     		mov	r0, r3
 4672 00b2 2037     		adds	r7, r7, #32
 4673              	.LCFI171:
 4674              		.cfi_def_cfa_offset 8
 4675 00b4 BD46     		mov	sp, r7
 4676              	.LCFI172:
 4677              		.cfi_def_cfa_register 13
 4678              		@ sp needed
 4679 00b6 80BD     		pop	{r7, pc}
 4680              	.L311:
 4681              		.align	2
 4682              	.L310:
 4683 00b8 00000000 		.word	xTickCount
 4684 00bc 00000000 		.word	xNumOfOverflows
 4685              		.cfi_endproc
 4686              	.LFE37:
 4688              		.section	.text.vTaskMissedYield,"ax",%progbits
 4689              		.align	1
 4690              		.global	vTaskMissedYield
 4691              		.syntax unified
ARM GAS  /tmp/ccIHW9zM.s 			page 142


 4692              		.thumb
 4693              		.thumb_func
 4694              		.fpu fpv4-sp-d16
 4696              	vTaskMissedYield:
 4697              	.LFB38:
3161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4698              		.loc 1 3164 0
 4699              		.cfi_startproc
 4700              		@ args = 0, pretend = 0, frame = 0
 4701              		@ frame_needed = 1, uses_anonymous_args = 0
 4702              		@ link register save eliminated.
 4703 0000 80B4     		push	{r7}
 4704              	.LCFI173:
 4705              		.cfi_def_cfa_offset 4
 4706              		.cfi_offset 7, -4
 4707 0002 00AF     		add	r7, sp, #0
 4708              	.LCFI174:
 4709              		.cfi_def_cfa_register 7
3165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4710              		.loc 1 3165 0
 4711 0004 034B     		ldr	r3, .L313
 4712 0006 0122     		movs	r2, #1
 4713 0008 1A60     		str	r2, [r3]
3166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4714              		.loc 1 3166 0
 4715 000a 00BF     		nop
 4716 000c BD46     		mov	sp, r7
 4717              	.LCFI175:
 4718              		.cfi_def_cfa_register 13
 4719              		@ sp needed
 4720 000e 5DF8047B 		ldr	r7, [sp], #4
 4721              	.LCFI176:
 4722              		.cfi_restore 7
 4723              		.cfi_def_cfa_offset 0
 4724 0012 7047     		bx	lr
 4725              	.L314:
 4726              		.align	2
 4727              	.L313:
 4728 0014 00000000 		.word	xYieldPending
 4729              		.cfi_endproc
 4730              	.LFE38:
 4732              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 4733              		.align	1
 4734              		.global	uxTaskGetTaskNumber
 4735              		.syntax unified
 4736              		.thumb
 4737              		.thumb_func
 4738              		.fpu fpv4-sp-d16
 4740              	uxTaskGetTaskNumber:
 4741              	.LFB39:
3167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 143


3171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4742              		.loc 1 3172 0
 4743              		.cfi_startproc
 4744              		@ args = 0, pretend = 0, frame = 16
 4745              		@ frame_needed = 1, uses_anonymous_args = 0
 4746              		@ link register save eliminated.
 4747 0000 80B4     		push	{r7}
 4748              	.LCFI177:
 4749              		.cfi_def_cfa_offset 4
 4750              		.cfi_offset 7, -4
 4751 0002 85B0     		sub	sp, sp, #20
 4752              	.LCFI178:
 4753              		.cfi_def_cfa_offset 24
 4754 0004 00AF     		add	r7, sp, #0
 4755              	.LCFI179:
 4756              		.cfi_def_cfa_register 7
 4757 0006 7860     		str	r0, [r7, #4]
3173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 4758              		.loc 1 3176 0
 4759 0008 7B68     		ldr	r3, [r7, #4]
 4760 000a 002B     		cmp	r3, #0
 4761 000c 05D0     		beq	.L316
3177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
 4762              		.loc 1 3178 0
 4763 000e 7B68     		ldr	r3, [r7, #4]
 4764 0010 BB60     		str	r3, [r7, #8]
3179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
 4765              		.loc 1 3179 0
 4766 0012 BB68     		ldr	r3, [r7, #8]
 4767 0014 9B6C     		ldr	r3, [r3, #72]
 4768 0016 FB60     		str	r3, [r7, #12]
 4769 0018 01E0     		b	.L317
 4770              	.L316:
3180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
 4771              		.loc 1 3183 0
 4772 001a 0023     		movs	r3, #0
 4773 001c FB60     		str	r3, [r7, #12]
 4774              	.L317:
3184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 4775              		.loc 1 3186 0
 4776 001e FB68     		ldr	r3, [r7, #12]
3187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4777              		.loc 1 3187 0
 4778 0020 1846     		mov	r0, r3
 4779 0022 1437     		adds	r7, r7, #20
 4780              	.LCFI180:
 4781              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccIHW9zM.s 			page 144


 4782 0024 BD46     		mov	sp, r7
 4783              	.LCFI181:
 4784              		.cfi_def_cfa_register 13
 4785              		@ sp needed
 4786 0026 5DF8047B 		ldr	r7, [sp], #4
 4787              	.LCFI182:
 4788              		.cfi_restore 7
 4789              		.cfi_def_cfa_offset 0
 4790 002a 7047     		bx	lr
 4791              		.cfi_endproc
 4792              	.LFE39:
 4794              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 4795              		.align	1
 4796              		.global	vTaskSetTaskNumber
 4797              		.syntax unified
 4798              		.thumb
 4799              		.thumb_func
 4800              		.fpu fpv4-sp-d16
 4802              	vTaskSetTaskNumber:
 4803              	.LFB40:
3188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4804              		.loc 1 3195 0
 4805              		.cfi_startproc
 4806              		@ args = 0, pretend = 0, frame = 16
 4807              		@ frame_needed = 1, uses_anonymous_args = 0
 4808              		@ link register save eliminated.
 4809 0000 80B4     		push	{r7}
 4810              	.LCFI183:
 4811              		.cfi_def_cfa_offset 4
 4812              		.cfi_offset 7, -4
 4813 0002 85B0     		sub	sp, sp, #20
 4814              	.LCFI184:
 4815              		.cfi_def_cfa_offset 24
 4816 0004 00AF     		add	r7, sp, #0
 4817              	.LCFI185:
 4818              		.cfi_def_cfa_register 7
 4819 0006 7860     		str	r0, [r7, #4]
 4820 0008 3960     		str	r1, [r7]
3196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 4821              		.loc 1 3198 0
 4822 000a 7B68     		ldr	r3, [r7, #4]
 4823 000c 002B     		cmp	r3, #0
 4824 000e 04D0     		beq	.L321
3199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
 4825              		.loc 1 3200 0
 4826 0010 7B68     		ldr	r3, [r7, #4]
 4827 0012 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccIHW9zM.s 			page 145


3201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
 4828              		.loc 1 3201 0
 4829 0014 FB68     		ldr	r3, [r7, #12]
 4830 0016 3A68     		ldr	r2, [r7]
 4831 0018 9A64     		str	r2, [r3, #72]
 4832              	.L321:
3202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4833              		.loc 1 3203 0
 4834 001a 00BF     		nop
 4835 001c 1437     		adds	r7, r7, #20
 4836              	.LCFI186:
 4837              		.cfi_def_cfa_offset 4
 4838 001e BD46     		mov	sp, r7
 4839              	.LCFI187:
 4840              		.cfi_def_cfa_register 13
 4841              		@ sp needed
 4842 0020 5DF8047B 		ldr	r7, [sp], #4
 4843              	.LCFI188:
 4844              		.cfi_restore 7
 4845              		.cfi_def_cfa_offset 0
 4846 0024 7047     		bx	lr
 4847              		.cfi_endproc
 4848              	.LFE40:
 4850              		.section	.text.prvIdleTask,"ax",%progbits
 4851              		.align	1
 4852              		.syntax unified
 4853              		.thumb
 4854              		.thumb_func
 4855              		.fpu fpv4-sp-d16
 4857              	prvIdleTask:
 4858              	.LFB41:
3204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4859              		.loc 1 3219 0
 4860              		.cfi_startproc
 4861              		@ args = 0, pretend = 0, frame = 8
 4862              		@ frame_needed = 1, uses_anonymous_args = 0
 4863 0000 80B5     		push	{r7, lr}
 4864              	.LCFI189:
 4865              		.cfi_def_cfa_offset 8
 4866              		.cfi_offset 7, -8
 4867              		.cfi_offset 14, -4
ARM GAS  /tmp/ccIHW9zM.s 			page 146


 4868 0002 82B0     		sub	sp, sp, #8
 4869              	.LCFI190:
 4870              		.cfi_def_cfa_offset 16
 4871 0004 00AF     		add	r7, sp, #0
 4872              	.LCFI191:
 4873              		.cfi_def_cfa_register 7
 4874 0006 7860     		str	r0, [r7, #4]
 4875              	.L324:
3220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3230:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3231:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3232:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3233:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3234:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3235:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
 4876              		.loc 1 3235 0
 4877 0008 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
3236:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3238:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3239:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3240:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3241:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3242:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3243:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3244:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3245:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3246:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3247:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3248:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3249:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3250:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3251:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3252:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3253:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3255:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3256:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3257:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3258:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 4878              		.loc 1 3258 0
 4879 000c 064B     		ldr	r3, .L325
 4880 000e 1B68     		ldr	r3, [r3]
 4881 0010 012B     		cmp	r3, #1
 4882 0012 F9D9     		bls	.L324
3259:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3260:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
 4883              		.loc 1 3260 0
ARM GAS  /tmp/ccIHW9zM.s 			page 147


 4884 0014 054B     		ldr	r3, .L325+4
 4885 0016 4FF08052 		mov	r2, #268435456
 4886 001a 1A60     		str	r2, [r3]
 4887              		.syntax unified
 4888              	@ 3260 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4889 001c BFF34F8F 		dsb
 4890              	@ 0 "" 2
 4891              	@ 3260 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4892 0020 BFF36F8F 		isb
 4893              	@ 0 "" 2
3235:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4894              		.loc 1 3235 0
 4895              		.thumb
 4896              		.syntax unified
 4897 0024 F0E7     		b	.L324
 4898              	.L326:
 4899 0026 00BF     		.align	2
 4900              	.L325:
 4901 0028 00000000 		.word	pxReadyTasksLists
 4902 002c 04ED00E0 		.word	-536810236
 4903              		.cfi_endproc
 4904              	.LFE41:
 4906              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 4907              		.align	1
 4908              		.syntax unified
 4909              		.thumb
 4910              		.thumb_func
 4911              		.fpu fpv4-sp-d16
 4913              	prvInitialiseTaskLists:
 4914              	.LFB42:
3261:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3262:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3263:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3265:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3267:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3268:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3269:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3270:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3271:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3272:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3273:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3274:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3275:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3276:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3277:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3278:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3279:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3280:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3281:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3282:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3283:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3284:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3285:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3286:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3287:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIHW9zM.s 			page 148


3288:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3289:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3290:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3291:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3292:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3293:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3294:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3295:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3296:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3297:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3298:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3299:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3300:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3301:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3302:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3303:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3304:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3305:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3306:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3307:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3308:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3309:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3310:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3311:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3312:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3313:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3314:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3315:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3316:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3317:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3318:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3319:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3320:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3321:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3322:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3323:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3324:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3325:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3326:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3327:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3328:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3329:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3331:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3332:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3333:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3334:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3335:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3336:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3338:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3340:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3341:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3342:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3344:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIHW9zM.s 			page 149


3345:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3346:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3347:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3348:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3349:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3350:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3351:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3352:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3353:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3354:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3356:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3357:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3358:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3359:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3360:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3361:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3362:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3363:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3364:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3365:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3366:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3367:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3368:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3369:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3370:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3371:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3373:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3374:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3375:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3376:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3377:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3378:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3379:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3380:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3382:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3383:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3384:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3385:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3386:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3387:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3389:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3390:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3391:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3392:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3393:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3394:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3395:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3396:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3397:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3400:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3401:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
ARM GAS  /tmp/ccIHW9zM.s 			page 150


3402:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3403:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3404:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3405:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3406:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3407:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3408:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3409:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3410:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3412:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3413:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3414:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3415:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3416:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3417:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3418:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3419:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3420:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3421:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3422:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3423:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3425:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3426:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3427:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3428:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3429:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3430:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3431:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4915              		.loc 1 3431 0
 4916              		.cfi_startproc
 4917              		@ args = 0, pretend = 0, frame = 8
 4918              		@ frame_needed = 1, uses_anonymous_args = 0
 4919 0000 80B5     		push	{r7, lr}
 4920              	.LCFI192:
 4921              		.cfi_def_cfa_offset 8
 4922              		.cfi_offset 7, -8
 4923              		.cfi_offset 14, -4
 4924 0002 82B0     		sub	sp, sp, #8
 4925              	.LCFI193:
 4926              		.cfi_def_cfa_offset 16
 4927 0004 00AF     		add	r7, sp, #0
 4928              	.LCFI194:
 4929              		.cfi_def_cfa_register 7
3432:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3433:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
 4930              		.loc 1 3434 0
 4931 0006 0023     		movs	r3, #0
 4932 0008 7B60     		str	r3, [r7, #4]
 4933 000a 0CE0     		b	.L328
 4934              	.L329:
3435:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3436:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 4935              		.loc 1 3436 0 discriminator 3
 4936 000c 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccIHW9zM.s 			page 151


 4937 000e 1346     		mov	r3, r2
 4938 0010 9B00     		lsls	r3, r3, #2
 4939 0012 1344     		add	r3, r3, r2
 4940 0014 9B00     		lsls	r3, r3, #2
 4941 0016 124A     		ldr	r2, .L330
 4942 0018 1344     		add	r3, r3, r2
 4943 001a 1846     		mov	r0, r3
 4944 001c FFF7FEFF 		bl	vListInitialise
3434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4945              		.loc 1 3434 0 discriminator 3
 4946 0020 7B68     		ldr	r3, [r7, #4]
 4947 0022 0133     		adds	r3, r3, #1
 4948 0024 7B60     		str	r3, [r7, #4]
 4949              	.L328:
3434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4950              		.loc 1 3434 0 is_stmt 0 discriminator 1
 4951 0026 7B68     		ldr	r3, [r7, #4]
 4952 0028 372B     		cmp	r3, #55
 4953 002a EFD9     		bls	.L329
3437:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3438:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3439:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
 4954              		.loc 1 3439 0 is_stmt 1
 4955 002c 0D48     		ldr	r0, .L330+4
 4956 002e FFF7FEFF 		bl	vListInitialise
3440:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 4957              		.loc 1 3440 0
 4958 0032 0D48     		ldr	r0, .L330+8
 4959 0034 FFF7FEFF 		bl	vListInitialise
3441:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 4960              		.loc 1 3441 0
 4961 0038 0C48     		ldr	r0, .L330+12
 4962 003a FFF7FEFF 		bl	vListInitialise
3442:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3444:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3445:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
 4963              		.loc 1 3445 0
 4964 003e 0C48     		ldr	r0, .L330+16
 4965 0040 FFF7FEFF 		bl	vListInitialise
3446:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3447:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3448:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3449:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3450:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3451:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
 4966              		.loc 1 3451 0
 4967 0044 0B48     		ldr	r0, .L330+20
 4968 0046 FFF7FEFF 		bl	vListInitialise
3452:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3453:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3454:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3455:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3456:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3457:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 4969              		.loc 1 3457 0
 4970 004a 0B4B     		ldr	r3, .L330+24
ARM GAS  /tmp/ccIHW9zM.s 			page 152


 4971 004c 054A     		ldr	r2, .L330+4
 4972 004e 1A60     		str	r2, [r3]
3458:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 4973              		.loc 1 3458 0
 4974 0050 0A4B     		ldr	r3, .L330+28
 4975 0052 054A     		ldr	r2, .L330+8
 4976 0054 1A60     		str	r2, [r3]
3459:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4977              		.loc 1 3459 0
 4978 0056 00BF     		nop
 4979 0058 0837     		adds	r7, r7, #8
 4980              	.LCFI195:
 4981              		.cfi_def_cfa_offset 8
 4982 005a BD46     		mov	sp, r7
 4983              	.LCFI196:
 4984              		.cfi_def_cfa_register 13
 4985              		@ sp needed
 4986 005c 80BD     		pop	{r7, pc}
 4987              	.L331:
 4988 005e 00BF     		.align	2
 4989              	.L330:
 4990 0060 00000000 		.word	pxReadyTasksLists
 4991 0064 00000000 		.word	xDelayedTaskList1
 4992 0068 00000000 		.word	xDelayedTaskList2
 4993 006c 00000000 		.word	xPendingReadyList
 4994 0070 00000000 		.word	xTasksWaitingTermination
 4995 0074 00000000 		.word	xSuspendedTaskList
 4996 0078 00000000 		.word	pxDelayedTaskList
 4997 007c 00000000 		.word	pxOverflowDelayedTaskList
 4998              		.cfi_endproc
 4999              	.LFE42:
 5001              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 5002              		.align	1
 5003              		.syntax unified
 5004              		.thumb
 5005              		.thumb_func
 5006              		.fpu fpv4-sp-d16
 5008              	prvCheckTasksWaitingTermination:
 5009              	.LFB43:
3460:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3461:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3462:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3463:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 5010              		.loc 1 3463 0
 5011              		.cfi_startproc
 5012              		@ args = 0, pretend = 0, frame = 8
 5013              		@ frame_needed = 1, uses_anonymous_args = 0
 5014 0000 80B5     		push	{r7, lr}
 5015              	.LCFI197:
 5016              		.cfi_def_cfa_offset 8
 5017              		.cfi_offset 7, -8
 5018              		.cfi_offset 14, -4
 5019 0002 82B0     		sub	sp, sp, #8
 5020              	.LCFI198:
 5021              		.cfi_def_cfa_offset 16
 5022 0004 00AF     		add	r7, sp, #0
 5023              	.LCFI199:
ARM GAS  /tmp/ccIHW9zM.s 			page 153


 5024              		.cfi_def_cfa_register 7
 5025              	.LBB195:
3464:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3465:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3466:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3467:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3468:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3469:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3470:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3472:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3473:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 5026              		.loc 1 3473 0
 5027 0006 19E0     		b	.L333
 5028              	.L334:
3474:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3475:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 5029              		.loc 1 3475 0
 5030 0008 FFF7FEFF 		bl	vPortEnterCritical
3476:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
 5031              		.loc 1 3477 0
 5032 000c 0F4B     		ldr	r3, .L335
 5033 000e DB68     		ldr	r3, [r3, #12]
 5034 0010 DB68     		ldr	r3, [r3, #12]
 5035 0012 7B60     		str	r3, [r7, #4]
3478:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 5036              		.loc 1 3478 0
 5037 0014 7B68     		ldr	r3, [r7, #4]
 5038 0016 0433     		adds	r3, r3, #4
 5039 0018 1846     		mov	r0, r3
 5040 001a FFF7FEFF 		bl	uxListRemove
3479:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 5041              		.loc 1 3479 0
 5042 001e 0C4B     		ldr	r3, .L335+4
 5043 0020 1B68     		ldr	r3, [r3]
 5044 0022 013B     		subs	r3, r3, #1
 5045 0024 0A4A     		ldr	r2, .L335+4
 5046 0026 1360     		str	r3, [r2]
3480:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 5047              		.loc 1 3480 0
 5048 0028 0A4B     		ldr	r3, .L335+8
 5049 002a 1B68     		ldr	r3, [r3]
 5050 002c 013B     		subs	r3, r3, #1
 5051 002e 094A     		ldr	r2, .L335+8
 5052 0030 1360     		str	r3, [r2]
3481:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3482:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 5053              		.loc 1 3482 0
 5054 0032 FFF7FEFF 		bl	vPortExitCritical
3483:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3484:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
 5055              		.loc 1 3484 0
 5056 0036 7868     		ldr	r0, [r7, #4]
 5057 0038 FFF7FEFF 		bl	prvDeleteTCB
 5058              	.L333:
3473:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIHW9zM.s 			page 154


 5059              		.loc 1 3473 0
 5060 003c 054B     		ldr	r3, .L335+8
 5061 003e 1B68     		ldr	r3, [r3]
 5062 0040 002B     		cmp	r3, #0
 5063 0042 E1D1     		bne	.L334
 5064              	.LBE195:
3485:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3486:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3488:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5065              		.loc 1 3488 0
 5066 0044 00BF     		nop
 5067 0046 0837     		adds	r7, r7, #8
 5068              	.LCFI200:
 5069              		.cfi_def_cfa_offset 8
 5070 0048 BD46     		mov	sp, r7
 5071              	.LCFI201:
 5072              		.cfi_def_cfa_register 13
 5073              		@ sp needed
 5074 004a 80BD     		pop	{r7, pc}
 5075              	.L336:
 5076              		.align	2
 5077              	.L335:
 5078 004c 00000000 		.word	xTasksWaitingTermination
 5079 0050 00000000 		.word	uxCurrentNumberOfTasks
 5080 0054 00000000 		.word	uxDeletedTasksWaitingCleanUp
 5081              		.cfi_endproc
 5082              	.LFE43:
 5084              		.section	.text.vTaskGetInfo,"ax",%progbits
 5085              		.align	1
 5086              		.global	vTaskGetInfo
 5087              		.syntax unified
 5088              		.thumb
 5089              		.thumb_func
 5090              		.fpu fpv4-sp-d16
 5092              	vTaskGetInfo:
 5093              	.LFB44:
3489:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3490:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3492:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3494:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5094              		.loc 1 3494 0
 5095              		.cfi_startproc
 5096              		@ args = 0, pretend = 0, frame = 24
 5097              		@ frame_needed = 1, uses_anonymous_args = 0
 5098 0000 80B5     		push	{r7, lr}
 5099              	.LCFI202:
 5100              		.cfi_def_cfa_offset 8
 5101              		.cfi_offset 7, -8
 5102              		.cfi_offset 14, -4
 5103 0002 86B0     		sub	sp, sp, #24
 5104              	.LCFI203:
 5105              		.cfi_def_cfa_offset 32
 5106 0004 00AF     		add	r7, sp, #0
 5107              	.LCFI204:
ARM GAS  /tmp/ccIHW9zM.s 			page 155


 5108              		.cfi_def_cfa_register 7
 5109 0006 F860     		str	r0, [r7, #12]
 5110 0008 B960     		str	r1, [r7, #8]
 5111 000a 7A60     		str	r2, [r7, #4]
 5112 000c FB70     		strb	r3, [r7, #3]
3495:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3498:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 5113              		.loc 1 3498 0
 5114 000e FB68     		ldr	r3, [r7, #12]
 5115 0010 002B     		cmp	r3, #0
 5116 0012 02D1     		bne	.L338
 5117              		.loc 1 3498 0 is_stmt 0 discriminator 1
 5118 0014 2C4B     		ldr	r3, .L348
 5119 0016 1B68     		ldr	r3, [r3]
 5120 0018 00E0     		b	.L339
 5121              	.L338:
 5122              		.loc 1 3498 0 discriminator 2
 5123 001a FB68     		ldr	r3, [r7, #12]
 5124              	.L339:
 5125              		.loc 1 3498 0 discriminator 4
 5126 001c 7B61     		str	r3, [r7, #20]
3499:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
 5127              		.loc 1 3500 0 is_stmt 1 discriminator 4
 5128 001e BB68     		ldr	r3, [r7, #8]
 5129 0020 7A69     		ldr	r2, [r7, #20]
 5130 0022 1A60     		str	r2, [r3]
3501:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
 5131              		.loc 1 3501 0 discriminator 4
 5132 0024 7B69     		ldr	r3, [r7, #20]
 5133 0026 03F13402 		add	r2, r3, #52
 5134 002a BB68     		ldr	r3, [r7, #8]
 5135 002c 5A60     		str	r2, [r3, #4]
3502:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5136              		.loc 1 3502 0 discriminator 4
 5137 002e 7B69     		ldr	r3, [r7, #20]
 5138 0030 DA6A     		ldr	r2, [r3, #44]
 5139 0032 BB68     		ldr	r3, [r7, #8]
 5140 0034 1A61     		str	r2, [r3, #16]
3503:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5141              		.loc 1 3503 0 discriminator 4
 5142 0036 7B69     		ldr	r3, [r7, #20]
 5143 0038 1A6B     		ldr	r2, [r3, #48]
 5144 003a BB68     		ldr	r3, [r7, #8]
 5145 003c DA61     		str	r2, [r3, #28]
3504:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 5146              		.loc 1 3504 0 discriminator 4
 5147 003e 7B69     		ldr	r3, [r7, #20]
 5148 0040 5A6C     		ldr	r2, [r3, #68]
 5149 0042 BB68     		ldr	r3, [r7, #8]
 5150 0044 9A60     		str	r2, [r3, #8]
3505:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3506:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3507:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3508:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
ARM GAS  /tmp/ccIHW9zM.s 			page 156


 5151              		.loc 1 3508 0 discriminator 4
 5152 0046 7B69     		ldr	r3, [r7, #20]
 5153 0048 DA6C     		ldr	r2, [r3, #76]
 5154 004a BB68     		ldr	r3, [r7, #8]
 5155 004c 5A61     		str	r2, [r3, #20]
3509:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3510:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3511:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3512:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3513:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3514:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3515:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3516:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3517:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3518:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3519:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3521:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3522:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
 5156              		.loc 1 3522 0 discriminator 4
 5157 004e BB68     		ldr	r3, [r7, #8]
 5158 0050 0022     		movs	r2, #0
 5159 0052 9A61     		str	r2, [r3, #24]
3523:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3525:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3526:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3527:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3528:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3529:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
 5160              		.loc 1 3529 0 discriminator 4
 5161 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5162 0056 052B     		cmp	r3, #5
 5163 0058 1AD0     		beq	.L340
3530:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 5164              		.loc 1 3531 0
 5165 005a 1B4B     		ldr	r3, .L348
 5166 005c 1B68     		ldr	r3, [r3]
 5167 005e 7A69     		ldr	r2, [r7, #20]
 5168 0060 9A42     		cmp	r2, r3
 5169 0062 03D1     		bne	.L341
3532:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3533:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
 5170              		.loc 1 3533 0
 5171 0064 BB68     		ldr	r3, [r7, #8]
 5172 0066 0022     		movs	r2, #0
 5173 0068 1A73     		strb	r2, [r3, #12]
 5174 006a 18E0     		b	.L344
 5175              	.L341:
3534:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3535:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3536:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
 5176              		.loc 1 3537 0
 5177 006c BB68     		ldr	r3, [r7, #8]
 5178 006e FA78     		ldrb	r2, [r7, #3]
ARM GAS  /tmp/ccIHW9zM.s 			page 157


 5179 0070 1A73     		strb	r2, [r3, #12]
3538:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3539:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3540:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3541:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3542:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3543:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3544:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
 5180              		.loc 1 3544 0
 5181 0072 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5182 0074 032B     		cmp	r3, #3
 5183 0076 12D1     		bne	.L344
3545:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3546:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
 5184              		.loc 1 3546 0
 5185 0078 FFF7FEFF 		bl	vTaskSuspendAll
3547:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3548:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 5186              		.loc 1 3548 0
 5187 007c 7B69     		ldr	r3, [r7, #20]
 5188 007e 9B6A     		ldr	r3, [r3, #40]
 5189 0080 002B     		cmp	r3, #0
 5190 0082 02D0     		beq	.L343
3549:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3550:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
 5191              		.loc 1 3550 0
 5192 0084 BB68     		ldr	r3, [r7, #8]
 5193 0086 0222     		movs	r2, #2
 5194 0088 1A73     		strb	r2, [r3, #12]
 5195              	.L343:
3551:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3552:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3553:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
 5196              		.loc 1 3553 0
 5197 008a FFF7FEFF 		bl	xTaskResumeAll
 5198 008e 06E0     		b	.L344
 5199              	.L340:
3554:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3555:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3556:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3557:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3558:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3559:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3560:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3561:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
 5200              		.loc 1 3561 0
 5201 0090 7869     		ldr	r0, [r7, #20]
 5202 0092 FFF7FEFF 		bl	eTaskGetState
 5203 0096 0346     		mov	r3, r0
 5204 0098 1A46     		mov	r2, r3
 5205 009a BB68     		ldr	r3, [r7, #8]
 5206 009c 1A73     		strb	r2, [r3, #12]
 5207              	.L344:
3562:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3564:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3565:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
ARM GAS  /tmp/ccIHW9zM.s 			page 158


3566:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
 5208              		.loc 1 3566 0
 5209 009e 7B68     		ldr	r3, [r7, #4]
 5210 00a0 002B     		cmp	r3, #0
 5211 00a2 09D0     		beq	.L345
3567:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3568:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3569:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3570:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3571:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3572:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3573:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3574:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
 5212              		.loc 1 3574 0
 5213 00a4 7B69     		ldr	r3, [r7, #20]
 5214 00a6 1B6B     		ldr	r3, [r3, #48]
 5215 00a8 1846     		mov	r0, r3
 5216 00aa FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 5217 00ae 0346     		mov	r3, r0
 5218 00b0 1A46     		mov	r2, r3
 5219 00b2 BB68     		ldr	r3, [r7, #8]
 5220 00b4 1A84     		strh	r2, [r3, #32]	@ movhi
3575:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3576:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3577:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3578:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3579:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3580:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3581:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3582:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5221              		.loc 1 3582 0
 5222 00b6 02E0     		b	.L347
 5223              	.L345:
3580:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5224              		.loc 1 3580 0
 5225 00b8 BB68     		ldr	r3, [r7, #8]
 5226 00ba 0022     		movs	r2, #0
 5227 00bc 1A84     		strh	r2, [r3, #32]	@ movhi
 5228              	.L347:
 5229              		.loc 1 3582 0
 5230 00be 00BF     		nop
 5231 00c0 1837     		adds	r7, r7, #24
 5232              	.LCFI205:
 5233              		.cfi_def_cfa_offset 8
 5234 00c2 BD46     		mov	sp, r7
 5235              	.LCFI206:
 5236              		.cfi_def_cfa_register 13
 5237              		@ sp needed
 5238 00c4 80BD     		pop	{r7, pc}
 5239              	.L349:
 5240 00c6 00BF     		.align	2
 5241              	.L348:
 5242 00c8 00000000 		.word	pxCurrentTCB
 5243              		.cfi_endproc
 5244              	.LFE44:
 5246              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 5247              		.align	1
ARM GAS  /tmp/ccIHW9zM.s 			page 159


 5248              		.syntax unified
 5249              		.thumb
 5250              		.thumb_func
 5251              		.fpu fpv4-sp-d16
 5253              	prvListTasksWithinSingleList:
 5254              	.LFB45:
3583:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3584:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3585:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3586:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3588:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3589:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3590:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5255              		.loc 1 3590 0
 5256              		.cfi_startproc
 5257              		@ args = 0, pretend = 0, frame = 40
 5258              		@ frame_needed = 1, uses_anonymous_args = 0
 5259 0000 80B5     		push	{r7, lr}
 5260              	.LCFI207:
 5261              		.cfi_def_cfa_offset 8
 5262              		.cfi_offset 7, -8
 5263              		.cfi_offset 14, -4
 5264 0002 8AB0     		sub	sp, sp, #40
 5265              	.LCFI208:
 5266              		.cfi_def_cfa_offset 48
 5267 0004 00AF     		add	r7, sp, #0
 5268              	.LCFI209:
 5269              		.cfi_def_cfa_register 7
 5270 0006 F860     		str	r0, [r7, #12]
 5271 0008 B960     		str	r1, [r7, #8]
 5272 000a 1346     		mov	r3, r2
 5273 000c FB71     		strb	r3, [r7, #7]
3591:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3592:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 5274              		.loc 1 3592 0
 5275 000e 0023     		movs	r3, #0
 5276 0010 7B62     		str	r3, [r7, #36]
3593:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3594:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
 5277              		.loc 1 3594 0
 5278 0012 BB68     		ldr	r3, [r7, #8]
 5279 0014 1B68     		ldr	r3, [r3]
 5280 0016 002B     		cmp	r3, #0
 5281 0018 3FD0     		beq	.L351
 5282              	.LBB196:
3595:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3596:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
 5283              		.loc 1 3596 0
 5284 001a BB68     		ldr	r3, [r7, #8]
 5285 001c 3B62     		str	r3, [r7, #32]
 5286 001e 3B6A     		ldr	r3, [r7, #32]
 5287 0020 5B68     		ldr	r3, [r3, #4]
 5288 0022 5A68     		ldr	r2, [r3, #4]
 5289 0024 3B6A     		ldr	r3, [r7, #32]
 5290 0026 5A60     		str	r2, [r3, #4]
 5291 0028 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /tmp/ccIHW9zM.s 			page 160


 5292 002a 5A68     		ldr	r2, [r3, #4]
 5293 002c 3B6A     		ldr	r3, [r7, #32]
 5294 002e 0833     		adds	r3, r3, #8
 5295 0030 9A42     		cmp	r2, r3
 5296 0032 04D1     		bne	.L352
 5297              		.loc 1 3596 0 is_stmt 0 discriminator 1
 5298 0034 3B6A     		ldr	r3, [r7, #32]
 5299 0036 5B68     		ldr	r3, [r3, #4]
 5300 0038 5A68     		ldr	r2, [r3, #4]
 5301 003a 3B6A     		ldr	r3, [r7, #32]
 5302 003c 5A60     		str	r2, [r3, #4]
 5303              	.L352:
 5304              		.loc 1 3596 0 discriminator 3
 5305 003e 3B6A     		ldr	r3, [r7, #32]
 5306 0040 5B68     		ldr	r3, [r3, #4]
 5307 0042 DB68     		ldr	r3, [r3, #12]
 5308 0044 FB61     		str	r3, [r7, #28]
 5309              	.L354:
 5310              	.LBE196:
 5311              	.LBB197:
3597:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3598:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3599:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3600:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3601:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3602:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3603:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3604:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
 5312              		.loc 1 3604 0 is_stmt 1
 5313 0046 BB68     		ldr	r3, [r7, #8]
 5314 0048 BB61     		str	r3, [r7, #24]
 5315 004a BB69     		ldr	r3, [r7, #24]
 5316 004c 5B68     		ldr	r3, [r3, #4]
 5317 004e 5A68     		ldr	r2, [r3, #4]
 5318 0050 BB69     		ldr	r3, [r7, #24]
 5319 0052 5A60     		str	r2, [r3, #4]
 5320 0054 BB69     		ldr	r3, [r7, #24]
 5321 0056 5A68     		ldr	r2, [r3, #4]
 5322 0058 BB69     		ldr	r3, [r7, #24]
 5323 005a 0833     		adds	r3, r3, #8
 5324 005c 9A42     		cmp	r2, r3
 5325 005e 04D1     		bne	.L353
 5326              		.loc 1 3604 0 is_stmt 0 discriminator 1
 5327 0060 BB69     		ldr	r3, [r7, #24]
 5328 0062 5B68     		ldr	r3, [r3, #4]
 5329 0064 5A68     		ldr	r2, [r3, #4]
 5330 0066 BB69     		ldr	r3, [r7, #24]
 5331 0068 5A60     		str	r2, [r3, #4]
 5332              	.L353:
 5333              		.loc 1 3604 0 discriminator 3
 5334 006a BB69     		ldr	r3, [r7, #24]
 5335 006c 5B68     		ldr	r3, [r3, #4]
 5336 006e DB68     		ldr	r3, [r3, #12]
 5337 0070 7B61     		str	r3, [r7, #20]
 5338              	.LBE197:
3605:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 5339              		.loc 1 3605 0 is_stmt 1 discriminator 3
ARM GAS  /tmp/ccIHW9zM.s 			page 161


 5340 0072 7A6A     		ldr	r2, [r7, #36]
 5341 0074 1346     		mov	r3, r2
 5342 0076 DB00     		lsls	r3, r3, #3
 5343 0078 1344     		add	r3, r3, r2
 5344 007a 9B00     		lsls	r3, r3, #2
 5345 007c 1A46     		mov	r2, r3
 5346 007e FB68     		ldr	r3, [r7, #12]
 5347 0080 9918     		adds	r1, r3, r2
 5348 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5349 0084 0122     		movs	r2, #1
 5350 0086 7869     		ldr	r0, [r7, #20]
 5351 0088 FFF7FEFF 		bl	vTaskGetInfo
3606:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
 5352              		.loc 1 3606 0 discriminator 3
 5353 008c 7B6A     		ldr	r3, [r7, #36]
 5354 008e 0133     		adds	r3, r3, #1
 5355 0090 7B62     		str	r3, [r7, #36]
3607:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 5356              		.loc 1 3607 0 discriminator 3
 5357 0092 7A69     		ldr	r2, [r7, #20]
 5358 0094 FB69     		ldr	r3, [r7, #28]
 5359 0096 9A42     		cmp	r2, r3
 5360 0098 D5D1     		bne	.L354
 5361              	.L351:
3608:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3609:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3610:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3611:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3612:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3613:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3614:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
 5362              		.loc 1 3614 0
 5363 009a 7B6A     		ldr	r3, [r7, #36]
3615:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5364              		.loc 1 3615 0
 5365 009c 1846     		mov	r0, r3
 5366 009e 2837     		adds	r7, r7, #40
 5367              	.LCFI210:
 5368              		.cfi_def_cfa_offset 8
 5369 00a0 BD46     		mov	sp, r7
 5370              	.LCFI211:
 5371              		.cfi_def_cfa_register 13
 5372              		@ sp needed
 5373 00a2 80BD     		pop	{r7, pc}
 5374              		.cfi_endproc
 5375              	.LFE45:
 5377              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 5378              		.align	1
 5379              		.syntax unified
 5380              		.thumb
 5381              		.thumb_func
 5382              		.fpu fpv4-sp-d16
 5384              	prvTaskCheckFreeStackSpace:
 5385              	.LFB46:
3616:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3617:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3618:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccIHW9zM.s 			page 162


3619:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3621:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3623:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5386              		.loc 1 3623 0
 5387              		.cfi_startproc
 5388              		@ args = 0, pretend = 0, frame = 16
 5389              		@ frame_needed = 1, uses_anonymous_args = 0
 5390              		@ link register save eliminated.
 5391 0000 80B4     		push	{r7}
 5392              	.LCFI212:
 5393              		.cfi_def_cfa_offset 4
 5394              		.cfi_offset 7, -4
 5395 0002 85B0     		sub	sp, sp, #20
 5396              	.LCFI213:
 5397              		.cfi_def_cfa_offset 24
 5398 0004 00AF     		add	r7, sp, #0
 5399              	.LCFI214:
 5400              		.cfi_def_cfa_register 7
 5401 0006 7860     		str	r0, [r7, #4]
3624:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
 5402              		.loc 1 3624 0
 5403 0008 0023     		movs	r3, #0
 5404 000a FB60     		str	r3, [r7, #12]
3625:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 5405              		.loc 1 3626 0
 5406 000c 05E0     		b	.L357
 5407              	.L358:
3627:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
 5408              		.loc 1 3628 0
 5409 000e 7B68     		ldr	r3, [r7, #4]
 5410 0010 0133     		adds	r3, r3, #1
 5411 0012 7B60     		str	r3, [r7, #4]
3629:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
 5412              		.loc 1 3629 0
 5413 0014 FB68     		ldr	r3, [r7, #12]
 5414 0016 0133     		adds	r3, r3, #1
 5415 0018 FB60     		str	r3, [r7, #12]
 5416              	.L357:
3626:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5417              		.loc 1 3626 0
 5418 001a 7B68     		ldr	r3, [r7, #4]
 5419 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5420 001e A52B     		cmp	r3, #165
 5421 0020 F5D0     		beq	.L358
3630:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3631:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
 5422              		.loc 1 3632 0
 5423 0022 FB68     		ldr	r3, [r7, #12]
 5424 0024 9B08     		lsrs	r3, r3, #2
 5425 0026 FB60     		str	r3, [r7, #12]
3633:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3634:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
ARM GAS  /tmp/ccIHW9zM.s 			page 163


 5426              		.loc 1 3634 0
 5427 0028 FB68     		ldr	r3, [r7, #12]
 5428 002a 9BB2     		uxth	r3, r3
3635:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5429              		.loc 1 3635 0
 5430 002c 1846     		mov	r0, r3
 5431 002e 1437     		adds	r7, r7, #20
 5432              	.LCFI215:
 5433              		.cfi_def_cfa_offset 4
 5434 0030 BD46     		mov	sp, r7
 5435              	.LCFI216:
 5436              		.cfi_def_cfa_register 13
 5437              		@ sp needed
 5438 0032 5DF8047B 		ldr	r7, [sp], #4
 5439              	.LCFI217:
 5440              		.cfi_restore 7
 5441              		.cfi_def_cfa_offset 0
 5442 0036 7047     		bx	lr
 5443              		.cfi_endproc
 5444              	.LFE46:
 5446              		.section	.text.uxTaskGetStackHighWaterMark,"ax",%progbits
 5447              		.align	1
 5448              		.global	uxTaskGetStackHighWaterMark
 5449              		.syntax unified
 5450              		.thumb
 5451              		.thumb_func
 5452              		.fpu fpv4-sp-d16
 5454              	uxTaskGetStackHighWaterMark:
 5455              	.LFB47:
3636:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3637:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3638:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3639:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3640:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3641:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3643:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5456              		.loc 1 3643 0
 5457              		.cfi_startproc
 5458              		@ args = 0, pretend = 0, frame = 24
 5459              		@ frame_needed = 1, uses_anonymous_args = 0
 5460 0000 80B5     		push	{r7, lr}
 5461              	.LCFI218:
 5462              		.cfi_def_cfa_offset 8
 5463              		.cfi_offset 7, -8
 5464              		.cfi_offset 14, -4
 5465 0002 86B0     		sub	sp, sp, #24
 5466              	.LCFI219:
 5467              		.cfi_def_cfa_offset 32
 5468 0004 00AF     		add	r7, sp, #0
 5469              	.LCFI220:
 5470              		.cfi_def_cfa_register 7
 5471 0006 7860     		str	r0, [r7, #4]
3644:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3645:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3646:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3647:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 164


3648:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 5472              		.loc 1 3648 0
 5473 0008 7B68     		ldr	r3, [r7, #4]
 5474 000a 002B     		cmp	r3, #0
 5475 000c 02D1     		bne	.L361
 5476              		.loc 1 3648 0 is_stmt 0 discriminator 1
 5477 000e 094B     		ldr	r3, .L364
 5478 0010 1B68     		ldr	r3, [r3]
 5479 0012 00E0     		b	.L362
 5480              	.L361:
 5481              		.loc 1 3648 0 discriminator 2
 5482 0014 7B68     		ldr	r3, [r7, #4]
 5483              	.L362:
 5484              		.loc 1 3648 0 discriminator 4
 5485 0016 7B61     		str	r3, [r7, #20]
3649:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3650:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3651:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
 5486              		.loc 1 3652 0 is_stmt 1 discriminator 4
 5487 0018 7B69     		ldr	r3, [r7, #20]
 5488 001a 1B6B     		ldr	r3, [r3, #48]
 5489 001c 3B61     		str	r3, [r7, #16]
3653:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3654:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3655:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3656:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3657:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3658:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3659:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3660:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
 5490              		.loc 1 3660 0 discriminator 4
 5491 001e 3869     		ldr	r0, [r7, #16]
 5492 0020 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 5493 0024 0346     		mov	r3, r0
 5494 0026 FB60     		str	r3, [r7, #12]
3661:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3662:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 5495              		.loc 1 3662 0 discriminator 4
 5496 0028 FB68     		ldr	r3, [r7, #12]
3663:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5497              		.loc 1 3663 0 discriminator 4
 5498 002a 1846     		mov	r0, r3
 5499 002c 1837     		adds	r7, r7, #24
 5500              	.LCFI221:
 5501              		.cfi_def_cfa_offset 8
 5502 002e BD46     		mov	sp, r7
 5503              	.LCFI222:
 5504              		.cfi_def_cfa_register 13
 5505              		@ sp needed
 5506 0030 80BD     		pop	{r7, pc}
 5507              	.L365:
 5508 0032 00BF     		.align	2
 5509              	.L364:
 5510 0034 00000000 		.word	pxCurrentTCB
 5511              		.cfi_endproc
 5512              	.LFE47:
ARM GAS  /tmp/ccIHW9zM.s 			page 165


 5514              		.section	.text.prvDeleteTCB,"ax",%progbits
 5515              		.align	1
 5516              		.syntax unified
 5517              		.thumb
 5518              		.thumb_func
 5519              		.fpu fpv4-sp-d16
 5521              	prvDeleteTCB:
 5522              	.LFB48:
3664:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3666:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3669:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3671:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5523              		.loc 1 3671 0
 5524              		.cfi_startproc
 5525              		@ args = 0, pretend = 0, frame = 16
 5526              		@ frame_needed = 1, uses_anonymous_args = 0
 5527 0000 80B5     		push	{r7, lr}
 5528              	.LCFI223:
 5529              		.cfi_def_cfa_offset 8
 5530              		.cfi_offset 7, -8
 5531              		.cfi_offset 14, -4
 5532 0002 84B0     		sub	sp, sp, #16
 5533              	.LCFI224:
 5534              		.cfi_def_cfa_offset 24
 5535 0004 00AF     		add	r7, sp, #0
 5536              	.LCFI225:
 5537              		.cfi_def_cfa_register 7
 5538 0006 7860     		str	r0, [r7, #4]
3672:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3673:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3674:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3675:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3676:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3678:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3679:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3680:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3681:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3682:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3683:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3684:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3685:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3686:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3687:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3688:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3689:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3690:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3691:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3692:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3693:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3694:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3695:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3696:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
ARM GAS  /tmp/ccIHW9zM.s 			page 166


3697:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 5539              		.loc 1 3697 0
 5540 0008 7B68     		ldr	r3, [r7, #4]
 5541 000a 93F85930 		ldrb	r3, [r3, #89]	@ zero_extendqisi2
 5542 000e 002B     		cmp	r3, #0
 5543 0010 08D1     		bne	.L367
3698:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3699:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3700:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3701:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
 5544              		.loc 1 3701 0
 5545 0012 7B68     		ldr	r3, [r7, #4]
 5546 0014 1B6B     		ldr	r3, [r3, #48]
 5547 0016 1846     		mov	r0, r3
 5548 0018 FFF7FEFF 		bl	vPortFree
3702:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 5549              		.loc 1 3702 0
 5550 001c 7868     		ldr	r0, [r7, #4]
 5551 001e FFF7FEFF 		bl	vPortFree
3703:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3704:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3705:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3706:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3707:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3708:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3709:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3710:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3711:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3712:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3713:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3715:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3716:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3717:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3718:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3719:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5552              		.loc 1 3719 0
 5553 0022 17E0     		b	.L371
 5554              	.L367:
3704:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5555              		.loc 1 3704 0
 5556 0024 7B68     		ldr	r3, [r7, #4]
 5557 0026 93F85930 		ldrb	r3, [r3, #89]	@ zero_extendqisi2
 5558 002a 012B     		cmp	r3, #1
 5559 002c 03D1     		bne	.L369
3708:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5560              		.loc 1 3708 0
 5561 002e 7868     		ldr	r0, [r7, #4]
 5562 0030 FFF7FEFF 		bl	vPortFree
 5563              		.loc 1 3719 0
 5564 0034 0EE0     		b	.L371
 5565              	.L369:
3714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5566              		.loc 1 3714 0
 5567 0036 7B68     		ldr	r3, [r7, #4]
 5568 0038 93F85930 		ldrb	r3, [r3, #89]	@ zero_extendqisi2
 5569 003c 022B     		cmp	r3, #2
ARM GAS  /tmp/ccIHW9zM.s 			page 167


 5570 003e 09D0     		beq	.L371
 5571              	.LBB198:
 5572              	.LBB199:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5573              		.loc 2 195 0 discriminator 1
 5574              		.syntax unified
 5575              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5576 0040 4FF05003 			mov r3, #80												
 5577 0044 83F31188 		msr basepri, r3											
 5578 0048 BFF36F8F 		isb														
 5579 004c BFF34F8F 		dsb														
 5580              	
 5581              	@ 0 "" 2
 5582              		.thumb
 5583              		.syntax unified
 5584 0050 FB60     		str	r3, [r7, #12]
 5585              	.L370:
 5586              	.LBE199:
 5587              	.LBE198:
3714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5588              		.loc 1 3714 0 discriminator 1
 5589 0052 FEE7     		b	.L370
 5590              	.L371:
 5591              		.loc 1 3719 0
 5592 0054 00BF     		nop
 5593 0056 1037     		adds	r7, r7, #16
 5594              	.LCFI226:
 5595              		.cfi_def_cfa_offset 8
 5596 0058 BD46     		mov	sp, r7
 5597              	.LCFI227:
 5598              		.cfi_def_cfa_register 13
 5599              		@ sp needed
 5600 005a 80BD     		pop	{r7, pc}
 5601              		.cfi_endproc
 5602              	.LFE48:
 5604              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 5605              		.align	1
 5606              		.syntax unified
 5607              		.thumb
 5608              		.thumb_func
 5609              		.fpu fpv4-sp-d16
 5611              	prvResetNextTaskUnblockTime:
 5612              	.LFB49:
3720:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3721:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3722:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3723:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3724:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3725:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 5613              		.loc 1 3725 0
 5614              		.cfi_startproc
 5615              		@ args = 0, pretend = 0, frame = 8
 5616              		@ frame_needed = 1, uses_anonymous_args = 0
 5617              		@ link register save eliminated.
 5618 0000 80B4     		push	{r7}
 5619              	.LCFI228:
 5620              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccIHW9zM.s 			page 168


 5621              		.cfi_offset 7, -4
 5622 0002 83B0     		sub	sp, sp, #12
 5623              	.LCFI229:
 5624              		.cfi_def_cfa_offset 16
 5625 0004 00AF     		add	r7, sp, #0
 5626              	.LCFI230:
 5627              		.cfi_def_cfa_register 7
3726:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
3727:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3728:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 5628              		.loc 1 3728 0
 5629 0006 0F4B     		ldr	r3, .L378
 5630 0008 1B68     		ldr	r3, [r3]
 5631 000a 1B68     		ldr	r3, [r3]
 5632 000c 002B     		cmp	r3, #0
 5633 000e 01D1     		bne	.L373
 5634              		.loc 1 3728 0 is_stmt 0 discriminator 1
 5635 0010 0123     		movs	r3, #1
 5636 0012 00E0     		b	.L374
 5637              	.L373:
 5638              		.loc 1 3728 0 discriminator 2
 5639 0014 0023     		movs	r3, #0
 5640              	.L374:
 5641              		.loc 1 3728 0 discriminator 4
 5642 0016 002B     		cmp	r3, #0
 5643 0018 04D0     		beq	.L375
3729:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3730:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3731:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3732:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3733:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3734:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 5644              		.loc 1 3734 0 is_stmt 1
 5645 001a 0B4B     		ldr	r3, .L378+4
 5646 001c 4FF0FF32 		mov	r2, #-1
 5647 0020 1A60     		str	r2, [r3]
3735:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3736:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3737:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3738:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3739:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3740:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3741:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3742:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
3743:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3744:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3745:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5648              		.loc 1 3745 0
 5649 0022 08E0     		b	.L377
 5650              	.L375:
3742:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 5651              		.loc 1 3742 0
 5652 0024 074B     		ldr	r3, .L378
 5653 0026 1B68     		ldr	r3, [r3]
 5654 0028 DB68     		ldr	r3, [r3, #12]
 5655 002a DB68     		ldr	r3, [r3, #12]
 5656 002c 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/ccIHW9zM.s 			page 169


3743:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5657              		.loc 1 3743 0
 5658 002e 7B68     		ldr	r3, [r7, #4]
 5659 0030 5B68     		ldr	r3, [r3, #4]
 5660 0032 054A     		ldr	r2, .L378+4
 5661 0034 1360     		str	r3, [r2]
 5662              	.L377:
 5663              		.loc 1 3745 0
 5664 0036 00BF     		nop
 5665 0038 0C37     		adds	r7, r7, #12
 5666              	.LCFI231:
 5667              		.cfi_def_cfa_offset 4
 5668 003a BD46     		mov	sp, r7
 5669              	.LCFI232:
 5670              		.cfi_def_cfa_register 13
 5671              		@ sp needed
 5672 003c 5DF8047B 		ldr	r7, [sp], #4
 5673              	.LCFI233:
 5674              		.cfi_restore 7
 5675              		.cfi_def_cfa_offset 0
 5676 0040 7047     		bx	lr
 5677              	.L379:
 5678 0042 00BF     		.align	2
 5679              	.L378:
 5680 0044 00000000 		.word	pxDelayedTaskList
 5681 0048 00000000 		.word	xNextTaskUnblockTime
 5682              		.cfi_endproc
 5683              	.LFE49:
 5685              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 5686              		.align	1
 5687              		.global	xTaskGetCurrentTaskHandle
 5688              		.syntax unified
 5689              		.thumb
 5690              		.thumb_func
 5691              		.fpu fpv4-sp-d16
 5693              	xTaskGetCurrentTaskHandle:
 5694              	.LFB50:
3746:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3747:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3749:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3751:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5695              		.loc 1 3751 0
 5696              		.cfi_startproc
 5697              		@ args = 0, pretend = 0, frame = 8
 5698              		@ frame_needed = 1, uses_anonymous_args = 0
 5699              		@ link register save eliminated.
 5700 0000 80B4     		push	{r7}
 5701              	.LCFI234:
 5702              		.cfi_def_cfa_offset 4
 5703              		.cfi_offset 7, -4
 5704 0002 83B0     		sub	sp, sp, #12
 5705              	.LCFI235:
 5706              		.cfi_def_cfa_offset 16
 5707 0004 00AF     		add	r7, sp, #0
 5708              	.LCFI236:
ARM GAS  /tmp/ccIHW9zM.s 			page 170


 5709              		.cfi_def_cfa_register 7
3752:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3753:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3755:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3756:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3757:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
 5710              		.loc 1 3757 0
 5711 0006 054B     		ldr	r3, .L382
 5712 0008 1B68     		ldr	r3, [r3]
 5713 000a 7B60     		str	r3, [r7, #4]
3758:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3759:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5714              		.loc 1 3759 0
 5715 000c 7B68     		ldr	r3, [r7, #4]
3760:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5716              		.loc 1 3760 0
 5717 000e 1846     		mov	r0, r3
 5718 0010 0C37     		adds	r7, r7, #12
 5719              	.LCFI237:
 5720              		.cfi_def_cfa_offset 4
 5721 0012 BD46     		mov	sp, r7
 5722              	.LCFI238:
 5723              		.cfi_def_cfa_register 13
 5724              		@ sp needed
 5725 0014 5DF8047B 		ldr	r7, [sp], #4
 5726              	.LCFI239:
 5727              		.cfi_restore 7
 5728              		.cfi_def_cfa_offset 0
 5729 0018 7047     		bx	lr
 5730              	.L383:
 5731 001a 00BF     		.align	2
 5732              	.L382:
 5733 001c 00000000 		.word	pxCurrentTCB
 5734              		.cfi_endproc
 5735              	.LFE50:
 5737              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 5738              		.align	1
 5739              		.global	xTaskGetSchedulerState
 5740              		.syntax unified
 5741              		.thumb
 5742              		.thumb_func
 5743              		.fpu fpv4-sp-d16
 5745              	xTaskGetSchedulerState:
 5746              	.LFB51:
3761:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3762:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3763:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3765:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3766:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3768:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5747              		.loc 1 3768 0
 5748              		.cfi_startproc
 5749              		@ args = 0, pretend = 0, frame = 8
 5750              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccIHW9zM.s 			page 171


 5751              		@ link register save eliminated.
 5752 0000 80B4     		push	{r7}
 5753              	.LCFI240:
 5754              		.cfi_def_cfa_offset 4
 5755              		.cfi_offset 7, -4
 5756 0002 83B0     		sub	sp, sp, #12
 5757              	.LCFI241:
 5758              		.cfi_def_cfa_offset 16
 5759 0004 00AF     		add	r7, sp, #0
 5760              	.LCFI242:
 5761              		.cfi_def_cfa_register 7
3769:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3770:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
 5762              		.loc 1 3771 0
 5763 0006 0B4B     		ldr	r3, .L389
 5764 0008 1B68     		ldr	r3, [r3]
 5765 000a 002B     		cmp	r3, #0
 5766 000c 02D1     		bne	.L385
3772:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
 5767              		.loc 1 3773 0
 5768 000e 0123     		movs	r3, #1
 5769 0010 7B60     		str	r3, [r7, #4]
 5770 0012 08E0     		b	.L386
 5771              	.L385:
3774:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3775:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3776:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3777:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 5772              		.loc 1 3777 0
 5773 0014 084B     		ldr	r3, .L389+4
 5774 0016 1B68     		ldr	r3, [r3]
 5775 0018 002B     		cmp	r3, #0
 5776 001a 02D1     		bne	.L387
3778:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3779:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
 5777              		.loc 1 3779 0
 5778 001c 0223     		movs	r3, #2
 5779 001e 7B60     		str	r3, [r7, #4]
 5780 0020 01E0     		b	.L386
 5781              	.L387:
3780:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3781:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3782:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3783:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
 5782              		.loc 1 3783 0
 5783 0022 0023     		movs	r3, #0
 5784 0024 7B60     		str	r3, [r7, #4]
 5785              	.L386:
3784:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3785:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3787:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5786              		.loc 1 3787 0
 5787 0026 7B68     		ldr	r3, [r7, #4]
3788:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIHW9zM.s 			page 172


 5788              		.loc 1 3788 0
 5789 0028 1846     		mov	r0, r3
 5790 002a 0C37     		adds	r7, r7, #12
 5791              	.LCFI243:
 5792              		.cfi_def_cfa_offset 4
 5793 002c BD46     		mov	sp, r7
 5794              	.LCFI244:
 5795              		.cfi_def_cfa_register 13
 5796              		@ sp needed
 5797 002e 5DF8047B 		ldr	r7, [sp], #4
 5798              	.LCFI245:
 5799              		.cfi_restore 7
 5800              		.cfi_def_cfa_offset 0
 5801 0032 7047     		bx	lr
 5802              	.L390:
 5803              		.align	2
 5804              	.L389:
 5805 0034 00000000 		.word	xSchedulerRunning
 5806 0038 00000000 		.word	uxSchedulerSuspended
 5807              		.cfi_endproc
 5808              	.LFE51:
 5810              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 5811              		.align	1
 5812              		.global	xTaskPriorityInherit
 5813              		.syntax unified
 5814              		.thumb
 5815              		.thumb_func
 5816              		.fpu fpv4-sp-d16
 5818              	xTaskPriorityInherit:
 5819              	.LFB52:
3789:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3791:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3792:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3794:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3795:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3796:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5820              		.loc 1 3796 0
 5821              		.cfi_startproc
 5822              		@ args = 0, pretend = 0, frame = 16
 5823              		@ frame_needed = 1, uses_anonymous_args = 0
 5824 0000 80B5     		push	{r7, lr}
 5825              	.LCFI246:
 5826              		.cfi_def_cfa_offset 8
 5827              		.cfi_offset 7, -8
 5828              		.cfi_offset 14, -4
 5829 0002 84B0     		sub	sp, sp, #16
 5830              	.LCFI247:
 5831              		.cfi_def_cfa_offset 24
 5832 0004 00AF     		add	r7, sp, #0
 5833              	.LCFI248:
 5834              		.cfi_def_cfa_register 7
 5835 0006 7860     		str	r0, [r7, #4]
3797:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 5836              		.loc 1 3797 0
 5837 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIHW9zM.s 			page 173


 5838 000a BB60     		str	r3, [r7, #8]
3798:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 5839              		.loc 1 3798 0
 5840 000c 0023     		movs	r3, #0
 5841 000e FB60     		str	r3, [r7, #12]
3799:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3800:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3801:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3802:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3803:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 5842              		.loc 1 3803 0
 5843 0010 7B68     		ldr	r3, [r7, #4]
 5844 0012 002B     		cmp	r3, #0
 5845 0014 56D0     		beq	.L392
3804:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3806:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3807:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3808:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 5846              		.loc 1 3808 0
 5847 0016 BB68     		ldr	r3, [r7, #8]
 5848 0018 DA6A     		ldr	r2, [r3, #44]
 5849 001a 2D4B     		ldr	r3, .L401
 5850 001c 1B68     		ldr	r3, [r3]
 5851 001e DB6A     		ldr	r3, [r3, #44]
 5852 0020 9A42     		cmp	r2, r3
 5853 0022 46D2     		bcs	.L393
3809:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3810:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3811:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3812:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3813:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
 5854              		.loc 1 3813 0
 5855 0024 BB68     		ldr	r3, [r7, #8]
 5856 0026 9B69     		ldr	r3, [r3, #24]
 5857 0028 002B     		cmp	r3, #0
 5858 002a 06DB     		blt	.L394
3814:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3815:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
 5859              		.loc 1 3815 0
 5860 002c 284B     		ldr	r3, .L401
 5861 002e 1B68     		ldr	r3, [r3]
 5862 0030 DB6A     		ldr	r3, [r3, #44]
 5863 0032 C3F13802 		rsb	r2, r3, #56
 5864 0036 BB68     		ldr	r3, [r7, #8]
 5865 0038 9A61     		str	r2, [r3, #24]
 5866              	.L394:
3816:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3817:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3818:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3819:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3820:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3821:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3822:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3823:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3824:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
 5867              		.loc 1 3824 0
ARM GAS  /tmp/ccIHW9zM.s 			page 174


 5868 003a BB68     		ldr	r3, [r7, #8]
 5869 003c 5969     		ldr	r1, [r3, #20]
 5870 003e BB68     		ldr	r3, [r7, #8]
 5871 0040 DA6A     		ldr	r2, [r3, #44]
 5872 0042 1346     		mov	r3, r2
 5873 0044 9B00     		lsls	r3, r3, #2
 5874 0046 1344     		add	r3, r3, r2
 5875 0048 9B00     		lsls	r3, r3, #2
 5876 004a 224A     		ldr	r2, .L401+4
 5877 004c 1344     		add	r3, r3, r2
 5878 004e 9942     		cmp	r1, r3
 5879 0050 01D1     		bne	.L395
 5880              		.loc 1 3824 0 is_stmt 0 discriminator 1
 5881 0052 0123     		movs	r3, #1
 5882 0054 00E0     		b	.L396
 5883              	.L395:
 5884              		.loc 1 3824 0 discriminator 2
 5885 0056 0023     		movs	r3, #0
 5886              	.L396:
 5887              		.loc 1 3824 0 discriminator 4
 5888 0058 002B     		cmp	r3, #0
 5889 005a 22D0     		beq	.L397
3825:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3826:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 5890              		.loc 1 3826 0 is_stmt 1
 5891 005c BB68     		ldr	r3, [r7, #8]
 5892 005e 0433     		adds	r3, r3, #4
 5893 0060 1846     		mov	r0, r3
 5894 0062 FFF7FEFF 		bl	uxListRemove
3827:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3828:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3829:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3830:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3831:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3832:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3833:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3834:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3835:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3836:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 5895              		.loc 1 3836 0
 5896 0066 1A4B     		ldr	r3, .L401
 5897 0068 1B68     		ldr	r3, [r3]
 5898 006a DA6A     		ldr	r2, [r3, #44]
 5899 006c BB68     		ldr	r3, [r7, #8]
 5900 006e DA62     		str	r2, [r3, #44]
3837:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 5901              		.loc 1 3837 0
 5902 0070 BB68     		ldr	r3, [r7, #8]
 5903 0072 DA6A     		ldr	r2, [r3, #44]
 5904 0074 184B     		ldr	r3, .L401+8
 5905 0076 1B68     		ldr	r3, [r3]
 5906 0078 9A42     		cmp	r2, r3
 5907 007a 03D9     		bls	.L398
 5908              		.loc 1 3837 0 is_stmt 0 discriminator 1
 5909 007c BB68     		ldr	r3, [r7, #8]
 5910 007e DB6A     		ldr	r3, [r3, #44]
 5911 0080 154A     		ldr	r2, .L401+8
ARM GAS  /tmp/ccIHW9zM.s 			page 175


 5912 0082 1360     		str	r3, [r2]
 5913              	.L398:
 5914              		.loc 1 3837 0 discriminator 3
 5915 0084 BB68     		ldr	r3, [r7, #8]
 5916 0086 DA6A     		ldr	r2, [r3, #44]
 5917 0088 1346     		mov	r3, r2
 5918 008a 9B00     		lsls	r3, r3, #2
 5919 008c 1344     		add	r3, r3, r2
 5920 008e 9B00     		lsls	r3, r3, #2
 5921 0090 104A     		ldr	r2, .L401+4
 5922 0092 1A44     		add	r2, r2, r3
 5923 0094 BB68     		ldr	r3, [r7, #8]
 5924 0096 0433     		adds	r3, r3, #4
 5925 0098 1946     		mov	r1, r3
 5926 009a 1046     		mov	r0, r2
 5927 009c FFF7FEFF 		bl	vListInsertEnd
 5928 00a0 04E0     		b	.L399
 5929              	.L397:
3838:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3839:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3840:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3841:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3842:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 5930              		.loc 1 3842 0 is_stmt 1
 5931 00a2 0B4B     		ldr	r3, .L401
 5932 00a4 1B68     		ldr	r3, [r3]
 5933 00a6 DA6A     		ldr	r2, [r3, #44]
 5934 00a8 BB68     		ldr	r3, [r7, #8]
 5935 00aa DA62     		str	r2, [r3, #44]
 5936              	.L399:
3843:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3844:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3846:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3847:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3848:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5937              		.loc 1 3848 0
 5938 00ac 0123     		movs	r3, #1
 5939 00ae FB60     		str	r3, [r7, #12]
 5940 00b0 08E0     		b	.L392
 5941              	.L393:
3849:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3850:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3851:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3852:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 5942              		.loc 1 3852 0
 5943 00b2 BB68     		ldr	r3, [r7, #8]
 5944 00b4 DA6C     		ldr	r2, [r3, #76]
 5945 00b6 064B     		ldr	r3, .L401
 5946 00b8 1B68     		ldr	r3, [r3]
 5947 00ba DB6A     		ldr	r3, [r3, #44]
 5948 00bc 9A42     		cmp	r2, r3
 5949 00be 01D2     		bcs	.L392
3853:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3854:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3855:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3856:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
ARM GAS  /tmp/ccIHW9zM.s 			page 176


3857:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3858:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3859:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3860:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
3861:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 5950              		.loc 1 3861 0
 5951 00c0 0123     		movs	r3, #1
 5952 00c2 FB60     		str	r3, [r7, #12]
 5953              	.L392:
3862:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3863:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3864:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3865:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3866:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3867:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3868:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3869:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3870:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3871:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3872:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3873:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3874:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5954              		.loc 1 3874 0
 5955 00c4 FB68     		ldr	r3, [r7, #12]
3875:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5956              		.loc 1 3875 0
 5957 00c6 1846     		mov	r0, r3
 5958 00c8 1037     		adds	r7, r7, #16
 5959              	.LCFI249:
 5960              		.cfi_def_cfa_offset 8
 5961 00ca BD46     		mov	sp, r7
 5962              	.LCFI250:
 5963              		.cfi_def_cfa_register 13
 5964              		@ sp needed
 5965 00cc 80BD     		pop	{r7, pc}
 5966              	.L402:
 5967 00ce 00BF     		.align	2
 5968              	.L401:
 5969 00d0 00000000 		.word	pxCurrentTCB
 5970 00d4 00000000 		.word	pxReadyTasksLists
 5971 00d8 00000000 		.word	uxTopReadyPriority
 5972              		.cfi_endproc
 5973              	.LFE52:
 5975              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 5976              		.align	1
 5977              		.global	xTaskPriorityDisinherit
 5978              		.syntax unified
 5979              		.thumb
 5980              		.thumb_func
 5981              		.fpu fpv4-sp-d16
 5983              	xTaskPriorityDisinherit:
 5984              	.LFB53:
3876:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3878:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3880:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
ARM GAS  /tmp/ccIHW9zM.s 			page 177


3881:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3883:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5985              		.loc 1 3883 0
 5986              		.cfi_startproc
 5987              		@ args = 0, pretend = 0, frame = 24
 5988              		@ frame_needed = 1, uses_anonymous_args = 0
 5989 0000 80B5     		push	{r7, lr}
 5990              	.LCFI251:
 5991              		.cfi_def_cfa_offset 8
 5992              		.cfi_offset 7, -8
 5993              		.cfi_offset 14, -4
 5994 0002 86B0     		sub	sp, sp, #24
 5995              	.LCFI252:
 5996              		.cfi_def_cfa_offset 32
 5997 0004 00AF     		add	r7, sp, #0
 5998              	.LCFI253:
 5999              		.cfi_def_cfa_register 7
 6000 0006 7860     		str	r0, [r7, #4]
3884:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 6001              		.loc 1 3884 0
 6002 0008 7B68     		ldr	r3, [r7, #4]
 6003 000a 3B61     		str	r3, [r7, #16]
3885:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 6004              		.loc 1 3885 0
 6005 000c 0023     		movs	r3, #0
 6006 000e 7B61     		str	r3, [r7, #20]
3886:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 6007              		.loc 1 3887 0
 6008 0010 7B68     		ldr	r3, [r7, #4]
 6009 0012 002B     		cmp	r3, #0
 6010 0014 54D0     		beq	.L404
3888:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3889:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3891:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3892:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3893:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
 6011              		.loc 1 3893 0
 6012 0016 2D4B     		ldr	r3, .L411
 6013 0018 1B68     		ldr	r3, [r3]
 6014 001a 3A69     		ldr	r2, [r7, #16]
 6015 001c 9A42     		cmp	r2, r3
 6016 001e 09D0     		beq	.L405
 6017              	.LBB200:
 6018              	.LBB201:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6019              		.loc 2 195 0 discriminator 1
 6020              		.syntax unified
 6021              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6022 0020 4FF05003 			mov r3, #80												
 6023 0024 83F31188 		msr basepri, r3											
 6024 0028 BFF36F8F 		isb														
 6025 002c BFF34F8F 		dsb														
 6026              	
 6027              	@ 0 "" 2
ARM GAS  /tmp/ccIHW9zM.s 			page 178


 6028              		.thumb
 6029              		.syntax unified
 6030 0030 FB60     		str	r3, [r7, #12]
 6031              	.L406:
 6032              	.LBE201:
 6033              	.LBE200:
 6034              		.loc 1 3893 0 discriminator 1
 6035 0032 FEE7     		b	.L406
 6036              	.L405:
3894:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 6037              		.loc 1 3894 0
 6038 0034 3B69     		ldr	r3, [r7, #16]
 6039 0036 1B6D     		ldr	r3, [r3, #80]
 6040 0038 002B     		cmp	r3, #0
 6041 003a 09D1     		bne	.L407
 6042              	.LBB202:
 6043              	.LBB203:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6044              		.loc 2 195 0 discriminator 1
 6045              		.syntax unified
 6046              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6047 003c 4FF05003 			mov r3, #80												
 6048 0040 83F31188 		msr basepri, r3											
 6049 0044 BFF36F8F 		isb														
 6050 0048 BFF34F8F 		dsb														
 6051              	
 6052              	@ 0 "" 2
 6053              		.thumb
 6054              		.syntax unified
 6055 004c BB60     		str	r3, [r7, #8]
 6056              	.L408:
 6057              	.LBE203:
 6058              	.LBE202:
 6059              		.loc 1 3894 0 discriminator 2
 6060 004e FEE7     		b	.L408
 6061              	.L407:
3895:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 6062              		.loc 1 3895 0
 6063 0050 3B69     		ldr	r3, [r7, #16]
 6064 0052 1B6D     		ldr	r3, [r3, #80]
 6065 0054 5A1E     		subs	r2, r3, #1
 6066 0056 3B69     		ldr	r3, [r7, #16]
 6067 0058 1A65     		str	r2, [r3, #80]
3896:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3897:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3898:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3899:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 6068              		.loc 1 3899 0
 6069 005a 3B69     		ldr	r3, [r7, #16]
 6070 005c DA6A     		ldr	r2, [r3, #44]
 6071 005e 3B69     		ldr	r3, [r7, #16]
 6072 0060 DB6C     		ldr	r3, [r3, #76]
 6073 0062 9A42     		cmp	r2, r3
 6074 0064 2CD0     		beq	.L404
3900:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3901:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3902:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccIHW9zM.s 			page 179


 6075              		.loc 1 3902 0
 6076 0066 3B69     		ldr	r3, [r7, #16]
 6077 0068 1B6D     		ldr	r3, [r3, #80]
 6078 006a 002B     		cmp	r3, #0
 6079 006c 28D1     		bne	.L404
3903:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3904:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3905:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3906:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3907:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3908:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3909:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 6080              		.loc 1 3909 0
 6081 006e 3B69     		ldr	r3, [r7, #16]
 6082 0070 0433     		adds	r3, r3, #4
 6083 0072 1846     		mov	r0, r3
 6084 0074 FFF7FEFF 		bl	uxListRemove
3910:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3911:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3912:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3913:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3914:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3915:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3916:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3917:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3919:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3920:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3921:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 6085              		.loc 1 3921 0
 6086 0078 3B69     		ldr	r3, [r7, #16]
 6087 007a DA6C     		ldr	r2, [r3, #76]
 6088 007c 3B69     		ldr	r3, [r7, #16]
 6089 007e DA62     		str	r2, [r3, #44]
3922:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3924:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3925:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3926:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
 6090              		.loc 1 3926 0
 6091 0080 3B69     		ldr	r3, [r7, #16]
 6092 0082 DB6A     		ldr	r3, [r3, #44]
 6093 0084 C3F13802 		rsb	r2, r3, #56
 6094 0088 3B69     		ldr	r3, [r7, #16]
 6095 008a 9A61     		str	r2, [r3, #24]
3927:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6096              		.loc 1 3927 0
 6097 008c 3B69     		ldr	r3, [r7, #16]
 6098 008e DA6A     		ldr	r2, [r3, #44]
 6099 0090 0F4B     		ldr	r3, .L411+4
 6100 0092 1B68     		ldr	r3, [r3]
 6101 0094 9A42     		cmp	r2, r3
 6102 0096 03D9     		bls	.L409
 6103              		.loc 1 3927 0 is_stmt 0 discriminator 1
 6104 0098 3B69     		ldr	r3, [r7, #16]
 6105 009a DB6A     		ldr	r3, [r3, #44]
 6106 009c 0C4A     		ldr	r2, .L411+4
ARM GAS  /tmp/ccIHW9zM.s 			page 180


 6107 009e 1360     		str	r3, [r2]
 6108              	.L409:
 6109              		.loc 1 3927 0 discriminator 3
 6110 00a0 3B69     		ldr	r3, [r7, #16]
 6111 00a2 DA6A     		ldr	r2, [r3, #44]
 6112 00a4 1346     		mov	r3, r2
 6113 00a6 9B00     		lsls	r3, r3, #2
 6114 00a8 1344     		add	r3, r3, r2
 6115 00aa 9B00     		lsls	r3, r3, #2
 6116 00ac 094A     		ldr	r2, .L411+8
 6117 00ae 1A44     		add	r2, r2, r3
 6118 00b0 3B69     		ldr	r3, [r7, #16]
 6119 00b2 0433     		adds	r3, r3, #4
 6120 00b4 1946     		mov	r1, r3
 6121 00b6 1046     		mov	r0, r2
 6122 00b8 FFF7FEFF 		bl	vListInsertEnd
3928:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3929:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3930:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3931:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3932:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3933:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3934:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3935:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3936:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3937:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 6123              		.loc 1 3937 0 is_stmt 1 discriminator 3
 6124 00bc 0123     		movs	r3, #1
 6125 00be 7B61     		str	r3, [r7, #20]
 6126              	.L404:
3938:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3939:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3940:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3941:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3943:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3944:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3945:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3946:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3948:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3949:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3950:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3951:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3952:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3953:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3954:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6127              		.loc 1 3954 0
 6128 00c0 7B69     		ldr	r3, [r7, #20]
3955:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6129              		.loc 1 3955 0
 6130 00c2 1846     		mov	r0, r3
 6131 00c4 1837     		adds	r7, r7, #24
 6132              	.LCFI254:
 6133              		.cfi_def_cfa_offset 8
 6134 00c6 BD46     		mov	sp, r7
 6135              	.LCFI255:
ARM GAS  /tmp/ccIHW9zM.s 			page 181


 6136              		.cfi_def_cfa_register 13
 6137              		@ sp needed
 6138 00c8 80BD     		pop	{r7, pc}
 6139              	.L412:
 6140 00ca 00BF     		.align	2
 6141              	.L411:
 6142 00cc 00000000 		.word	pxCurrentTCB
 6143 00d0 00000000 		.word	uxTopReadyPriority
 6144 00d4 00000000 		.word	pxReadyTasksLists
 6145              		.cfi_endproc
 6146              	.LFE53:
 6148              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 6149              		.align	1
 6150              		.global	vTaskPriorityDisinheritAfterTimeout
 6151              		.syntax unified
 6152              		.thumb
 6153              		.thumb_func
 6154              		.fpu fpv4-sp-d16
 6156              	vTaskPriorityDisinheritAfterTimeout:
 6157              	.LFB54:
3956:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3957:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3958:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3959:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3960:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3961:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3962:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3963:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6158              		.loc 1 3963 0
 6159              		.cfi_startproc
 6160              		@ args = 0, pretend = 0, frame = 32
 6161              		@ frame_needed = 1, uses_anonymous_args = 0
 6162 0000 80B5     		push	{r7, lr}
 6163              	.LCFI256:
 6164              		.cfi_def_cfa_offset 8
 6165              		.cfi_offset 7, -8
 6166              		.cfi_offset 14, -4
 6167 0002 88B0     		sub	sp, sp, #32
 6168              	.LCFI257:
 6169              		.cfi_def_cfa_offset 40
 6170 0004 00AF     		add	r7, sp, #0
 6171              	.LCFI258:
 6172              		.cfi_def_cfa_register 7
 6173 0006 7860     		str	r0, [r7, #4]
 6174 0008 3960     		str	r1, [r7]
3964:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 6175              		.loc 1 3964 0
 6176 000a 7B68     		ldr	r3, [r7, #4]
 6177 000c BB61     		str	r3, [r7, #24]
3965:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3966:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 6178              		.loc 1 3966 0
 6179 000e 0123     		movs	r3, #1
 6180 0010 7B61     		str	r3, [r7, #20]
3967:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3968:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 6181              		.loc 1 3968 0
ARM GAS  /tmp/ccIHW9zM.s 			page 182


 6182 0012 7B68     		ldr	r3, [r7, #4]
 6183 0014 002B     		cmp	r3, #0
 6184 0016 6DD0     		beq	.L425
3969:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3970:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3971:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
3972:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 6185              		.loc 1 3972 0
 6186 0018 BB69     		ldr	r3, [r7, #24]
 6187 001a 1B6D     		ldr	r3, [r3, #80]
 6188 001c 002B     		cmp	r3, #0
 6189 001e 09D1     		bne	.L415
 6190              	.LBB204:
 6191              	.LBB205:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6192              		.loc 2 195 0 discriminator 1
 6193              		.syntax unified
 6194              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6195 0020 4FF05003 			mov r3, #80												
 6196 0024 83F31188 		msr basepri, r3											
 6197 0028 BFF36F8F 		isb														
 6198 002c BFF34F8F 		dsb														
 6199              	
 6200              	@ 0 "" 2
 6201              		.thumb
 6202              		.syntax unified
 6203 0030 FB60     		str	r3, [r7, #12]
 6204              	.L416:
 6205              	.LBE205:
 6206              	.LBE204:
 6207              		.loc 1 3972 0 discriminator 1
 6208 0032 FEE7     		b	.L416
 6209              	.L415:
3973:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3974:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3975:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3976:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
3977:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3978:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 6210              		.loc 1 3978 0
 6211 0034 BB69     		ldr	r3, [r7, #24]
 6212 0036 DB6C     		ldr	r3, [r3, #76]
 6213 0038 3A68     		ldr	r2, [r7]
 6214 003a 9A42     		cmp	r2, r3
 6215 003c 02D9     		bls	.L417
3979:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3980:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
 6216              		.loc 1 3980 0
 6217 003e 3B68     		ldr	r3, [r7]
 6218 0040 FB61     		str	r3, [r7, #28]
 6219 0042 02E0     		b	.L418
 6220              	.L417:
3981:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3982:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3983:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3984:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
 6221              		.loc 1 3984 0
ARM GAS  /tmp/ccIHW9zM.s 			page 183


 6222 0044 BB69     		ldr	r3, [r7, #24]
 6223 0046 DB6C     		ldr	r3, [r3, #76]
 6224 0048 FB61     		str	r3, [r7, #28]
 6225              	.L418:
3985:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3986:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3987:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
3988:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
 6226              		.loc 1 3988 0
 6227 004a BB69     		ldr	r3, [r7, #24]
 6228 004c DB6A     		ldr	r3, [r3, #44]
 6229 004e FA69     		ldr	r2, [r7, #28]
 6230 0050 9A42     		cmp	r2, r3
 6231 0052 4FD0     		beq	.L425
3989:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3990:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3991:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3992:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3993:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
3994:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 6232              		.loc 1 3994 0
 6233 0054 BB69     		ldr	r3, [r7, #24]
 6234 0056 1B6D     		ldr	r3, [r3, #80]
 6235 0058 7A69     		ldr	r2, [r7, #20]
 6236 005a 9A42     		cmp	r2, r3
 6237 005c 4AD1     		bne	.L425
3995:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3996:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
3997:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
3998:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
3999:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
 6238              		.loc 1 3999 0
 6239 005e 274B     		ldr	r3, .L426
 6240 0060 1B68     		ldr	r3, [r3]
 6241 0062 BA69     		ldr	r2, [r7, #24]
 6242 0064 9A42     		cmp	r2, r3
 6243 0066 09D1     		bne	.L419
 6244              	.LBB206:
 6245              	.LBB207:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6246              		.loc 2 195 0 discriminator 1
 6247              		.syntax unified
 6248              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6249 0068 4FF05003 			mov r3, #80												
 6250 006c 83F31188 		msr basepri, r3											
 6251 0070 BFF36F8F 		isb														
 6252 0074 BFF34F8F 		dsb														
 6253              	
 6254              	@ 0 "" 2
 6255              		.thumb
 6256              		.syntax unified
 6257 0078 BB60     		str	r3, [r7, #8]
 6258              	.L420:
 6259              	.LBE207:
 6260              	.LBE206:
 6261              		.loc 1 3999 0 discriminator 2
 6262 007a FEE7     		b	.L420
ARM GAS  /tmp/ccIHW9zM.s 			page 184


 6263              	.L419:
4000:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4002:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4003:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4004:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4005:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 6264              		.loc 1 4005 0
 6265 007c BB69     		ldr	r3, [r7, #24]
 6266 007e DB6A     		ldr	r3, [r3, #44]
 6267 0080 3B61     		str	r3, [r7, #16]
4006:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 6268              		.loc 1 4006 0
 6269 0082 BB69     		ldr	r3, [r7, #24]
 6270 0084 FA69     		ldr	r2, [r7, #28]
 6271 0086 DA62     		str	r2, [r3, #44]
4007:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4008:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4009:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4010:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
 6272              		.loc 1 4010 0
 6273 0088 BB69     		ldr	r3, [r7, #24]
 6274 008a 9B69     		ldr	r3, [r3, #24]
 6275 008c 002B     		cmp	r3, #0
 6276 008e 04DB     		blt	.L421
4011:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4012:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
 6277              		.loc 1 4012 0
 6278 0090 FB69     		ldr	r3, [r7, #28]
 6279 0092 C3F13802 		rsb	r2, r3, #56
 6280 0096 BB69     		ldr	r3, [r7, #24]
 6281 0098 9A61     		str	r2, [r3, #24]
 6282              	.L421:
4013:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4014:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4015:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4016:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4017:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4018:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4020:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4021:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4022:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4023:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4024:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4025:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
 6283              		.loc 1 4025 0
 6284 009a BB69     		ldr	r3, [r7, #24]
 6285 009c 5969     		ldr	r1, [r3, #20]
 6286 009e 3A69     		ldr	r2, [r7, #16]
 6287 00a0 1346     		mov	r3, r2
 6288 00a2 9B00     		lsls	r3, r3, #2
 6289 00a4 1344     		add	r3, r3, r2
 6290 00a6 9B00     		lsls	r3, r3, #2
 6291 00a8 154A     		ldr	r2, .L426+4
 6292 00aa 1344     		add	r3, r3, r2
 6293 00ac 9942     		cmp	r1, r3
ARM GAS  /tmp/ccIHW9zM.s 			page 185


 6294 00ae 01D1     		bne	.L422
 6295              		.loc 1 4025 0 is_stmt 0 discriminator 1
 6296 00b0 0123     		movs	r3, #1
 6297 00b2 00E0     		b	.L423
 6298              	.L422:
 6299              		.loc 1 4025 0 discriminator 2
 6300 00b4 0023     		movs	r3, #0
 6301              	.L423:
 6302              		.loc 1 4025 0 discriminator 4
 6303 00b6 002B     		cmp	r3, #0
 6304 00b8 1CD0     		beq	.L425
4026:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4027:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 6305              		.loc 1 4027 0 is_stmt 1
 6306 00ba BB69     		ldr	r3, [r7, #24]
 6307 00bc 0433     		adds	r3, r3, #4
 6308 00be 1846     		mov	r0, r3
 6309 00c0 FFF7FEFF 		bl	uxListRemove
4028:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4029:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4030:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4031:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4032:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4033:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4034:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4035:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
 6310              		.loc 1 4036 0
 6311 00c4 BB69     		ldr	r3, [r7, #24]
 6312 00c6 DA6A     		ldr	r2, [r3, #44]
 6313 00c8 0E4B     		ldr	r3, .L426+8
 6314 00ca 1B68     		ldr	r3, [r3]
 6315 00cc 9A42     		cmp	r2, r3
 6316 00ce 03D9     		bls	.L424
 6317              		.loc 1 4036 0 is_stmt 0 discriminator 1
 6318 00d0 BB69     		ldr	r3, [r7, #24]
 6319 00d2 DB6A     		ldr	r3, [r3, #44]
 6320 00d4 0B4A     		ldr	r2, .L426+8
 6321 00d6 1360     		str	r3, [r2]
 6322              	.L424:
 6323              		.loc 1 4036 0 discriminator 3
 6324 00d8 BB69     		ldr	r3, [r7, #24]
 6325 00da DA6A     		ldr	r2, [r3, #44]
 6326 00dc 1346     		mov	r3, r2
 6327 00de 9B00     		lsls	r3, r3, #2
 6328 00e0 1344     		add	r3, r3, r2
 6329 00e2 9B00     		lsls	r3, r3, #2
 6330 00e4 064A     		ldr	r2, .L426+4
 6331 00e6 1A44     		add	r2, r2, r3
 6332 00e8 BB69     		ldr	r3, [r7, #24]
 6333 00ea 0433     		adds	r3, r3, #4
 6334 00ec 1946     		mov	r1, r3
 6335 00ee 1046     		mov	r0, r2
 6336 00f0 FFF7FEFF 		bl	vListInsertEnd
 6337              	.L425:
4037:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4038:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccIHW9zM.s 			page 186


4039:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4040:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4041:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4042:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4043:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4044:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4046:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4047:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4048:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4049:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4050:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4051:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4052:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4053:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4054:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4055:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4056:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4057:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6338              		.loc 1 4057 0 is_stmt 1
 6339 00f4 00BF     		nop
 6340 00f6 2037     		adds	r7, r7, #32
 6341              	.LCFI259:
 6342              		.cfi_def_cfa_offset 8
 6343 00f8 BD46     		mov	sp, r7
 6344              	.LCFI260:
 6345              		.cfi_def_cfa_register 13
 6346              		@ sp needed
 6347 00fa 80BD     		pop	{r7, pc}
 6348              	.L427:
 6349              		.align	2
 6350              	.L426:
 6351 00fc 00000000 		.word	pxCurrentTCB
 6352 0100 00000000 		.word	pxReadyTasksLists
 6353 0104 00000000 		.word	uxTopReadyPriority
 6354              		.cfi_endproc
 6355              	.LFE54:
 6357              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 6358              		.align	1
 6359              		.global	uxTaskResetEventItemValue
 6360              		.syntax unified
 6361              		.thumb
 6362              		.thumb_func
 6363              		.fpu fpv4-sp-d16
 6365              	uxTaskResetEventItemValue:
 6366              	.LFB55:
4058:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4059:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4060:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4061:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4062:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4063:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4064:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4065:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4066:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4067:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4068:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
ARM GAS  /tmp/ccIHW9zM.s 			page 187


4069:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4070:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4071:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4072:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4073:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4074:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4075:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4076:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4077:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4078:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4079:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4080:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4081:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4082:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4083:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4084:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4085:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4086:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4087:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4088:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4089:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4090:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4091:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4092:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4093:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4095:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4096:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4097:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4098:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4099:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4100:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4101:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4103:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4104:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4105:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4106:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4107:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4108:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4109:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4110:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4111:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4112:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4113:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4114:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4115:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4116:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4117:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4118:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4119:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4120:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4121:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4122:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4123:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4124:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4125:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
ARM GAS  /tmp/ccIHW9zM.s 			page 188


4126:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4127:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4128:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4129:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4130:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4131:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4132:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4133:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4134:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4135:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4136:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4137:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4138:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4139:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4140:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4142:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4143:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4144:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4145:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4146:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4147:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4148:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4149:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4150:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4152:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4153:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4154:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4155:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4156:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4157:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4158:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4160:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4161:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4162:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4163:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4164:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4165:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4166:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4167:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4168:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4169:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4170:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4171:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4172:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4173:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4174:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4175:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4176:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4177:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4178:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4179:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4180:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4181:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4182:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 189


4183:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4185:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4186:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4188:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4189:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4190:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4191:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4192:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4193:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4194:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4197:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4198:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4199:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4200:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4201:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4202:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4203:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4205:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4206:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4207:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4208:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4210:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4213:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4214:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4216:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4217:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4218:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4219:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4220:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4221:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4222:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4224:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4225:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4226:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4227:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4228:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4229:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4230:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4231:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4232:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4233:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4234:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4235:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4236:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4237:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4238:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4239:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccIHW9zM.s 			page 190


4240:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4241:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4242:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4243:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4244:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4245:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4246:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4247:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4248:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4249:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4250:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4252:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4253:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4254:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4255:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4256:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4257:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4258:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4259:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4260:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4261:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4262:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4264:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4265:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4266:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4267:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4268:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4269:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4270:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4271:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4272:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4273:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4274:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4275:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4276:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4277:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4278:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4279:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4280:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4281:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4282:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4283:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4284:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4285:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4286:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4287:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4288:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4289:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4290:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4291:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4292:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4293:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4294:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4295:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4296:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
ARM GAS  /tmp/ccIHW9zM.s 			page 191


4297:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4298:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4299:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4301:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4302:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4303:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4304:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4305:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4306:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4307:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4308:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4309:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4310:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4311:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4312:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4313:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4314:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4315:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4316:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4317:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4318:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4320:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4321:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4322:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4323:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4324:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4325:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4326:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4327:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4328:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4329:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4330:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4331:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4332:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4333:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4334:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4335:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4336:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4337:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4338:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4339:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4340:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4341:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4342:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4343:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4344:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4345:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4346:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4347:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4348:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4349:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4350:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4351:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4352:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4353:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccIHW9zM.s 			page 192


4354:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4355:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4356:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4357:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4359:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4361:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4362:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4364:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4365:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4366:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4367:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4368:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4369:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4370:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4371:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4374:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4377:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 6367              		.loc 1 4377 0
 6368              		.cfi_startproc
 6369              		@ args = 0, pretend = 0, frame = 8
 6370              		@ frame_needed = 1, uses_anonymous_args = 0
 6371              		@ link register save eliminated.
 6372 0000 80B4     		push	{r7}
 6373              	.LCFI261:
 6374              		.cfi_def_cfa_offset 4
 6375              		.cfi_offset 7, -4
 6376 0002 83B0     		sub	sp, sp, #12
 6377              	.LCFI262:
 6378              		.cfi_def_cfa_offset 16
 6379 0004 00AF     		add	r7, sp, #0
 6380              	.LCFI263:
 6381              		.cfi_def_cfa_register 7
4378:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4379:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4380:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
 6382              		.loc 1 4380 0
 6383 0006 094B     		ldr	r3, .L430
 6384 0008 1B68     		ldr	r3, [r3]
 6385 000a 9B69     		ldr	r3, [r3, #24]
 6386 000c 7B60     		str	r3, [r7, #4]
4381:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4382:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4383:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4384:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
 6387              		.loc 1 4384 0
 6388 000e 074B     		ldr	r3, .L430
 6389 0010 1B68     		ldr	r3, [r3]
 6390 0012 DA6A     		ldr	r2, [r3, #44]
 6391 0014 054B     		ldr	r3, .L430
 6392 0016 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccIHW9zM.s 			page 193


 6393 0018 C2F13802 		rsb	r2, r2, #56
 6394 001c 9A61     		str	r2, [r3, #24]
4385:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4386:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
 6395              		.loc 1 4386 0
 6396 001e 7B68     		ldr	r3, [r7, #4]
4387:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 6397              		.loc 1 4387 0
 6398 0020 1846     		mov	r0, r3
 6399 0022 0C37     		adds	r7, r7, #12
 6400              	.LCFI264:
 6401              		.cfi_def_cfa_offset 4
 6402 0024 BD46     		mov	sp, r7
 6403              	.LCFI265:
 6404              		.cfi_def_cfa_register 13
 6405              		@ sp needed
 6406 0026 5DF8047B 		ldr	r7, [sp], #4
 6407              	.LCFI266:
 6408              		.cfi_restore 7
 6409              		.cfi_def_cfa_offset 0
 6410 002a 7047     		bx	lr
 6411              	.L431:
 6412              		.align	2
 6413              	.L430:
 6414 002c 00000000 		.word	pxCurrentTCB
 6415              		.cfi_endproc
 6416              	.LFE55:
 6418              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 6419              		.align	1
 6420              		.global	pvTaskIncrementMutexHeldCount
 6421              		.syntax unified
 6422              		.thumb
 6423              		.thumb_func
 6424              		.fpu fpv4-sp-d16
 6426              	pvTaskIncrementMutexHeldCount:
 6427              	.LFB56:
4388:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4389:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4390:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4391:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4392:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4393:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6428              		.loc 1 4393 0
 6429              		.cfi_startproc
 6430              		@ args = 0, pretend = 0, frame = 0
 6431              		@ frame_needed = 1, uses_anonymous_args = 0
 6432              		@ link register save eliminated.
 6433 0000 80B4     		push	{r7}
 6434              	.LCFI267:
 6435              		.cfi_def_cfa_offset 4
 6436              		.cfi_offset 7, -4
 6437 0002 00AF     		add	r7, sp, #0
 6438              	.LCFI268:
 6439              		.cfi_def_cfa_register 7
4394:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4395:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4396:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
ARM GAS  /tmp/ccIHW9zM.s 			page 194


 6440              		.loc 1 4396 0
 6441 0004 074B     		ldr	r3, .L435
 6442 0006 1B68     		ldr	r3, [r3]
 6443 0008 002B     		cmp	r3, #0
 6444 000a 04D0     		beq	.L433
4397:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4398:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
 6445              		.loc 1 4398 0
 6446 000c 054B     		ldr	r3, .L435
 6447 000e 1B68     		ldr	r3, [r3]
 6448 0010 1A6D     		ldr	r2, [r3, #80]
 6449 0012 0132     		adds	r2, r2, #1
 6450 0014 1A65     		str	r2, [r3, #80]
 6451              	.L433:
4399:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4400:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4401:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
 6452              		.loc 1 4401 0
 6453 0016 034B     		ldr	r3, .L435
 6454 0018 1B68     		ldr	r3, [r3]
4402:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6455              		.loc 1 4402 0
 6456 001a 1846     		mov	r0, r3
 6457 001c BD46     		mov	sp, r7
 6458              	.LCFI269:
 6459              		.cfi_def_cfa_register 13
 6460              		@ sp needed
 6461 001e 5DF8047B 		ldr	r7, [sp], #4
 6462              	.LCFI270:
 6463              		.cfi_restore 7
 6464              		.cfi_def_cfa_offset 0
 6465 0022 7047     		bx	lr
 6466              	.L436:
 6467              		.align	2
 6468              	.L435:
 6469 0024 00000000 		.word	pxCurrentTCB
 6470              		.cfi_endproc
 6471              	.LFE56:
 6473              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 6474              		.align	1
 6475              		.global	ulTaskNotifyTake
 6476              		.syntax unified
 6477              		.thumb
 6478              		.thumb_func
 6479              		.fpu fpv4-sp-d16
 6481              	ulTaskNotifyTake:
 6482              	.LFB57:
4403:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4405:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4408:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4410:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6483              		.loc 1 4410 0
 6484              		.cfi_startproc
ARM GAS  /tmp/ccIHW9zM.s 			page 195


 6485              		@ args = 0, pretend = 0, frame = 16
 6486              		@ frame_needed = 1, uses_anonymous_args = 0
 6487 0000 80B5     		push	{r7, lr}
 6488              	.LCFI271:
 6489              		.cfi_def_cfa_offset 8
 6490              		.cfi_offset 7, -8
 6491              		.cfi_offset 14, -4
 6492 0002 84B0     		sub	sp, sp, #16
 6493              	.LCFI272:
 6494              		.cfi_def_cfa_offset 24
 6495 0004 00AF     		add	r7, sp, #0
 6496              	.LCFI273:
 6497              		.cfi_def_cfa_register 7
 6498 0006 7860     		str	r0, [r7, #4]
 6499 0008 3960     		str	r1, [r7]
4411:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4412:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4413:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 6500              		.loc 1 4413 0
 6501 000a FFF7FEFF 		bl	vPortEnterCritical
4414:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4415:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4416:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 6502              		.loc 1 4416 0
 6503 000e 1E4B     		ldr	r3, .L443
 6504 0010 1B68     		ldr	r3, [r3]
 6505 0012 5B6D     		ldr	r3, [r3, #84]
 6506 0014 002B     		cmp	r3, #0
 6507 0016 13D1     		bne	.L438
4417:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4418:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4419:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 6508              		.loc 1 4419 0
 6509 0018 1B4B     		ldr	r3, .L443
 6510 001a 1B68     		ldr	r3, [r3]
 6511 001c 0122     		movs	r2, #1
 6512 001e 83F85820 		strb	r2, [r3, #88]
4420:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 6513              		.loc 1 4421 0
 6514 0022 3B68     		ldr	r3, [r7]
 6515 0024 002B     		cmp	r3, #0
 6516 0026 0BD0     		beq	.L438
4422:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4423:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 6517              		.loc 1 4423 0
 6518 0028 0121     		movs	r1, #1
 6519 002a 3868     		ldr	r0, [r7]
 6520 002c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4424:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4425:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4427:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4428:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4429:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4430:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
 6521              		.loc 1 4430 0
ARM GAS  /tmp/ccIHW9zM.s 			page 196


 6522 0030 164B     		ldr	r3, .L443+4
 6523 0032 4FF08052 		mov	r2, #268435456
 6524 0036 1A60     		str	r2, [r3]
 6525              		.syntax unified
 6526              	@ 4430 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6527 0038 BFF34F8F 		dsb
 6528              	@ 0 "" 2
 6529              	@ 4430 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6530 003c BFF36F8F 		isb
 6531              	@ 0 "" 2
 6532              		.thumb
 6533              		.syntax unified
 6534              	.L438:
4431:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4432:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4433:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4434:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4435:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4436:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4437:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4438:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4439:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4440:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4441:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4442:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 6535              		.loc 1 4442 0
 6536 0040 FFF7FEFF 		bl	vPortExitCritical
4443:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 6537              		.loc 1 4444 0
 6538 0044 FFF7FEFF 		bl	vPortEnterCritical
4445:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4446:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4447:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 6539              		.loc 1 4447 0
 6540 0048 0F4B     		ldr	r3, .L443
 6541 004a 1B68     		ldr	r3, [r3]
 6542 004c 5B6D     		ldr	r3, [r3, #84]
 6543 004e FB60     		str	r3, [r7, #12]
4448:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
 6544              		.loc 1 4449 0
 6545 0050 FB68     		ldr	r3, [r7, #12]
 6546 0052 002B     		cmp	r3, #0
 6547 0054 0CD0     		beq	.L439
4450:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4451:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
 6548              		.loc 1 4451 0
 6549 0056 7B68     		ldr	r3, [r7, #4]
 6550 0058 002B     		cmp	r3, #0
 6551 005a 04D0     		beq	.L440
4452:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4453:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
 6552              		.loc 1 4453 0
 6553 005c 0A4B     		ldr	r3, .L443
 6554 005e 1B68     		ldr	r3, [r3]
 6555 0060 0022     		movs	r2, #0
ARM GAS  /tmp/ccIHW9zM.s 			page 197


 6556 0062 5A65     		str	r2, [r3, #84]
 6557 0064 04E0     		b	.L439
 6558              	.L440:
4454:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4455:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4456:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4457:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
 6559              		.loc 1 4457 0
 6560 0066 084B     		ldr	r3, .L443
 6561 0068 1B68     		ldr	r3, [r3]
 6562 006a FA68     		ldr	r2, [r7, #12]
 6563 006c 013A     		subs	r2, r2, #1
 6564 006e 5A65     		str	r2, [r3, #84]
 6565              	.L439:
4458:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4459:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4460:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4461:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4462:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4463:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4464:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 6566              		.loc 1 4465 0
 6567 0070 054B     		ldr	r3, .L443
 6568 0072 1B68     		ldr	r3, [r3]
 6569 0074 0022     		movs	r2, #0
 6570 0076 83F85820 		strb	r2, [r3, #88]
4466:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4467:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 6571              		.loc 1 4467 0
 6572 007a FFF7FEFF 		bl	vPortExitCritical
4468:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4469:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
 6573              		.loc 1 4469 0
 6574 007e FB68     		ldr	r3, [r7, #12]
4470:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6575              		.loc 1 4470 0
 6576 0080 1846     		mov	r0, r3
 6577 0082 1037     		adds	r7, r7, #16
 6578              	.LCFI274:
 6579              		.cfi_def_cfa_offset 8
 6580 0084 BD46     		mov	sp, r7
 6581              	.LCFI275:
 6582              		.cfi_def_cfa_register 13
 6583              		@ sp needed
 6584 0086 80BD     		pop	{r7, pc}
 6585              	.L444:
 6586              		.align	2
 6587              	.L443:
 6588 0088 00000000 		.word	pxCurrentTCB
 6589 008c 04ED00E0 		.word	-536810236
 6590              		.cfi_endproc
 6591              	.LFE57:
 6593              		.section	.text.xTaskNotifyWait,"ax",%progbits
 6594              		.align	1
 6595              		.global	xTaskNotifyWait
 6596              		.syntax unified
ARM GAS  /tmp/ccIHW9zM.s 			page 198


 6597              		.thumb
 6598              		.thumb_func
 6599              		.fpu fpv4-sp-d16
 6601              	xTaskNotifyWait:
 6602              	.LFB58:
4471:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4473:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4474:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4476:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4478:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6603              		.loc 1 4478 0
 6604              		.cfi_startproc
 6605              		@ args = 0, pretend = 0, frame = 24
 6606              		@ frame_needed = 1, uses_anonymous_args = 0
 6607 0000 80B5     		push	{r7, lr}
 6608              	.LCFI276:
 6609              		.cfi_def_cfa_offset 8
 6610              		.cfi_offset 7, -8
 6611              		.cfi_offset 14, -4
 6612 0002 86B0     		sub	sp, sp, #24
 6613              	.LCFI277:
 6614              		.cfi_def_cfa_offset 32
 6615 0004 00AF     		add	r7, sp, #0
 6616              	.LCFI278:
 6617              		.cfi_def_cfa_register 7
 6618 0006 F860     		str	r0, [r7, #12]
 6619 0008 B960     		str	r1, [r7, #8]
 6620 000a 7A60     		str	r2, [r7, #4]
 6621 000c 3B60     		str	r3, [r7]
4479:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4480:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 6622              		.loc 1 4481 0
 6623 000e FFF7FEFF 		bl	vPortEnterCritical
4482:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4483:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4484:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 6624              		.loc 1 4484 0
 6625 0012 264B     		ldr	r3, .L451
 6626 0014 1B68     		ldr	r3, [r3]
 6627 0016 93F85830 		ldrb	r3, [r3, #88]
 6628 001a DBB2     		uxtb	r3, r3
 6629 001c 022B     		cmp	r3, #2
 6630 001e 1AD0     		beq	.L446
4485:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4486:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4487:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4488:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4489:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
 6631              		.loc 1 4489 0
 6632 0020 224B     		ldr	r3, .L451
 6633 0022 1B68     		ldr	r3, [r3]
 6634 0024 596D     		ldr	r1, [r3, #84]
 6635 0026 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccIHW9zM.s 			page 199


 6636 0028 D243     		mvns	r2, r2
 6637 002a 0A40     		ands	r2, r2, r1
 6638 002c 5A65     		str	r2, [r3, #84]
4490:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4491:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4492:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 6639              		.loc 1 4492 0
 6640 002e 1F4B     		ldr	r3, .L451
 6641 0030 1B68     		ldr	r3, [r3]
 6642 0032 0122     		movs	r2, #1
 6643 0034 83F85820 		strb	r2, [r3, #88]
4493:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 6644              		.loc 1 4494 0
 6645 0038 3B68     		ldr	r3, [r7]
 6646 003a 002B     		cmp	r3, #0
 6647 003c 0BD0     		beq	.L446
4495:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4496:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 6648              		.loc 1 4496 0
 6649 003e 0121     		movs	r1, #1
 6650 0040 3868     		ldr	r0, [r7]
 6651 0042 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4497:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4498:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4499:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4500:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4501:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4502:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4503:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
 6652              		.loc 1 4503 0
 6653 0046 1A4B     		ldr	r3, .L451+4
 6654 0048 4FF08052 		mov	r2, #268435456
 6655 004c 1A60     		str	r2, [r3]
 6656              		.syntax unified
 6657              	@ 4503 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6658 004e BFF34F8F 		dsb
 6659              	@ 0 "" 2
 6660              	@ 4503 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6661 0052 BFF36F8F 		isb
 6662              	@ 0 "" 2
 6663              		.thumb
 6664              		.syntax unified
 6665              	.L446:
4504:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4505:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4506:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4507:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4508:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4509:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4510:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4511:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4512:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4513:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4514:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4515:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 6666              		.loc 1 4515 0
ARM GAS  /tmp/ccIHW9zM.s 			page 200


 6667 0056 FFF7FEFF 		bl	vPortExitCritical
4516:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 6668              		.loc 1 4517 0
 6669 005a FFF7FEFF 		bl	vPortEnterCritical
4518:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4519:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4520:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
 6670              		.loc 1 4521 0
 6671 005e 7B68     		ldr	r3, [r7, #4]
 6672 0060 002B     		cmp	r3, #0
 6673 0062 04D0     		beq	.L447
4522:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4523:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4524:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4525:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
 6674              		.loc 1 4525 0
 6675 0064 114B     		ldr	r3, .L451
 6676 0066 1B68     		ldr	r3, [r3]
 6677 0068 5A6D     		ldr	r2, [r3, #84]
 6678 006a 7B68     		ldr	r3, [r7, #4]
 6679 006c 1A60     		str	r2, [r3]
 6680              	.L447:
4526:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4527:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4528:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4529:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4530:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4531:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4532:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 6681              		.loc 1 4532 0
 6682 006e 0F4B     		ldr	r3, .L451
 6683 0070 1B68     		ldr	r3, [r3]
 6684 0072 93F85830 		ldrb	r3, [r3, #88]
 6685 0076 DBB2     		uxtb	r3, r3
 6686 0078 022B     		cmp	r3, #2
 6687 007a 02D0     		beq	.L448
4533:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4534:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4535:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 6688              		.loc 1 4535 0
 6689 007c 0023     		movs	r3, #0
 6690 007e 7B61     		str	r3, [r7, #20]
 6691 0080 08E0     		b	.L449
 6692              	.L448:
4536:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4537:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4538:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4539:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4540:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4541:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
 6693              		.loc 1 4541 0
 6694 0082 0A4B     		ldr	r3, .L451
 6695 0084 1B68     		ldr	r3, [r3]
 6696 0086 596D     		ldr	r1, [r3, #84]
 6697 0088 BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccIHW9zM.s 			page 201


 6698 008a D243     		mvns	r2, r2
 6699 008c 0A40     		ands	r2, r2, r1
 6700 008e 5A65     		str	r2, [r3, #84]
4542:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 6701              		.loc 1 4542 0
 6702 0090 0123     		movs	r3, #1
 6703 0092 7B61     		str	r3, [r7, #20]
 6704              	.L449:
4543:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4544:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 6705              		.loc 1 4545 0
 6706 0094 054B     		ldr	r3, .L451
 6707 0096 1B68     		ldr	r3, [r3]
 6708 0098 0022     		movs	r2, #0
 6709 009a 83F85820 		strb	r2, [r3, #88]
4546:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4547:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 6710              		.loc 1 4547 0
 6711 009e FFF7FEFF 		bl	vPortExitCritical
4548:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6712              		.loc 1 4549 0
 6713 00a2 7B69     		ldr	r3, [r7, #20]
4550:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6714              		.loc 1 4550 0
 6715 00a4 1846     		mov	r0, r3
 6716 00a6 1837     		adds	r7, r7, #24
 6717              	.LCFI279:
 6718              		.cfi_def_cfa_offset 8
 6719 00a8 BD46     		mov	sp, r7
 6720              	.LCFI280:
 6721              		.cfi_def_cfa_register 13
 6722              		@ sp needed
 6723 00aa 80BD     		pop	{r7, pc}
 6724              	.L452:
 6725              		.align	2
 6726              	.L451:
 6727 00ac 00000000 		.word	pxCurrentTCB
 6728 00b0 04ED00E0 		.word	-536810236
 6729              		.cfi_endproc
 6730              	.LFE58:
 6732              		.section	.text.xTaskGenericNotify,"ax",%progbits
 6733              		.align	1
 6734              		.global	xTaskGenericNotify
 6735              		.syntax unified
 6736              		.thumb
 6737              		.thumb_func
 6738              		.fpu fpv4-sp-d16
 6740              	xTaskGenericNotify:
 6741              	.LFB59:
4551:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4552:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4553:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4554:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4555:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4556:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 202


4557:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4558:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6742              		.loc 1 4558 0
 6743              		.cfi_startproc
 6744              		@ args = 0, pretend = 0, frame = 40
 6745              		@ frame_needed = 1, uses_anonymous_args = 0
 6746 0000 80B5     		push	{r7, lr}
 6747              	.LCFI281:
 6748              		.cfi_def_cfa_offset 8
 6749              		.cfi_offset 7, -8
 6750              		.cfi_offset 14, -4
 6751 0002 8AB0     		sub	sp, sp, #40
 6752              	.LCFI282:
 6753              		.cfi_def_cfa_offset 48
 6754 0004 00AF     		add	r7, sp, #0
 6755              	.LCFI283:
 6756              		.cfi_def_cfa_register 7
 6757 0006 F860     		str	r0, [r7, #12]
 6758 0008 B960     		str	r1, [r7, #8]
 6759 000a 3B60     		str	r3, [r7]
 6760 000c 1346     		mov	r3, r2
 6761 000e FB71     		strb	r3, [r7, #7]
4559:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4560:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 6762              		.loc 1 4560 0
 6763 0010 0123     		movs	r3, #1
 6764 0012 7B62     		str	r3, [r7, #36]
4561:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4562:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4563:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 6765              		.loc 1 4563 0
 6766 0014 FB68     		ldr	r3, [r7, #12]
 6767 0016 002B     		cmp	r3, #0
 6768 0018 09D1     		bne	.L454
 6769              	.LBB208:
 6770              	.LBB209:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6771              		.loc 2 195 0 discriminator 1
 6772              		.syntax unified
 6773              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6774 001a 4FF05003 			mov r3, #80												
 6775 001e 83F31188 		msr basepri, r3											
 6776 0022 BFF36F8F 		isb														
 6777 0026 BFF34F8F 		dsb														
 6778              	
 6779              	@ 0 "" 2
 6780              		.thumb
 6781              		.syntax unified
 6782 002a BB61     		str	r3, [r7, #24]
 6783              	.L455:
 6784              	.LBE209:
 6785              	.LBE208:
 6786              		.loc 1 4563 0 discriminator 1
 6787 002c FEE7     		b	.L455
 6788              	.L454:
4564:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 6789              		.loc 1 4564 0
ARM GAS  /tmp/ccIHW9zM.s 			page 203


 6790 002e FB68     		ldr	r3, [r7, #12]
 6791 0030 3B62     		str	r3, [r7, #32]
4565:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 6792              		.loc 1 4566 0
 6793 0032 FFF7FEFF 		bl	vPortEnterCritical
4567:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4568:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
 6794              		.loc 1 4568 0
 6795 0036 3B68     		ldr	r3, [r7]
 6796 0038 002B     		cmp	r3, #0
 6797 003a 03D0     		beq	.L456
4569:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4570:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 6798              		.loc 1 4570 0
 6799 003c 3B6A     		ldr	r3, [r7, #32]
 6800 003e 5A6D     		ldr	r2, [r3, #84]
 6801 0040 3B68     		ldr	r3, [r7]
 6802 0042 1A60     		str	r2, [r3]
 6803              	.L456:
4571:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4572:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 6804              		.loc 1 4573 0
 6805 0044 3B6A     		ldr	r3, [r7, #32]
 6806 0046 93F85830 		ldrb	r3, [r3, #88]
 6807 004a FB77     		strb	r3, [r7, #31]
4574:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4575:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6808              		.loc 1 4575 0
 6809 004c 3B6A     		ldr	r3, [r7, #32]
 6810 004e 0222     		movs	r2, #2
 6811 0050 83F85820 		strb	r2, [r3, #88]
4576:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4577:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 6812              		.loc 1 4577 0
 6813 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6814 0056 042B     		cmp	r3, #4
 6815 0058 27D8     		bhi	.L457
 6816 005a 01A2     		adr	r2, .L459
 6817 005c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6818              		.p2align 2
 6819              	.L459:
 6820 0060 AB000000 		.word	.L457+1
 6821 0064 75000000 		.word	.L460+1
 6822 0068 83000000 		.word	.L461+1
 6823 006c 8F000000 		.word	.L462+1
 6824 0070 97000000 		.word	.L463+1
 6825              		.p2align 1
 6826              	.L460:
4578:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4579:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4580:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 6827              		.loc 1 4580 0
 6828 0074 3B6A     		ldr	r3, [r7, #32]
 6829 0076 5A6D     		ldr	r2, [r3, #84]
 6830 0078 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccIHW9zM.s 			page 204


 6831 007a 1A43     		orrs	r2, r2, r3
 6832 007c 3B6A     		ldr	r3, [r7, #32]
 6833 007e 5A65     		str	r2, [r3, #84]
4581:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6834              		.loc 1 4581 0
 6835 0080 13E0     		b	.L457
 6836              	.L461:
4582:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4583:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4584:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 6837              		.loc 1 4584 0
 6838 0082 3B6A     		ldr	r3, [r7, #32]
 6839 0084 5B6D     		ldr	r3, [r3, #84]
 6840 0086 5A1C     		adds	r2, r3, #1
 6841 0088 3B6A     		ldr	r3, [r7, #32]
 6842 008a 5A65     		str	r2, [r3, #84]
4585:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6843              		.loc 1 4585 0
 6844 008c 0DE0     		b	.L457
 6845              	.L462:
4586:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4587:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4588:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 6846              		.loc 1 4588 0
 6847 008e 3B6A     		ldr	r3, [r7, #32]
 6848 0090 BA68     		ldr	r2, [r7, #8]
 6849 0092 5A65     		str	r2, [r3, #84]
4589:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6850              		.loc 1 4589 0
 6851 0094 09E0     		b	.L457
 6852              	.L463:
4590:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4591:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4592:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 6853              		.loc 1 4592 0
 6854 0096 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6855 0098 022B     		cmp	r3, #2
 6856 009a 03D0     		beq	.L464
4593:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4594:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 6857              		.loc 1 4594 0
 6858 009c 3B6A     		ldr	r3, [r7, #32]
 6859 009e BA68     		ldr	r2, [r7, #8]
 6860 00a0 5A65     		str	r2, [r3, #84]
4595:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4596:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4597:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4598:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4599:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4600:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4601:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6861              		.loc 1 4601 0
 6862 00a2 01E0     		b	.L471
 6863              	.L464:
4599:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6864              		.loc 1 4599 0
 6865 00a4 0023     		movs	r3, #0
ARM GAS  /tmp/ccIHW9zM.s 			page 205


 6866 00a6 7B62     		str	r3, [r7, #36]
 6867              	.L471:
 6868              		.loc 1 4601 0
 6869 00a8 00BF     		nop
 6870              	.L457:
4602:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4603:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4604:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4605:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4606:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4607:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4608:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4609:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4610:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4611:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4612:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4613:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 6871              		.loc 1 4613 0
 6872 00aa FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6873 00ac 012B     		cmp	r3, #1
 6874 00ae 39D1     		bne	.L466
4614:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4615:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 6875              		.loc 1 4615 0
 6876 00b0 3B6A     		ldr	r3, [r7, #32]
 6877 00b2 0433     		adds	r3, r3, #4
 6878 00b4 1846     		mov	r0, r3
 6879 00b6 FFF7FEFF 		bl	uxListRemove
4616:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 6880              		.loc 1 4616 0
 6881 00ba 3B6A     		ldr	r3, [r7, #32]
 6882 00bc DA6A     		ldr	r2, [r3, #44]
 6883 00be 1D4B     		ldr	r3, .L472
 6884 00c0 1B68     		ldr	r3, [r3]
 6885 00c2 9A42     		cmp	r2, r3
 6886 00c4 03D9     		bls	.L467
 6887              		.loc 1 4616 0 is_stmt 0 discriminator 1
 6888 00c6 3B6A     		ldr	r3, [r7, #32]
 6889 00c8 DB6A     		ldr	r3, [r3, #44]
 6890 00ca 1A4A     		ldr	r2, .L472
 6891 00cc 1360     		str	r3, [r2]
 6892              	.L467:
 6893              		.loc 1 4616 0 discriminator 3
 6894 00ce 3B6A     		ldr	r3, [r7, #32]
 6895 00d0 DA6A     		ldr	r2, [r3, #44]
 6896 00d2 1346     		mov	r3, r2
 6897 00d4 9B00     		lsls	r3, r3, #2
 6898 00d6 1344     		add	r3, r3, r2
 6899 00d8 9B00     		lsls	r3, r3, #2
 6900 00da 174A     		ldr	r2, .L472+4
 6901 00dc 1A44     		add	r2, r2, r3
 6902 00de 3B6A     		ldr	r3, [r7, #32]
 6903 00e0 0433     		adds	r3, r3, #4
 6904 00e2 1946     		mov	r1, r3
 6905 00e4 1046     		mov	r0, r2
 6906 00e6 FFF7FEFF 		bl	vListInsertEnd
4617:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIHW9zM.s 			page 206


4618:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4619:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 6907              		.loc 1 4619 0 is_stmt 1 discriminator 3
 6908 00ea 3B6A     		ldr	r3, [r7, #32]
 6909 00ec 9B6A     		ldr	r3, [r3, #40]
 6910 00ee 002B     		cmp	r3, #0
 6911 00f0 09D0     		beq	.L468
 6912              	.LBB210:
 6913              	.LBB211:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6914              		.loc 2 195 0 discriminator 1
 6915              		.syntax unified
 6916              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6917 00f2 4FF05003 			mov r3, #80												
 6918 00f6 83F31188 		msr basepri, r3											
 6919 00fa BFF36F8F 		isb														
 6920 00fe BFF34F8F 		dsb														
 6921              	
 6922              	@ 0 "" 2
 6923              		.thumb
 6924              		.syntax unified
 6925 0102 7B61     		str	r3, [r7, #20]
 6926              	.L469:
 6927              	.LBE211:
 6928              	.LBE210:
 6929              		.loc 1 4619 0 discriminator 2
 6930 0104 FEE7     		b	.L469
 6931              	.L468:
4620:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4621:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4622:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4623:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4624:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4625:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4626:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4627:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4628:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4629:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4630:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4631:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4632:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4633:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4634:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4635:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4636:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4637:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 6932              		.loc 1 4637 0
 6933 0106 3B6A     		ldr	r3, [r7, #32]
 6934 0108 DA6A     		ldr	r2, [r3, #44]
 6935 010a 0C4B     		ldr	r3, .L472+8
 6936 010c 1B68     		ldr	r3, [r3]
 6937 010e DB6A     		ldr	r3, [r3, #44]
 6938 0110 9A42     		cmp	r2, r3
 6939 0112 07D9     		bls	.L466
4638:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4639:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4640:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
ARM GAS  /tmp/ccIHW9zM.s 			page 207


4641:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 6940              		.loc 1 4641 0
 6941 0114 0A4B     		ldr	r3, .L472+12
 6942 0116 4FF08052 		mov	r2, #268435456
 6943 011a 1A60     		str	r2, [r3]
 6944              		.syntax unified
 6945              	@ 4641 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6946 011c BFF34F8F 		dsb
 6947              	@ 0 "" 2
 6948              	@ 4641 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 6949 0120 BFF36F8F 		isb
 6950              	@ 0 "" 2
 6951              		.thumb
 6952              		.syntax unified
 6953              	.L466:
4642:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4643:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4644:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4645:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4646:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4648:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4649:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4650:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4651:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 6954              		.loc 1 4653 0
 6955 0124 FFF7FEFF 		bl	vPortExitCritical
4654:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4655:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6956              		.loc 1 4655 0
 6957 0128 7B6A     		ldr	r3, [r7, #36]
4656:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6958              		.loc 1 4656 0
 6959 012a 1846     		mov	r0, r3
 6960 012c 2837     		adds	r7, r7, #40
 6961              	.LCFI284:
 6962              		.cfi_def_cfa_offset 8
 6963 012e BD46     		mov	sp, r7
 6964              	.LCFI285:
 6965              		.cfi_def_cfa_register 13
 6966              		@ sp needed
 6967 0130 80BD     		pop	{r7, pc}
 6968              	.L473:
 6969 0132 00BF     		.align	2
 6970              	.L472:
 6971 0134 00000000 		.word	uxTopReadyPriority
 6972 0138 00000000 		.word	pxReadyTasksLists
 6973 013c 00000000 		.word	pxCurrentTCB
 6974 0140 04ED00E0 		.word	-536810236
 6975              		.cfi_endproc
 6976              	.LFE59:
 6978              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 6979              		.align	1
 6980              		.global	xTaskGenericNotifyFromISR
 6981              		.syntax unified
ARM GAS  /tmp/ccIHW9zM.s 			page 208


 6982              		.thumb
 6983              		.thumb_func
 6984              		.fpu fpv4-sp-d16
 6986              	xTaskGenericNotifyFromISR:
 6987              	.LFB60:
4657:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4659:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4660:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4661:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4662:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4663:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4664:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6988              		.loc 1 4664 0
 6989              		.cfi_startproc
 6990              		@ args = 4, pretend = 0, frame = 56
 6991              		@ frame_needed = 1, uses_anonymous_args = 0
 6992 0000 80B5     		push	{r7, lr}
 6993              	.LCFI286:
 6994              		.cfi_def_cfa_offset 8
 6995              		.cfi_offset 7, -8
 6996              		.cfi_offset 14, -4
 6997 0002 8EB0     		sub	sp, sp, #56
 6998              	.LCFI287:
 6999              		.cfi_def_cfa_offset 64
 7000 0004 00AF     		add	r7, sp, #0
 7001              	.LCFI288:
 7002              		.cfi_def_cfa_register 7
 7003 0006 F860     		str	r0, [r7, #12]
 7004 0008 B960     		str	r1, [r7, #8]
 7005 000a 3B60     		str	r3, [r7]
 7006 000c 1346     		mov	r3, r2
 7007 000e FB71     		strb	r3, [r7, #7]
4665:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4666:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4667:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 7008              		.loc 1 4667 0
 7009 0010 0123     		movs	r3, #1
 7010 0012 7B63     		str	r3, [r7, #52]
4668:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4669:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 7011              		.loc 1 4670 0
 7012 0014 FB68     		ldr	r3, [r7, #12]
 7013 0016 002B     		cmp	r3, #0
 7014 0018 09D1     		bne	.L475
 7015              	.LBB212:
 7016              	.LBB213:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7017              		.loc 2 195 0 discriminator 1
 7018              		.syntax unified
 7019              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7020 001a 4FF05003 			mov r3, #80												
 7021 001e 83F31188 		msr basepri, r3											
 7022 0022 BFF36F8F 		isb														
 7023 0026 BFF34F8F 		dsb														
 7024              	
ARM GAS  /tmp/ccIHW9zM.s 			page 209


 7025              	@ 0 "" 2
 7026              		.thumb
 7027              		.syntax unified
 7028 002a 7B62     		str	r3, [r7, #36]
 7029              	.L476:
 7030              	.LBE213:
 7031              	.LBE212:
 7032              		.loc 1 4670 0 discriminator 1
 7033 002c FEE7     		b	.L476
 7034              	.L475:
4671:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4672:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4673:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4674:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4675:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4676:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4677:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4678:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4679:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4680:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4681:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4682:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4683:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4684:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4685:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4686:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4687:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4688:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 7035              		.loc 1 4688 0
 7036 002e FFF7FEFF 		bl	vPortValidateInterruptPriority
4689:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4690:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 7037              		.loc 1 4690 0
 7038 0032 FB68     		ldr	r3, [r7, #12]
 7039 0034 3B63     		str	r3, [r7, #48]
 7040              	.LBB214:
 7041              	.LBB215:
 211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7042              		.loc 2 211 0
 7043              		.syntax unified
 7044              	@ 211 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7045 0036 EFF31182 			mrs r2, basepri											
 7046 003a 4FF05003 		mov r3, #80												
 7047 003e 83F31188 		msr basepri, r3											
 7048 0042 BFF36F8F 		isb														
 7049 0046 BFF34F8F 		dsb														
 7050              	
 7051              	@ 0 "" 2
 7052              		.thumb
 7053              		.syntax unified
 7054 004a 3A62     		str	r2, [r7, #32]
 7055 004c FB61     		str	r3, [r7, #28]
 223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 7056              		.loc 2 223 0
 7057 004e 3B6A     		ldr	r3, [r7, #32]
 7058              	.LBE215:
 7059              	.LBE214:
ARM GAS  /tmp/ccIHW9zM.s 			page 210


4691:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 7060              		.loc 1 4692 0
 7061 0050 FB62     		str	r3, [r7, #44]
4693:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4694:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
 7062              		.loc 1 4694 0
 7063 0052 3B68     		ldr	r3, [r7]
 7064 0054 002B     		cmp	r3, #0
 7065 0056 03D0     		beq	.L478
4695:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 7066              		.loc 1 4696 0
 7067 0058 3B6B     		ldr	r3, [r7, #48]
 7068 005a 5A6D     		ldr	r2, [r3, #84]
 7069 005c 3B68     		ldr	r3, [r7]
 7070 005e 1A60     		str	r2, [r3]
 7071              	.L478:
4697:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4698:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4699:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 7072              		.loc 1 4699 0
 7073 0060 3B6B     		ldr	r3, [r7, #48]
 7074 0062 93F85830 		ldrb	r3, [r3, #88]
 7075 0066 87F82B30 		strb	r3, [r7, #43]
4700:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 7076              		.loc 1 4700 0
 7077 006a 3B6B     		ldr	r3, [r7, #48]
 7078 006c 0222     		movs	r2, #2
 7079 006e 83F85820 		strb	r2, [r3, #88]
4701:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 7080              		.loc 1 4702 0
 7081 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7082 0074 042B     		cmp	r3, #4
 7083 0076 29D8     		bhi	.L479
 7084 0078 01A2     		adr	r2, .L481
 7085 007a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7086 007e 00BF     		.p2align 2
 7087              	.L481:
 7088 0080 CD000000 		.word	.L479+1
 7089 0084 95000000 		.word	.L482+1
 7090 0088 A3000000 		.word	.L483+1
 7091 008c AF000000 		.word	.L484+1
 7092 0090 B7000000 		.word	.L485+1
 7093              		.p2align 1
 7094              	.L482:
4703:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4704:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4705:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 7095              		.loc 1 4705 0
 7096 0094 3B6B     		ldr	r3, [r7, #48]
 7097 0096 5A6D     		ldr	r2, [r3, #84]
 7098 0098 BB68     		ldr	r3, [r7, #8]
 7099 009a 1A43     		orrs	r2, r2, r3
 7100 009c 3B6B     		ldr	r3, [r7, #48]
 7101 009e 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/ccIHW9zM.s 			page 211


4706:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7102              		.loc 1 4706 0
 7103 00a0 14E0     		b	.L479
 7104              	.L483:
4707:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4708:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4709:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 7105              		.loc 1 4709 0
 7106 00a2 3B6B     		ldr	r3, [r7, #48]
 7107 00a4 5B6D     		ldr	r3, [r3, #84]
 7108 00a6 5A1C     		adds	r2, r3, #1
 7109 00a8 3B6B     		ldr	r3, [r7, #48]
 7110 00aa 5A65     		str	r2, [r3, #84]
4710:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7111              		.loc 1 4710 0
 7112 00ac 0EE0     		b	.L479
 7113              	.L484:
4711:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4713:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 7114              		.loc 1 4713 0
 7115 00ae 3B6B     		ldr	r3, [r7, #48]
 7116 00b0 BA68     		ldr	r2, [r7, #8]
 7117 00b2 5A65     		str	r2, [r3, #84]
4714:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7118              		.loc 1 4714 0
 7119 00b4 0AE0     		b	.L479
 7120              	.L485:
4715:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4716:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4717:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 7121              		.loc 1 4717 0
 7122 00b6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 7123 00ba 022B     		cmp	r3, #2
 7124 00bc 03D0     		beq	.L486
4718:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4719:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 7125              		.loc 1 4719 0
 7126 00be 3B6B     		ldr	r3, [r7, #48]
 7127 00c0 BA68     		ldr	r2, [r7, #8]
 7128 00c2 5A65     		str	r2, [r3, #84]
4720:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4721:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4722:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4723:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4724:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4725:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4726:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7129              		.loc 1 4726 0
 7130 00c4 01E0     		b	.L497
 7131              	.L486:
4724:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 7132              		.loc 1 4724 0
 7133 00c6 0023     		movs	r3, #0
 7134 00c8 7B63     		str	r3, [r7, #52]
 7135              	.L497:
 7136              		.loc 1 4726 0
ARM GAS  /tmp/ccIHW9zM.s 			page 212


 7137 00ca 00BF     		nop
 7138              	.L479:
4727:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4728:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4729:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4730:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4731:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4732:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4733:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4735:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4736:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4737:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4738:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 7139              		.loc 1 4738 0
 7140 00cc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 7141 00d0 012B     		cmp	r3, #1
 7142 00d2 46D1     		bne	.L488
4739:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4741:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 7143              		.loc 1 4741 0
 7144 00d4 3B6B     		ldr	r3, [r7, #48]
 7145 00d6 9B6A     		ldr	r3, [r3, #40]
 7146 00d8 002B     		cmp	r3, #0
 7147 00da 09D0     		beq	.L489
 7148              	.LBB216:
 7149              	.LBB217:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7150              		.loc 2 195 0 discriminator 1
 7151              		.syntax unified
 7152              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7153 00dc 4FF05003 			mov r3, #80												
 7154 00e0 83F31188 		msr basepri, r3											
 7155 00e4 BFF36F8F 		isb														
 7156 00e8 BFF34F8F 		dsb														
 7157              	
 7158              	@ 0 "" 2
 7159              		.thumb
 7160              		.syntax unified
 7161 00ec BB61     		str	r3, [r7, #24]
 7162              	.L490:
 7163              	.LBE217:
 7164              	.LBE216:
 7165              		.loc 1 4741 0 discriminator 2
 7166 00ee FEE7     		b	.L490
 7167              	.L489:
4742:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 7168              		.loc 1 4743 0
 7169 00f0 214B     		ldr	r3, .L498
 7170 00f2 1B68     		ldr	r3, [r3]
 7171 00f4 002B     		cmp	r3, #0
 7172 00f6 1DD1     		bne	.L491
4744:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4745:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 7173              		.loc 1 4745 0
ARM GAS  /tmp/ccIHW9zM.s 			page 213


 7174 00f8 3B6B     		ldr	r3, [r7, #48]
 7175 00fa 0433     		adds	r3, r3, #4
 7176 00fc 1846     		mov	r0, r3
 7177 00fe FFF7FEFF 		bl	uxListRemove
4746:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 7178              		.loc 1 4746 0
 7179 0102 3B6B     		ldr	r3, [r7, #48]
 7180 0104 DA6A     		ldr	r2, [r3, #44]
 7181 0106 1D4B     		ldr	r3, .L498+4
 7182 0108 1B68     		ldr	r3, [r3]
 7183 010a 9A42     		cmp	r2, r3
 7184 010c 03D9     		bls	.L492
 7185              		.loc 1 4746 0 is_stmt 0 discriminator 1
 7186 010e 3B6B     		ldr	r3, [r7, #48]
 7187 0110 DB6A     		ldr	r3, [r3, #44]
 7188 0112 1A4A     		ldr	r2, .L498+4
 7189 0114 1360     		str	r3, [r2]
 7190              	.L492:
 7191              		.loc 1 4746 0 discriminator 3
 7192 0116 3B6B     		ldr	r3, [r7, #48]
 7193 0118 DA6A     		ldr	r2, [r3, #44]
 7194 011a 1346     		mov	r3, r2
 7195 011c 9B00     		lsls	r3, r3, #2
 7196 011e 1344     		add	r3, r3, r2
 7197 0120 9B00     		lsls	r3, r3, #2
 7198 0122 174A     		ldr	r2, .L498+8
 7199 0124 1A44     		add	r2, r2, r3
 7200 0126 3B6B     		ldr	r3, [r7, #48]
 7201 0128 0433     		adds	r3, r3, #4
 7202 012a 1946     		mov	r1, r3
 7203 012c 1046     		mov	r0, r2
 7204 012e FFF7FEFF 		bl	vListInsertEnd
 7205 0132 05E0     		b	.L493
 7206              	.L491:
4747:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4748:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4749:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4750:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4751:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4752:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 7207              		.loc 1 4752 0 is_stmt 1
 7208 0134 3B6B     		ldr	r3, [r7, #48]
 7209 0136 1833     		adds	r3, r3, #24
 7210 0138 1946     		mov	r1, r3
 7211 013a 1248     		ldr	r0, .L498+12
 7212 013c FFF7FEFF 		bl	vListInsertEnd
 7213              	.L493:
4753:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4754:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4755:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 7214              		.loc 1 4755 0
 7215 0140 3B6B     		ldr	r3, [r7, #48]
 7216 0142 DA6A     		ldr	r2, [r3, #44]
 7217 0144 104B     		ldr	r3, .L498+16
 7218 0146 1B68     		ldr	r3, [r3]
 7219 0148 DB6A     		ldr	r3, [r3, #44]
 7220 014a 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccIHW9zM.s 			page 214


 7221 014c 09D9     		bls	.L488
4756:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4757:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4758:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4759:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
 7222              		.loc 1 4759 0
 7223 014e 3B6C     		ldr	r3, [r7, #64]
 7224 0150 002B     		cmp	r3, #0
 7225 0152 03D0     		beq	.L494
4760:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4761:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 7226              		.loc 1 4761 0
 7227 0154 3B6C     		ldr	r3, [r7, #64]
 7228 0156 0122     		movs	r2, #1
 7229 0158 1A60     		str	r2, [r3]
 7230 015a 02E0     		b	.L488
 7231              	.L494:
4762:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4763:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4764:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4765:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4766:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4767:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4768:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
 7232              		.loc 1 4768 0
 7233 015c 0B4B     		ldr	r3, .L498+20
 7234 015e 0122     		movs	r2, #1
 7235 0160 1A60     		str	r2, [r3]
 7236              	.L488:
 7237 0162 FB6A     		ldr	r3, [r7, #44]
 7238 0164 7B61     		str	r3, [r7, #20]
 7239              	.LBB218:
 7240              	.LBB219:
 7241              		.loc 2 229 0
 7242 0166 7B69     		ldr	r3, [r7, #20]
 7243              		.syntax unified
 7244              	@ 229 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7245 0168 83F31188 			msr basepri, r3	
 7246              	@ 0 "" 2
 7247              		.thumb
 7248              		.syntax unified
 7249              	.LBE219:
 7250              	.LBE218:
4769:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4770:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4771:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4772:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4773:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4774:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4775:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4776:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4777:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4778:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4779:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 7251              		.loc 1 4779 0
 7252 016c 7B6B     		ldr	r3, [r7, #52]
4780:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIHW9zM.s 			page 215


 7253              		.loc 1 4780 0
 7254 016e 1846     		mov	r0, r3
 7255 0170 3837     		adds	r7, r7, #56
 7256              	.LCFI289:
 7257              		.cfi_def_cfa_offset 8
 7258 0172 BD46     		mov	sp, r7
 7259              	.LCFI290:
 7260              		.cfi_def_cfa_register 13
 7261              		@ sp needed
 7262 0174 80BD     		pop	{r7, pc}
 7263              	.L499:
 7264 0176 00BF     		.align	2
 7265              	.L498:
 7266 0178 00000000 		.word	uxSchedulerSuspended
 7267 017c 00000000 		.word	uxTopReadyPriority
 7268 0180 00000000 		.word	pxReadyTasksLists
 7269 0184 00000000 		.word	xPendingReadyList
 7270 0188 00000000 		.word	pxCurrentTCB
 7271 018c 00000000 		.word	xYieldPending
 7272              		.cfi_endproc
 7273              	.LFE60:
 7275              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 7276              		.align	1
 7277              		.global	vTaskNotifyGiveFromISR
 7278              		.syntax unified
 7279              		.thumb
 7280              		.thumb_func
 7281              		.fpu fpv4-sp-d16
 7283              	vTaskNotifyGiveFromISR:
 7284              	.LFB61:
4781:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4782:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4783:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4784:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4785:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4786:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4787:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4788:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 7285              		.loc 1 4788 0
 7286              		.cfi_startproc
 7287              		@ args = 0, pretend = 0, frame = 40
 7288              		@ frame_needed = 1, uses_anonymous_args = 0
 7289 0000 80B5     		push	{r7, lr}
 7290              	.LCFI291:
 7291              		.cfi_def_cfa_offset 8
 7292              		.cfi_offset 7, -8
 7293              		.cfi_offset 14, -4
 7294 0002 8AB0     		sub	sp, sp, #40
 7295              	.LCFI292:
 7296              		.cfi_def_cfa_offset 48
 7297 0004 00AF     		add	r7, sp, #0
 7298              	.LCFI293:
 7299              		.cfi_def_cfa_register 7
 7300 0006 7860     		str	r0, [r7, #4]
 7301 0008 3960     		str	r1, [r7]
4789:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4790:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
ARM GAS  /tmp/ccIHW9zM.s 			page 216


4791:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4792:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4793:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 7302              		.loc 1 4793 0
 7303 000a 7B68     		ldr	r3, [r7, #4]
 7304 000c 002B     		cmp	r3, #0
 7305 000e 09D1     		bne	.L501
 7306              	.LBB220:
 7307              	.LBB221:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7308              		.loc 2 195 0 discriminator 1
 7309              		.syntax unified
 7310              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7311 0010 4FF05003 			mov r3, #80												
 7312 0014 83F31188 		msr basepri, r3											
 7313 0018 BFF36F8F 		isb														
 7314 001c BFF34F8F 		dsb														
 7315              	
 7316              	@ 0 "" 2
 7317              		.thumb
 7318              		.syntax unified
 7319 0020 BB61     		str	r3, [r7, #24]
 7320              	.L502:
 7321              	.LBE221:
 7322              	.LBE220:
 7323              		.loc 1 4793 0 discriminator 1
 7324 0022 FEE7     		b	.L502
 7325              	.L501:
4794:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4795:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4796:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4797:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4798:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4799:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4800:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4801:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4802:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4803:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4804:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4805:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4806:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4807:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4808:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4809:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4810:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4811:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 7326              		.loc 1 4811 0
 7327 0024 FFF7FEFF 		bl	vPortValidateInterruptPriority
4812:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 7328              		.loc 1 4813 0
 7329 0028 7B68     		ldr	r3, [r7, #4]
 7330 002a 7B62     		str	r3, [r7, #36]
 7331              	.LBB222:
 7332              	.LBB223:
 211:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7333              		.loc 2 211 0
ARM GAS  /tmp/ccIHW9zM.s 			page 217


 7334              		.syntax unified
 7335              	@ 211 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7336 002c EFF31182 			mrs r2, basepri											
 7337 0030 4FF05003 		mov r3, #80												
 7338 0034 83F31188 		msr basepri, r3											
 7339 0038 BFF36F8F 		isb														
 7340 003c BFF34F8F 		dsb														
 7341              	
 7342              	@ 0 "" 2
 7343              		.thumb
 7344              		.syntax unified
 7345 0040 7A61     		str	r2, [r7, #20]
 7346 0042 3B61     		str	r3, [r7, #16]
 223:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 7347              		.loc 2 223 0
 7348 0044 7B69     		ldr	r3, [r7, #20]
 7349              	.LBE223:
 7350              	.LBE222:
4814:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4815:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 7351              		.loc 1 4815 0
 7352 0046 3B62     		str	r3, [r7, #32]
4816:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4817:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 7353              		.loc 1 4817 0
 7354 0048 7B6A     		ldr	r3, [r7, #36]
 7355 004a 93F85830 		ldrb	r3, [r3, #88]
 7356 004e FB77     		strb	r3, [r7, #31]
4818:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 7357              		.loc 1 4818 0
 7358 0050 7B6A     		ldr	r3, [r7, #36]
 7359 0052 0222     		movs	r2, #2
 7360 0054 83F85820 		strb	r2, [r3, #88]
4819:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4821:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4822:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
 7361              		.loc 1 4822 0
 7362 0058 7B6A     		ldr	r3, [r7, #36]
 7363 005a 5B6D     		ldr	r3, [r3, #84]
 7364 005c 5A1C     		adds	r2, r3, #1
 7365 005e 7B6A     		ldr	r3, [r7, #36]
 7366 0060 5A65     		str	r2, [r3, #84]
4823:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4824:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4825:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4827:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4828:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 7367              		.loc 1 4828 0
 7368 0062 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 7369 0064 012B     		cmp	r3, #1
 7370 0066 46D1     		bne	.L504
4829:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4830:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4831:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 7371              		.loc 1 4831 0
ARM GAS  /tmp/ccIHW9zM.s 			page 218


 7372 0068 7B6A     		ldr	r3, [r7, #36]
 7373 006a 9B6A     		ldr	r3, [r3, #40]
 7374 006c 002B     		cmp	r3, #0
 7375 006e 09D0     		beq	.L505
 7376              	.LBB224:
 7377              	.LBB225:
 195:Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7378              		.loc 2 195 0 discriminator 1
 7379              		.syntax unified
 7380              	@ 195 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7381 0070 4FF05003 			mov r3, #80												
 7382 0074 83F31188 		msr basepri, r3											
 7383 0078 BFF36F8F 		isb														
 7384 007c BFF34F8F 		dsb														
 7385              	
 7386              	@ 0 "" 2
 7387              		.thumb
 7388              		.syntax unified
 7389 0080 FB60     		str	r3, [r7, #12]
 7390              	.L506:
 7391              	.LBE225:
 7392              	.LBE224:
 7393              		.loc 1 4831 0 discriminator 2
 7394 0082 FEE7     		b	.L506
 7395              	.L505:
4832:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4833:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 7396              		.loc 1 4833 0
 7397 0084 204B     		ldr	r3, .L512
 7398 0086 1B68     		ldr	r3, [r3]
 7399 0088 002B     		cmp	r3, #0
 7400 008a 1DD1     		bne	.L507
4834:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4835:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 7401              		.loc 1 4835 0
 7402 008c 7B6A     		ldr	r3, [r7, #36]
 7403 008e 0433     		adds	r3, r3, #4
 7404 0090 1846     		mov	r0, r3
 7405 0092 FFF7FEFF 		bl	uxListRemove
4836:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 7406              		.loc 1 4836 0
 7407 0096 7B6A     		ldr	r3, [r7, #36]
 7408 0098 DA6A     		ldr	r2, [r3, #44]
 7409 009a 1C4B     		ldr	r3, .L512+4
 7410 009c 1B68     		ldr	r3, [r3]
 7411 009e 9A42     		cmp	r2, r3
 7412 00a0 03D9     		bls	.L508
 7413              		.loc 1 4836 0 is_stmt 0 discriminator 1
 7414 00a2 7B6A     		ldr	r3, [r7, #36]
 7415 00a4 DB6A     		ldr	r3, [r3, #44]
 7416 00a6 194A     		ldr	r2, .L512+4
 7417 00a8 1360     		str	r3, [r2]
 7418              	.L508:
 7419              		.loc 1 4836 0 discriminator 3
 7420 00aa 7B6A     		ldr	r3, [r7, #36]
 7421 00ac DA6A     		ldr	r2, [r3, #44]
 7422 00ae 1346     		mov	r3, r2
ARM GAS  /tmp/ccIHW9zM.s 			page 219


 7423 00b0 9B00     		lsls	r3, r3, #2
 7424 00b2 1344     		add	r3, r3, r2
 7425 00b4 9B00     		lsls	r3, r3, #2
 7426 00b6 164A     		ldr	r2, .L512+8
 7427 00b8 1A44     		add	r2, r2, r3
 7428 00ba 7B6A     		ldr	r3, [r7, #36]
 7429 00bc 0433     		adds	r3, r3, #4
 7430 00be 1946     		mov	r1, r3
 7431 00c0 1046     		mov	r0, r2
 7432 00c2 FFF7FEFF 		bl	vListInsertEnd
 7433 00c6 05E0     		b	.L509
 7434              	.L507:
4837:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4838:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4839:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4840:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4841:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4842:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 7435              		.loc 1 4842 0 is_stmt 1
 7436 00c8 7B6A     		ldr	r3, [r7, #36]
 7437 00ca 1833     		adds	r3, r3, #24
 7438 00cc 1946     		mov	r1, r3
 7439 00ce 1148     		ldr	r0, .L512+12
 7440 00d0 FFF7FEFF 		bl	vListInsertEnd
 7441              	.L509:
4843:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4844:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 7442              		.loc 1 4845 0
 7443 00d4 7B6A     		ldr	r3, [r7, #36]
 7444 00d6 DA6A     		ldr	r2, [r3, #44]
 7445 00d8 0F4B     		ldr	r3, .L512+16
 7446 00da 1B68     		ldr	r3, [r3]
 7447 00dc DB6A     		ldr	r3, [r3, #44]
 7448 00de 9A42     		cmp	r2, r3
 7449 00e0 09D9     		bls	.L504
4846:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4847:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4848:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4849:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
 7450              		.loc 1 4849 0
 7451 00e2 3B68     		ldr	r3, [r7]
 7452 00e4 002B     		cmp	r3, #0
 7453 00e6 03D0     		beq	.L510
4850:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4851:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 7454              		.loc 1 4851 0
 7455 00e8 3B68     		ldr	r3, [r7]
 7456 00ea 0122     		movs	r2, #1
 7457 00ec 1A60     		str	r2, [r3]
 7458 00ee 02E0     		b	.L504
 7459              	.L510:
4852:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4853:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4854:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4855:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4856:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
ARM GAS  /tmp/ccIHW9zM.s 			page 220


4857:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4858:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
 7460              		.loc 1 4858 0
 7461 00f0 0A4B     		ldr	r3, .L512+20
 7462 00f2 0122     		movs	r2, #1
 7463 00f4 1A60     		str	r2, [r3]
 7464              	.L504:
 7465 00f6 3B6A     		ldr	r3, [r7, #32]
 7466 00f8 BB60     		str	r3, [r7, #8]
 7467              	.LBB226:
 7468              	.LBB227:
 7469              		.loc 2 229 0
 7470 00fa BB68     		ldr	r3, [r7, #8]
 7471              		.syntax unified
 7472              	@ 229 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7473 00fc 83F31188 			msr basepri, r3	
 7474              	@ 0 "" 2
 7475              		.thumb
 7476              		.syntax unified
 7477              	.LBE227:
 7478              	.LBE226:
4859:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4860:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4861:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4862:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4863:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4864:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4865:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4866:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4867:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4868:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 7479              		.loc 1 4868 0
 7480 0100 00BF     		nop
 7481 0102 2837     		adds	r7, r7, #40
 7482              	.LCFI294:
 7483              		.cfi_def_cfa_offset 8
 7484 0104 BD46     		mov	sp, r7
 7485              	.LCFI295:
 7486              		.cfi_def_cfa_register 13
 7487              		@ sp needed
 7488 0106 80BD     		pop	{r7, pc}
 7489              	.L513:
 7490              		.align	2
 7491              	.L512:
 7492 0108 00000000 		.word	uxSchedulerSuspended
 7493 010c 00000000 		.word	uxTopReadyPriority
 7494 0110 00000000 		.word	pxReadyTasksLists
 7495 0114 00000000 		.word	xPendingReadyList
 7496 0118 00000000 		.word	pxCurrentTCB
 7497 011c 00000000 		.word	xYieldPending
 7498              		.cfi_endproc
 7499              	.LFE61:
 7501              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 7502              		.align	1
 7503              		.global	xTaskNotifyStateClear
 7504              		.syntax unified
 7505              		.thumb
ARM GAS  /tmp/ccIHW9zM.s 			page 221


 7506              		.thumb_func
 7507              		.fpu fpv4-sp-d16
 7509              	xTaskNotifyStateClear:
 7510              	.LFB62:
4869:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4870:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4871:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4872:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4873:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4874:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4875:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4876:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4877:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 7511              		.loc 1 4877 0
 7512              		.cfi_startproc
 7513              		@ args = 0, pretend = 0, frame = 16
 7514              		@ frame_needed = 1, uses_anonymous_args = 0
 7515 0000 80B5     		push	{r7, lr}
 7516              	.LCFI296:
 7517              		.cfi_def_cfa_offset 8
 7518              		.cfi_offset 7, -8
 7519              		.cfi_offset 14, -4
 7520 0002 84B0     		sub	sp, sp, #16
 7521              	.LCFI297:
 7522              		.cfi_def_cfa_offset 24
 7523 0004 00AF     		add	r7, sp, #0
 7524              	.LCFI298:
 7525              		.cfi_def_cfa_register 7
 7526 0006 7860     		str	r0, [r7, #4]
4878:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4879:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4880:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4882:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4883:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 7527              		.loc 1 4883 0
 7528 0008 7B68     		ldr	r3, [r7, #4]
 7529 000a 002B     		cmp	r3, #0
 7530 000c 02D1     		bne	.L515
 7531              		.loc 1 4883 0 is_stmt 0 discriminator 1
 7532 000e 0E4B     		ldr	r3, .L520
 7533 0010 1B68     		ldr	r3, [r3]
 7534 0012 00E0     		b	.L516
 7535              	.L515:
 7536              		.loc 1 4883 0 discriminator 2
 7537 0014 7B68     		ldr	r3, [r7, #4]
 7538              	.L516:
 7539              		.loc 1 4883 0 discriminator 4
 7540 0016 BB60     		str	r3, [r7, #8]
4884:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4885:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 7541              		.loc 1 4885 0 is_stmt 1 discriminator 4
 7542 0018 FFF7FEFF 		bl	vPortEnterCritical
4886:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4887:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
 7543              		.loc 1 4887 0 discriminator 4
 7544 001c BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccIHW9zM.s 			page 222


 7545 001e 93F85830 		ldrb	r3, [r3, #88]
 7546 0022 DBB2     		uxtb	r3, r3
 7547 0024 022B     		cmp	r3, #2
 7548 0026 06D1     		bne	.L517
4888:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4889:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 7549              		.loc 1 4889 0
 7550 0028 BB68     		ldr	r3, [r7, #8]
 7551 002a 0022     		movs	r2, #0
 7552 002c 83F85820 		strb	r2, [r3, #88]
4890:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 7553              		.loc 1 4890 0
 7554 0030 0123     		movs	r3, #1
 7555 0032 FB60     		str	r3, [r7, #12]
 7556 0034 01E0     		b	.L518
 7557              	.L517:
4891:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4892:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4893:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4894:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
 7558              		.loc 1 4894 0
 7559 0036 0023     		movs	r3, #0
 7560 0038 FB60     		str	r3, [r7, #12]
 7561              	.L518:
4895:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4896:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4897:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 7562              		.loc 1 4897 0
 7563 003a FFF7FEFF 		bl	vPortExitCritical
4898:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4899:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 7564              		.loc 1 4899 0
 7565 003e FB68     		ldr	r3, [r7, #12]
4900:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 7566              		.loc 1 4900 0
 7567 0040 1846     		mov	r0, r3
 7568 0042 1037     		adds	r7, r7, #16
 7569              	.LCFI299:
 7570              		.cfi_def_cfa_offset 8
 7571 0044 BD46     		mov	sp, r7
 7572              	.LCFI300:
 7573              		.cfi_def_cfa_register 13
 7574              		@ sp needed
 7575 0046 80BD     		pop	{r7, pc}
 7576              	.L521:
 7577              		.align	2
 7578              	.L520:
 7579 0048 00000000 		.word	pxCurrentTCB
 7580              		.cfi_endproc
 7581              	.LFE62:
 7583              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 7584              		.align	1
 7585              		.syntax unified
 7586              		.thumb
 7587              		.thumb_func
 7588              		.fpu fpv4-sp-d16
 7590              	prvAddCurrentTaskToDelayedList:
ARM GAS  /tmp/ccIHW9zM.s 			page 223


 7591              	.LFB63:
4901:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4902:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4903:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4904:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4905:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4907:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 7592              		.loc 1 4907 0
 7593              		.cfi_startproc
 7594              		@ args = 0, pretend = 0, frame = 16
 7595              		@ frame_needed = 1, uses_anonymous_args = 0
 7596 0000 80B5     		push	{r7, lr}
 7597              	.LCFI301:
 7598              		.cfi_def_cfa_offset 8
 7599              		.cfi_offset 7, -8
 7600              		.cfi_offset 14, -4
 7601 0002 84B0     		sub	sp, sp, #16
 7602              	.LCFI302:
 7603              		.cfi_def_cfa_offset 24
 7604 0004 00AF     		add	r7, sp, #0
 7605              	.LCFI303:
 7606              		.cfi_def_cfa_register 7
 7607 0006 7860     		str	r0, [r7, #4]
 7608 0008 3960     		str	r1, [r7]
4908:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
4909:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 7609              		.loc 1 4909 0
 7610 000a 214B     		ldr	r3, .L527
 7611 000c 1B68     		ldr	r3, [r3]
 7612 000e FB60     		str	r3, [r7, #12]
4910:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4911:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4912:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4913:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4914:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4915:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4916:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4917:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4918:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4919:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4920:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4921:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4922:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 7613              		.loc 1 4922 0
 7614 0010 204B     		ldr	r3, .L527+4
 7615 0012 1B68     		ldr	r3, [r3]
 7616 0014 0433     		adds	r3, r3, #4
 7617 0016 1846     		mov	r0, r3
 7618 0018 FFF7FEFF 		bl	uxListRemove
4923:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4924:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4925:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4926:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4927:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4928:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4929:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccIHW9zM.s 			page 224


4930:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4931:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4932:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4934:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4935:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 7619              		.loc 1 4935 0
 7620 001c 7B68     		ldr	r3, [r7, #4]
 7621 001e B3F1FF3F 		cmp	r3, #-1
 7622 0022 0AD1     		bne	.L523
 7623              		.loc 1 4935 0 is_stmt 0 discriminator 1
 7624 0024 3B68     		ldr	r3, [r7]
 7625 0026 002B     		cmp	r3, #0
 7626 0028 07D0     		beq	.L523
4936:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4937:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4938:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4939:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4940:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 7627              		.loc 1 4940 0 is_stmt 1
 7628 002a 1A4B     		ldr	r3, .L527+4
 7629 002c 1B68     		ldr	r3, [r3]
 7630 002e 0433     		adds	r3, r3, #4
 7631 0030 1946     		mov	r1, r3
 7632 0032 1948     		ldr	r0, .L527+8
 7633 0034 FFF7FEFF 		bl	vListInsertEnd
4941:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4942:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4943:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4944:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4945:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4946:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4947:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
4948:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4950:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4951:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
4953:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4954:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4955:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4956:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4957:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4958:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4959:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4960:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4961:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4962:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4963:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4964:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4965:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4966:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4967:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4968:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4969:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4970:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4971:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/ccIHW9zM.s 			page 225


4972:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4973:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4974:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4975:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4976:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4977:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4978:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4979:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4980:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4981:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4982:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4983:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4984:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4986:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4987:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4988:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4989:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4990:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4991:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4992:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4993:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4994:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4995:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4996:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4997:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4998:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4999:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5000:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5001:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5002:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5003:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5004:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5005:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5006:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5007:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5008:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5009:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5010:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5011:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5012:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5013:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5014:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5015:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 7634              		.loc 1 5015 0
 7635 0038 26E0     		b	.L526
 7636              	.L523:
4947:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 7637              		.loc 1 4947 0
 7638 003a FA68     		ldr	r2, [r7, #12]
 7639 003c 7B68     		ldr	r3, [r7, #4]
 7640 003e 1344     		add	r3, r3, r2
 7641 0040 BB60     		str	r3, [r7, #8]
4950:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 7642              		.loc 1 4950 0
 7643 0042 144B     		ldr	r3, .L527+4
 7644 0044 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccIHW9zM.s 			page 226


 7645 0046 BA68     		ldr	r2, [r7, #8]
 7646 0048 5A60     		str	r2, [r3, #4]
4952:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 7647              		.loc 1 4952 0
 7648 004a BA68     		ldr	r2, [r7, #8]
 7649 004c FB68     		ldr	r3, [r7, #12]
 7650 004e 9A42     		cmp	r2, r3
 7651 0050 09D2     		bcs	.L525
4956:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 7652              		.loc 1 4956 0
 7653 0052 124B     		ldr	r3, .L527+12
 7654 0054 1A68     		ldr	r2, [r3]
 7655 0056 0F4B     		ldr	r3, .L527+4
 7656 0058 1B68     		ldr	r3, [r3]
 7657 005a 0433     		adds	r3, r3, #4
 7658 005c 1946     		mov	r1, r3
 7659 005e 1046     		mov	r0, r2
 7660 0060 FFF7FEFF 		bl	vListInsert
 7661              		.loc 1 5015 0
 7662 0064 10E0     		b	.L526
 7663              	.L525:
4962:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 7664              		.loc 1 4962 0
 7665 0066 0E4B     		ldr	r3, .L527+16
 7666 0068 1A68     		ldr	r2, [r3]
 7667 006a 0A4B     		ldr	r3, .L527+4
 7668 006c 1B68     		ldr	r3, [r3]
 7669 006e 0433     		adds	r3, r3, #4
 7670 0070 1946     		mov	r1, r3
 7671 0072 1046     		mov	r0, r2
 7672 0074 FFF7FEFF 		bl	vListInsert
4967:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 7673              		.loc 1 4967 0
 7674 0078 0A4B     		ldr	r3, .L527+20
 7675 007a 1B68     		ldr	r3, [r3]
 7676 007c BA68     		ldr	r2, [r7, #8]
 7677 007e 9A42     		cmp	r2, r3
 7678 0080 02D2     		bcs	.L526
4969:Firmware/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 7679              		.loc 1 4969 0
 7680 0082 084A     		ldr	r2, .L527+20
 7681 0084 BB68     		ldr	r3, [r7, #8]
 7682 0086 1360     		str	r3, [r2]
 7683              	.L526:
 7684              		.loc 1 5015 0
 7685 0088 00BF     		nop
 7686 008a 1037     		adds	r7, r7, #16
 7687              	.LCFI304:
 7688              		.cfi_def_cfa_offset 8
 7689 008c BD46     		mov	sp, r7
 7690              	.LCFI305:
 7691              		.cfi_def_cfa_register 13
 7692              		@ sp needed
 7693 008e 80BD     		pop	{r7, pc}
 7694              	.L528:
 7695              		.align	2
 7696              	.L527:
ARM GAS  /tmp/ccIHW9zM.s 			page 227


 7697 0090 00000000 		.word	xTickCount
 7698 0094 00000000 		.word	pxCurrentTCB
 7699 0098 00000000 		.word	xSuspendedTaskList
 7700 009c 00000000 		.word	pxOverflowDelayedTaskList
 7701 00a0 00000000 		.word	pxDelayedTaskList
 7702 00a4 00000000 		.word	xNextTaskUnblockTime
 7703              		.cfi_endproc
 7704              	.LFE63:
 7706              		.text
 7707              	.Letext0:
 7708              		.file 3 "/home/zht/stm32tools/arm-gcc/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 7709              		.file 4 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/machine/_default_types.h"
 7710              		.file 5 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/lock.h"
 7711              		.file 6 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/_types.h"
 7712              		.file 7 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/reent.h"
 7713              		.file 8 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/stdlib.h"
 7714              		.file 9 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/_stdint.h"
 7715              		.file 10 "Firmware/Core/Inc/FreeRTOSConfig.h"
 7716              		.file 11 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 7717              		.file 12 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 7718              		.file 13 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 7719              		.file 14 "Firmware/Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  /tmp/ccIHW9zM.s 			page 228


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccIHW9zM.s:22     .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccIHW9zM.s:19     .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccIHW9zM.s:25     .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccIHW9zM.s:28     .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccIHW9zM.s:31     .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccIHW9zM.s:34     .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccIHW9zM.s:37     .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccIHW9zM.s:40     .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccIHW9zM.s:43     .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccIHW9zM.s:46     .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccIHW9zM.s:49     .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccIHW9zM.s:52     .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccIHW9zM.s:55     .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccIHW9zM.s:58     .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccIHW9zM.s:61     .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccIHW9zM.s:64     .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccIHW9zM.s:67     .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccIHW9zM.s:70     .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccIHW9zM.s:73     .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccIHW9zM.s:76     .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccIHW9zM.s:79     .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccIHW9zM.s:82     .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccIHW9zM.s:85     .bss.xTickCount:0000000000000000 $d
     /tmp/ccIHW9zM.s:88     .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccIHW9zM.s:91     .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccIHW9zM.s:94     .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccIHW9zM.s:97     .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccIHW9zM.s:100    .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccIHW9zM.s:103    .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccIHW9zM.s:106    .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccIHW9zM.s:109    .bss.xYieldPending:0000000000000000 $d
     /tmp/ccIHW9zM.s:112    .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccIHW9zM.s:115    .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccIHW9zM.s:118    .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccIHW9zM.s:121    .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccIHW9zM.s:124    .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccIHW9zM.s:127    .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccIHW9zM.s:130    .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccIHW9zM.s:133    .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccIHW9zM.s:136    .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccIHW9zM.s:139    .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccIHW9zM.s:142    .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccIHW9zM.s:145    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/ccIHW9zM.s:152    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/ccIHW9zM.s:430    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccIHW9zM.s:626    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccIHW9zM.s:310    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccIHW9zM.s:317    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccIHW9zM.s:424    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccIHW9zM.s:620    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccIHW9zM.s:4913   .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccIHW9zM.s:768    .text.prvAddNewTaskToReadyList:00000000000000c4 $d
     /tmp/ccIHW9zM.s:779    .text.vTaskDelete:0000000000000000 $t
     /tmp/ccIHW9zM.s:786    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccIHW9zM.s:5521   .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
ARM GAS  /tmp/ccIHW9zM.s 			page 229


     /tmp/ccIHW9zM.s:5611   .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccIHW9zM.s:939    .text.vTaskDelete:00000000000000c4 $d
     /tmp/ccIHW9zM.s:951    .text.vTaskDelayUntil:0000000000000000 $t
     /tmp/ccIHW9zM.s:958    .text.vTaskDelayUntil:0000000000000000 vTaskDelayUntil
     /tmp/ccIHW9zM.s:2696   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccIHW9zM.s:7590   .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccIHW9zM.s:2742   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccIHW9zM.s:1155   .text.vTaskDelayUntil:00000000000000e8 $d
     /tmp/ccIHW9zM.s:1162   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccIHW9zM.s:1169   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccIHW9zM.s:1260   .text.vTaskDelay:0000000000000060 $d
     /tmp/ccIHW9zM.s:1266   .text.eTaskGetState:0000000000000000 $t
     /tmp/ccIHW9zM.s:1273   .text.eTaskGetState:0000000000000000 eTaskGetState
     /tmp/ccIHW9zM.s:1409   .text.eTaskGetState:000000000000009c $d
     /tmp/ccIHW9zM.s:1418   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccIHW9zM.s:1425   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccIHW9zM.s:1480   .text.uxTaskPriorityGet:0000000000000030 $d
     /tmp/ccIHW9zM.s:1485   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccIHW9zM.s:1492   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccIHW9zM.s:1581   .text.uxTaskPriorityGetFromISR:0000000000000054 $d
     /tmp/ccIHW9zM.s:1586   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccIHW9zM.s:1593   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccIHW9zM.s:1824   .text.vTaskPrioritySet:0000000000000134 $d
     /tmp/ccIHW9zM.s:1832   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccIHW9zM.s:1839   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccIHW9zM.s:3651   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccIHW9zM.s:2002   .text.vTaskSuspend:00000000000000d0 $d
     /tmp/ccIHW9zM.s:2012   .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccIHW9zM.s:2018   .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccIHW9zM.s:2126   .text.prvTaskIsTaskSuspended:000000000000006c $d
     /tmp/ccIHW9zM.s:2132   .text.vTaskResume:0000000000000000 $t
     /tmp/ccIHW9zM.s:2139   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccIHW9zM.s:2272   .text.vTaskResume:00000000000000ac $d
     /tmp/ccIHW9zM.s:2280   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccIHW9zM.s:2287   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccIHW9zM.s:2452   .text.xTaskResumeFromISR:00000000000000cc $d
     /tmp/ccIHW9zM.s:2461   .rodata:0000000000000000 $d
     /tmp/ccIHW9zM.s:2465   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccIHW9zM.s:2472   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccIHW9zM.s:2615   .text.vTaskStartScheduler:00000000000000b0 $d
     /tmp/ccIHW9zM.s:4857   .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccIHW9zM.s:2625   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccIHW9zM.s:2632   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccIHW9zM.s:2684   .text.vTaskEndScheduler:000000000000002c $d
     /tmp/ccIHW9zM.s:2689   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccIHW9zM.s:2730   .text.vTaskSuspendAll:0000000000000018 $d
     /tmp/ccIHW9zM.s:2735   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccIHW9zM.s:3385   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccIHW9zM.s:2951   .text.xTaskResumeAll:0000000000000114 $d
     /tmp/ccIHW9zM.s:2964   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccIHW9zM.s:2971   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccIHW9zM.s:3011   .text.xTaskGetTickCount:000000000000001c $d
     /tmp/ccIHW9zM.s:3016   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccIHW9zM.s:3023   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccIHW9zM.s:3064   .text.xTaskGetTickCountFromISR:0000000000000020 $d
     /tmp/ccIHW9zM.s:3069   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccIHW9zM.s:3076   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
ARM GAS  /tmp/ccIHW9zM.s 			page 230


     /tmp/ccIHW9zM.s:3107   .text.uxTaskGetNumberOfTasks:0000000000000014 $d
     /tmp/ccIHW9zM.s:3112   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccIHW9zM.s:3119   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccIHW9zM.s:3195   .text.pcTaskGetName:0000000000000044 $d
     /tmp/ccIHW9zM.s:3200   .text.uxTaskGetSystemState:0000000000000000 $t
     /tmp/ccIHW9zM.s:3207   .text.uxTaskGetSystemState:0000000000000000 uxTaskGetSystemState
     /tmp/ccIHW9zM.s:5253   .text.prvListTasksWithinSingleList:0000000000000000 prvListTasksWithinSingleList
     /tmp/ccIHW9zM.s:3368   .text.uxTaskGetSystemState:0000000000000104 $d
     /tmp/ccIHW9zM.s:3378   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccIHW9zM.s:3629   .text.xTaskIncrementTick:0000000000000150 $d
     /tmp/ccIHW9zM.s:3644   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccIHW9zM.s:3788   .text.vTaskSwitchContext:00000000000000a4 $d
     /tmp/ccIHW9zM.s:3797   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccIHW9zM.s:3804   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccIHW9zM.s:3871   .text.vTaskPlaceOnEventList:0000000000000044 $d
     /tmp/ccIHW9zM.s:3876   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccIHW9zM.s:3883   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccIHW9zM.s:3982   .text.vTaskPlaceOnUnorderedEventList:000000000000006c $d
     /tmp/ccIHW9zM.s:3988   .text.vTaskPlaceOnEventListRestricted:0000000000000000 $t
     /tmp/ccIHW9zM.s:3995   .text.vTaskPlaceOnEventListRestricted:0000000000000000 vTaskPlaceOnEventListRestricted
     /tmp/ccIHW9zM.s:4071   .text.vTaskPlaceOnEventListRestricted:0000000000000050 $d
     /tmp/ccIHW9zM.s:4076   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccIHW9zM.s:4083   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccIHW9zM.s:4217   .text.xTaskRemoveFromEventList:00000000000000ac $d
     /tmp/ccIHW9zM.s:4227   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccIHW9zM.s:4234   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccIHW9zM.s:4372   .text.vTaskRemoveFromUnorderedEventList:00000000000000ac $d
     /tmp/ccIHW9zM.s:4381   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccIHW9zM.s:4388   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccIHW9zM.s:4457   .text.vTaskSetTimeOutState:0000000000000044 $d
     /tmp/ccIHW9zM.s:4463   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccIHW9zM.s:4470   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccIHW9zM.s:4515   .text.vTaskInternalSetTimeOutState:0000000000000024 $d
     /tmp/ccIHW9zM.s:4521   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccIHW9zM.s:4528   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccIHW9zM.s:4683   .text.xTaskCheckForTimeOut:00000000000000b8 $d
     /tmp/ccIHW9zM.s:4689   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccIHW9zM.s:4696   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccIHW9zM.s:4728   .text.vTaskMissedYield:0000000000000014 $d
     /tmp/ccIHW9zM.s:4733   .text.uxTaskGetTaskNumber:0000000000000000 $t
     /tmp/ccIHW9zM.s:4740   .text.uxTaskGetTaskNumber:0000000000000000 uxTaskGetTaskNumber
     /tmp/ccIHW9zM.s:4795   .text.vTaskSetTaskNumber:0000000000000000 $t
     /tmp/ccIHW9zM.s:4802   .text.vTaskSetTaskNumber:0000000000000000 vTaskSetTaskNumber
     /tmp/ccIHW9zM.s:4851   .text.prvIdleTask:0000000000000000 $t
     /tmp/ccIHW9zM.s:5008   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccIHW9zM.s:4901   .text.prvIdleTask:0000000000000028 $d
     /tmp/ccIHW9zM.s:4907   .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccIHW9zM.s:4990   .text.prvInitialiseTaskLists:0000000000000060 $d
     /tmp/ccIHW9zM.s:5002   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccIHW9zM.s:5078   .text.prvCheckTasksWaitingTermination:000000000000004c $d
     /tmp/ccIHW9zM.s:5085   .text.vTaskGetInfo:0000000000000000 $t
     /tmp/ccIHW9zM.s:5092   .text.vTaskGetInfo:0000000000000000 vTaskGetInfo
     /tmp/ccIHW9zM.s:5384   .text.prvTaskCheckFreeStackSpace:0000000000000000 prvTaskCheckFreeStackSpace
     /tmp/ccIHW9zM.s:5242   .text.vTaskGetInfo:00000000000000c8 $d
     /tmp/ccIHW9zM.s:5247   .text.prvListTasksWithinSingleList:0000000000000000 $t
     /tmp/ccIHW9zM.s:5378   .text.prvTaskCheckFreeStackSpace:0000000000000000 $t
     /tmp/ccIHW9zM.s:5447   .text.uxTaskGetStackHighWaterMark:0000000000000000 $t
ARM GAS  /tmp/ccIHW9zM.s 			page 231


     /tmp/ccIHW9zM.s:5454   .text.uxTaskGetStackHighWaterMark:0000000000000000 uxTaskGetStackHighWaterMark
     /tmp/ccIHW9zM.s:5510   .text.uxTaskGetStackHighWaterMark:0000000000000034 $d
     /tmp/ccIHW9zM.s:5515   .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccIHW9zM.s:5605   .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccIHW9zM.s:5680   .text.prvResetNextTaskUnblockTime:0000000000000044 $d
     /tmp/ccIHW9zM.s:5686   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccIHW9zM.s:5693   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccIHW9zM.s:5733   .text.xTaskGetCurrentTaskHandle:000000000000001c $d
     /tmp/ccIHW9zM.s:5738   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccIHW9zM.s:5745   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccIHW9zM.s:5805   .text.xTaskGetSchedulerState:0000000000000034 $d
     /tmp/ccIHW9zM.s:5811   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccIHW9zM.s:5818   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccIHW9zM.s:5969   .text.xTaskPriorityInherit:00000000000000d0 $d
     /tmp/ccIHW9zM.s:5976   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccIHW9zM.s:5983   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccIHW9zM.s:6142   .text.xTaskPriorityDisinherit:00000000000000cc $d
     /tmp/ccIHW9zM.s:6149   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccIHW9zM.s:6156   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccIHW9zM.s:6351   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000fc $d
     /tmp/ccIHW9zM.s:6358   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccIHW9zM.s:6365   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccIHW9zM.s:6414   .text.uxTaskResetEventItemValue:000000000000002c $d
     /tmp/ccIHW9zM.s:6419   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccIHW9zM.s:6426   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccIHW9zM.s:6469   .text.pvTaskIncrementMutexHeldCount:0000000000000024 $d
     /tmp/ccIHW9zM.s:6474   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccIHW9zM.s:6481   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccIHW9zM.s:6588   .text.ulTaskNotifyTake:0000000000000088 $d
     /tmp/ccIHW9zM.s:6594   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccIHW9zM.s:6601   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccIHW9zM.s:6727   .text.xTaskNotifyWait:00000000000000ac $d
     /tmp/ccIHW9zM.s:6733   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccIHW9zM.s:6740   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccIHW9zM.s:6820   .text.xTaskGenericNotify:0000000000000060 $d
     /tmp/ccIHW9zM.s:6825   .text.xTaskGenericNotify:0000000000000074 $t
     /tmp/ccIHW9zM.s:6971   .text.xTaskGenericNotify:0000000000000134 $d
     /tmp/ccIHW9zM.s:6979   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccIHW9zM.s:6986   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccIHW9zM.s:7088   .text.xTaskGenericNotifyFromISR:0000000000000080 $d
     /tmp/ccIHW9zM.s:7093   .text.xTaskGenericNotifyFromISR:0000000000000094 $t
     /tmp/ccIHW9zM.s:7266   .text.xTaskGenericNotifyFromISR:0000000000000178 $d
     /tmp/ccIHW9zM.s:7276   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccIHW9zM.s:7283   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccIHW9zM.s:7492   .text.vTaskNotifyGiveFromISR:0000000000000108 $d
     /tmp/ccIHW9zM.s:7502   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccIHW9zM.s:7509   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccIHW9zM.s:7579   .text.xTaskNotifyStateClear:0000000000000048 $d
     /tmp/ccIHW9zM.s:7584   .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccIHW9zM.s:7697   .text.prvAddCurrentTaskToDelayedList:0000000000000090 $d
                           .group:0000000000000000 wm4.0.66eb26e6ef234a179f62cd8806fe3c00
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
ARM GAS  /tmp/ccIHW9zM.s 			page 232


                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.stddef.h.39.57db33e786ccd422e31be63a26e19309
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.31.b62728e58c3d6bdf0600b01b58224977
                           .group:0000000000000000 wm4.projdefs.h.29.3472c8470d131a5f474bc7437ea94609
                           .group:0000000000000000 wm4.portmacro.h.30.110a3580e768a63cdd084aa29b33cb01
                           .group:0000000000000000 wm4.portable.h.64.00b423ba030e23bed354b037664af7a6
                           .group:0000000000000000 wm4.mpu_wrappers.h.29.89d425470b0b1ff39fbd61026b3dc073
                           .group:0000000000000000 wm4.FreeRTOS.h.66.a6a3890d948540b7d907430686cf5981
                           .group:0000000000000000 wm4.list.h.61.bafeaa82806d71ae8917c6d7827fc3d2
                           .group:0000000000000000 wm4.task.h.46.0d11769cee96bf77a599bac125eeecf9
                           .group:0000000000000000 wm4.timers.h.54.b1628205d6a51adaf32536954da510c0
                           .group:0000000000000000 wm4.stack_macros.h.29.6b7843e188f2d273e6836785e6906ca7

UNDEFINED SYMBOLS
pvPortMalloc
vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xTimerCreateTimerTask
xPortStartScheduler
vPortEndScheduler
vListInsert
vListInitialise
