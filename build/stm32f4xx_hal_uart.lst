ARM GAS  /tmp/ccRTMmaY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_UART_Init:
  26              	.LFB130:
  27              		.file 1 "Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  13:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  14:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  16:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  17:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  19:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  23:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins (TX as alternate function pull-up, RX as alternate func
  25:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
ARM GAS  /tmp/ccRTMmaY.s 			page 2


  32:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  33:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  36:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  39:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  48:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  51:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  53:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  57:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  63:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  67:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  68:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  69:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  70:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  71:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  75:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
ARM GAS  /tmp/ccRTMmaY.s 			page 3


  89:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  91:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
  93:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
  95:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 107:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 108:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 109:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 110:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 111:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 112:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 113:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 114:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 115:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 116:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 117:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 118:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 119:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 120:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 121:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 123:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 124:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 125:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 126:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 127:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 128:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 129:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 130:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 131:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 132:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 133:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 134:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 135:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 136:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 137:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 138:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 139:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 140:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 141:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 142:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 143:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 144:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 145:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
ARM GAS  /tmp/ccRTMmaY.s 			page 4


 146:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 147:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 148:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 149:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 150:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 151:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 152:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 153:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 154:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 155:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 156:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 157:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 158:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 159:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 160:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 161:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 162:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 163:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 168:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 169:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 170:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 171:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 172:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 173:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 174:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 175:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 176:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 177:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 178:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 179:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 180:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 181:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 182:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 183:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 184:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 185:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 186:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 188:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 189:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 190:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 191:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 192:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 193:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 194:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 195:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 196:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 197:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 198:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 199:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 200:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 201:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 202:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
ARM GAS  /tmp/ccRTMmaY.s 			page 5


 203:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 204:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 205:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 206:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 207:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 208:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 209:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 211:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 212:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 213:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 214:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 215:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 216:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 217:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 218:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 219:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 220:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 222:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 223:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 224:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 225:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 226:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 227:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 228:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 229:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 230:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 231:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 232:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 233:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 234:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 237:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 238:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 239:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 240:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 241:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 242:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 243:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 244:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 245:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 246:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 247:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 248:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 249:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 250:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 251:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 254:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 255:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 256:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 257:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 258:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 259:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccRTMmaY.s 			page 6


 260:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 261:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 262:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 263:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 264:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 265:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 266:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 267:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 268:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 269:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 270:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 271:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 272:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 273:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 277:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 278:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 279:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 280:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 281:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 282:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 283:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 284:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 285:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 286:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 287:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 288:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 289:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 290:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 291:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 292:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 293:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 294:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 295:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 296:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 297:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 298:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 299:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 300:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 301:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 302:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 303:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 304:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 305:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 306:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 307:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 308:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 309:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 310:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 311:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 312:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 313:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 314:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 315:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 316:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccRTMmaY.s 			page 7


 317:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 318:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  28              		.loc 1 318 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 319:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 320:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  44              		.loc 1 320 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 321:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 322:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  48              		.loc 1 322 0
  49 000e 0123     		movs	r3, #1
  50 0010 3FE0     		b	.L3
  51              	.L2:
 323:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 324:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 325:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 326:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 327:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 328:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 329:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 330:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 331:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 332:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 333:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 334:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 335:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 336:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 337:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 338:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 339:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 340:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 341:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  52              		.loc 1 341 0
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F83930 		ldrb	r3, [r3, #57]
  55 0018 DBB2     		uxtb	r3, r3
  56 001a 002B     		cmp	r3, #0
  57 001c 06D1     		bne	.L4
 342:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 343:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
ARM GAS  /tmp/ccRTMmaY.s 			page 8


 344:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  58              		.loc 1 344 0
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 83F83820 		strb	r2, [r3, #56]
 345:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 347:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 348:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 349:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 350:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 351:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 352:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 353:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 354:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 355:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 356:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 357:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 358:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  62              		.loc 1 358 0
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  65              	.L4:
 359:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 360:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 361:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 362:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  66              		.loc 1 362 0
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 2422     		movs	r2, #36
  69 0030 83F83920 		strb	r2, [r3, #57]
 363:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 364:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 365:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  70              		.loc 1 365 0
  71 0034 7B68     		ldr	r3, [r7, #4]
  72 0036 1B68     		ldr	r3, [r3]
  73 0038 DA68     		ldr	r2, [r3, #12]
  74 003a 7B68     		ldr	r3, [r7, #4]
  75 003c 1B68     		ldr	r3, [r3]
  76 003e 22F40052 		bic	r2, r2, #8192
  77 0042 DA60     		str	r2, [r3, #12]
 366:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 367:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 368:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  78              		.loc 1 368 0
  79 0044 7868     		ldr	r0, [r7, #4]
  80 0046 FFF7FEFF 		bl	UART_SetConfig
 369:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 370:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 371:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 372:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 373:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  81              		.loc 1 373 0
  82 004a 7B68     		ldr	r3, [r7, #4]
  83 004c 1B68     		ldr	r3, [r3]
  84 004e 1A69     		ldr	r2, [r3, #16]
ARM GAS  /tmp/ccRTMmaY.s 			page 9


  85 0050 7B68     		ldr	r3, [r7, #4]
  86 0052 1B68     		ldr	r3, [r3]
  87 0054 22F49042 		bic	r2, r2, #18432
  88 0058 1A61     		str	r2, [r3, #16]
 374:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  89              		.loc 1 374 0
  90 005a 7B68     		ldr	r3, [r7, #4]
  91 005c 1B68     		ldr	r3, [r3]
  92 005e 5A69     		ldr	r2, [r3, #20]
  93 0060 7B68     		ldr	r3, [r7, #4]
  94 0062 1B68     		ldr	r3, [r3]
  95 0064 22F02A02 		bic	r2, r2, #42
  96 0068 5A61     		str	r2, [r3, #20]
 375:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 376:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 377:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  97              		.loc 1 377 0
  98 006a 7B68     		ldr	r3, [r7, #4]
  99 006c 1B68     		ldr	r3, [r3]
 100 006e DA68     		ldr	r2, [r3, #12]
 101 0070 7B68     		ldr	r3, [r7, #4]
 102 0072 1B68     		ldr	r3, [r3]
 103 0074 42F40052 		orr	r2, r2, #8192
 104 0078 DA60     		str	r2, [r3, #12]
 378:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 379:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 380:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 105              		.loc 1 380 0
 106 007a 7B68     		ldr	r3, [r7, #4]
 107 007c 0022     		movs	r2, #0
 108 007e DA63     		str	r2, [r3, #60]
 381:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 109              		.loc 1 381 0
 110 0080 7B68     		ldr	r3, [r7, #4]
 111 0082 2022     		movs	r2, #32
 112 0084 83F83920 		strb	r2, [r3, #57]
 382:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 113              		.loc 1 382 0
 114 0088 7B68     		ldr	r3, [r7, #4]
 115 008a 2022     		movs	r2, #32
 116 008c 83F83A20 		strb	r2, [r3, #58]
 383:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 384:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 117              		.loc 1 384 0
 118 0090 0023     		movs	r3, #0
 119              	.L3:
 385:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 120              		.loc 1 385 0
 121 0092 1846     		mov	r0, r3
 122 0094 0837     		adds	r7, r7, #8
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 8
 125 0096 BD46     		mov	sp, r7
 126              	.LCFI4:
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 0098 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccRTMmaY.s 			page 10


 130              		.cfi_endproc
 131              	.LFE130:
 133              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 134              		.align	1
 135              		.global	HAL_HalfDuplex_Init
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv4-sp-d16
 141              	HAL_HalfDuplex_Init:
 142              	.LFB131:
 386:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 387:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 388:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 389:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 390:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 391:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 392:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 393:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 394:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 395:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 143              		.loc 1 395 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 8
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147 0000 80B5     		push	{r7, lr}
 148              	.LCFI5:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 82B0     		sub	sp, sp, #8
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              	.LCFI7:
 157              		.cfi_def_cfa_register 7
 158 0006 7860     		str	r0, [r7, #4]
 396:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 397:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 159              		.loc 1 397 0
 160 0008 7B68     		ldr	r3, [r7, #4]
 161 000a 002B     		cmp	r3, #0
 162 000c 01D1     		bne	.L6
 398:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 399:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 163              		.loc 1 399 0
 164 000e 0123     		movs	r3, #1
 165 0010 47E0     		b	.L7
 166              	.L6:
 400:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 403:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 404:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 405:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 406:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
ARM GAS  /tmp/ccRTMmaY.s 			page 11


 167              		.loc 1 407 0
 168 0012 7B68     		ldr	r3, [r7, #4]
 169 0014 93F83930 		ldrb	r3, [r3, #57]
 170 0018 DBB2     		uxtb	r3, r3
 171 001a 002B     		cmp	r3, #0
 172 001c 06D1     		bne	.L8
 408:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 409:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 410:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 173              		.loc 1 410 0
 174 001e 7B68     		ldr	r3, [r7, #4]
 175 0020 0022     		movs	r2, #0
 176 0022 83F83820 		strb	r2, [r3, #56]
 411:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 412:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 413:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 414:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 415:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 416:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 417:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 418:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 419:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 421:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 422:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 423:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 424:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 177              		.loc 1 424 0
 178 0026 7868     		ldr	r0, [r7, #4]
 179 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 180              	.L8:
 425:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 426:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 427:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 181              		.loc 1 428 0
 182 002c 7B68     		ldr	r3, [r7, #4]
 183 002e 2422     		movs	r2, #36
 184 0030 83F83920 		strb	r2, [r3, #57]
 429:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 430:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 431:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 185              		.loc 1 431 0
 186 0034 7B68     		ldr	r3, [r7, #4]
 187 0036 1B68     		ldr	r3, [r3]
 188 0038 DA68     		ldr	r2, [r3, #12]
 189 003a 7B68     		ldr	r3, [r7, #4]
 190 003c 1B68     		ldr	r3, [r3]
 191 003e 22F40052 		bic	r2, r2, #8192
 192 0042 DA60     		str	r2, [r3, #12]
 432:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 433:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 434:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 193              		.loc 1 434 0
 194 0044 7868     		ldr	r0, [r7, #4]
 195 0046 FFF7FEFF 		bl	UART_SetConfig
 435:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 12


 436:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 437:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 438:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 439:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 196              		.loc 1 439 0
 197 004a 7B68     		ldr	r3, [r7, #4]
 198 004c 1B68     		ldr	r3, [r3]
 199 004e 1A69     		ldr	r2, [r3, #16]
 200 0050 7B68     		ldr	r3, [r7, #4]
 201 0052 1B68     		ldr	r3, [r3]
 202 0054 22F49042 		bic	r2, r2, #18432
 203 0058 1A61     		str	r2, [r3, #16]
 440:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 204              		.loc 1 440 0
 205 005a 7B68     		ldr	r3, [r7, #4]
 206 005c 1B68     		ldr	r3, [r3]
 207 005e 5A69     		ldr	r2, [r3, #20]
 208 0060 7B68     		ldr	r3, [r7, #4]
 209 0062 1B68     		ldr	r3, [r3]
 210 0064 22F02202 		bic	r2, r2, #34
 211 0068 5A61     		str	r2, [r3, #20]
 441:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 443:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 212              		.loc 1 443 0
 213 006a 7B68     		ldr	r3, [r7, #4]
 214 006c 1B68     		ldr	r3, [r3]
 215 006e 5A69     		ldr	r2, [r3, #20]
 216 0070 7B68     		ldr	r3, [r7, #4]
 217 0072 1B68     		ldr	r3, [r3]
 218 0074 42F00802 		orr	r2, r2, #8
 219 0078 5A61     		str	r2, [r3, #20]
 444:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 445:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 446:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 220              		.loc 1 446 0
 221 007a 7B68     		ldr	r3, [r7, #4]
 222 007c 1B68     		ldr	r3, [r3]
 223 007e DA68     		ldr	r2, [r3, #12]
 224 0080 7B68     		ldr	r3, [r7, #4]
 225 0082 1B68     		ldr	r3, [r3]
 226 0084 42F40052 		orr	r2, r2, #8192
 227 0088 DA60     		str	r2, [r3, #12]
 447:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 449:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 228              		.loc 1 449 0
 229 008a 7B68     		ldr	r3, [r7, #4]
 230 008c 0022     		movs	r2, #0
 231 008e DA63     		str	r2, [r3, #60]
 450:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 232              		.loc 1 450 0
 233 0090 7B68     		ldr	r3, [r7, #4]
 234 0092 2022     		movs	r2, #32
 235 0094 83F83920 		strb	r2, [r3, #57]
 451:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 236              		.loc 1 451 0
ARM GAS  /tmp/ccRTMmaY.s 			page 13


 237 0098 7B68     		ldr	r3, [r7, #4]
 238 009a 2022     		movs	r2, #32
 239 009c 83F83A20 		strb	r2, [r3, #58]
 452:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 240              		.loc 1 453 0
 241 00a0 0023     		movs	r3, #0
 242              	.L7:
 454:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 243              		.loc 1 454 0
 244 00a2 1846     		mov	r0, r3
 245 00a4 0837     		adds	r7, r7, #8
 246              	.LCFI8:
 247              		.cfi_def_cfa_offset 8
 248 00a6 BD46     		mov	sp, r7
 249              	.LCFI9:
 250              		.cfi_def_cfa_register 13
 251              		@ sp needed
 252 00a8 80BD     		pop	{r7, pc}
 253              		.cfi_endproc
 254              	.LFE131:
 256              		.section	.text.HAL_LIN_Init,"ax",%progbits
 257              		.align	1
 258              		.global	HAL_LIN_Init
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv4-sp-d16
 264              	HAL_LIN_Init:
 265              	.LFB132:
 455:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 456:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 457:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 458:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 459:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 460:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 461:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 462:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 463:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 464:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 465:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 466:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 467:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 468:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 266              		.loc 1 468 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              	.LCFI10:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 82B0     		sub	sp, sp, #8
 276              	.LCFI11:
 277              		.cfi_def_cfa_offset 16
 278 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccRTMmaY.s 			page 14


 279              	.LCFI12:
 280              		.cfi_def_cfa_register 7
 281 0006 7860     		str	r0, [r7, #4]
 282 0008 3960     		str	r1, [r7]
 469:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 470:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 283              		.loc 1 470 0
 284 000a 7B68     		ldr	r3, [r7, #4]
 285 000c 002B     		cmp	r3, #0
 286 000e 01D1     		bne	.L10
 471:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 472:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 287              		.loc 1 472 0
 288 0010 0123     		movs	r3, #1
 289 0012 57E0     		b	.L11
 290              	.L10:
 473:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 474:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 475:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 476:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 477:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 478:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 479:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 480:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 481:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 482:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 483:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 291              		.loc 1 483 0
 292 0014 7B68     		ldr	r3, [r7, #4]
 293 0016 93F83930 		ldrb	r3, [r3, #57]
 294 001a DBB2     		uxtb	r3, r3
 295 001c 002B     		cmp	r3, #0
 296 001e 06D1     		bne	.L12
 484:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 485:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 486:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 297              		.loc 1 486 0
 298 0020 7B68     		ldr	r3, [r7, #4]
 299 0022 0022     		movs	r2, #0
 300 0024 83F83820 		strb	r2, [r3, #56]
 487:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 489:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 490:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 492:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 493:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 494:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 495:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 497:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 498:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 499:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 500:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 301              		.loc 1 500 0
 302 0028 7868     		ldr	r0, [r7, #4]
 303 002a FFF7FEFF 		bl	HAL_UART_MspInit
ARM GAS  /tmp/ccRTMmaY.s 			page 15


 304              	.L12:
 501:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 502:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 503:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 305              		.loc 1 504 0
 306 002e 7B68     		ldr	r3, [r7, #4]
 307 0030 2422     		movs	r2, #36
 308 0032 83F83920 		strb	r2, [r3, #57]
 505:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 507:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 309              		.loc 1 507 0
 310 0036 7B68     		ldr	r3, [r7, #4]
 311 0038 1B68     		ldr	r3, [r3]
 312 003a DA68     		ldr	r2, [r3, #12]
 313 003c 7B68     		ldr	r3, [r7, #4]
 314 003e 1B68     		ldr	r3, [r3]
 315 0040 22F40052 		bic	r2, r2, #8192
 316 0044 DA60     		str	r2, [r3, #12]
 508:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 509:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 510:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 317              		.loc 1 510 0
 318 0046 7868     		ldr	r0, [r7, #4]
 319 0048 FFF7FEFF 		bl	UART_SetConfig
 511:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 512:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 513:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 514:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 515:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 320              		.loc 1 515 0
 321 004c 7B68     		ldr	r3, [r7, #4]
 322 004e 1B68     		ldr	r3, [r3]
 323 0050 1A69     		ldr	r2, [r3, #16]
 324 0052 7B68     		ldr	r3, [r7, #4]
 325 0054 1B68     		ldr	r3, [r3]
 326 0056 22F40062 		bic	r2, r2, #2048
 327 005a 1A61     		str	r2, [r3, #16]
 516:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 328              		.loc 1 516 0
 329 005c 7B68     		ldr	r3, [r7, #4]
 330 005e 1B68     		ldr	r3, [r3]
 331 0060 5A69     		ldr	r2, [r3, #20]
 332 0062 7B68     		ldr	r3, [r7, #4]
 333 0064 1B68     		ldr	r3, [r3]
 334 0066 22F02A02 		bic	r2, r2, #42
 335 006a 5A61     		str	r2, [r3, #20]
 517:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 519:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 336              		.loc 1 519 0
 337 006c 7B68     		ldr	r3, [r7, #4]
 338 006e 1B68     		ldr	r3, [r3]
 339 0070 1A69     		ldr	r2, [r3, #16]
 340 0072 7B68     		ldr	r3, [r7, #4]
 341 0074 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRTMmaY.s 			page 16


 342 0076 42F48042 		orr	r2, r2, #16384
 343 007a 1A61     		str	r2, [r3, #16]
 520:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 522:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 344              		.loc 1 522 0
 345 007c 7B68     		ldr	r3, [r7, #4]
 346 007e 1B68     		ldr	r3, [r3]
 347 0080 1A69     		ldr	r2, [r3, #16]
 348 0082 7B68     		ldr	r3, [r7, #4]
 349 0084 1B68     		ldr	r3, [r3]
 350 0086 22F02002 		bic	r2, r2, #32
 351 008a 1A61     		str	r2, [r3, #16]
 523:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 352              		.loc 1 523 0
 353 008c 7B68     		ldr	r3, [r7, #4]
 354 008e 1B68     		ldr	r3, [r3]
 355 0090 1969     		ldr	r1, [r3, #16]
 356 0092 7B68     		ldr	r3, [r7, #4]
 357 0094 1B68     		ldr	r3, [r3]
 358 0096 3A68     		ldr	r2, [r7]
 359 0098 0A43     		orrs	r2, r2, r1
 360 009a 1A61     		str	r2, [r3, #16]
 524:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 526:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 361              		.loc 1 526 0
 362 009c 7B68     		ldr	r3, [r7, #4]
 363 009e 1B68     		ldr	r3, [r3]
 364 00a0 DA68     		ldr	r2, [r3, #12]
 365 00a2 7B68     		ldr	r3, [r7, #4]
 366 00a4 1B68     		ldr	r3, [r3]
 367 00a6 42F40052 		orr	r2, r2, #8192
 368 00aa DA60     		str	r2, [r3, #12]
 527:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 529:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 369              		.loc 1 529 0
 370 00ac 7B68     		ldr	r3, [r7, #4]
 371 00ae 0022     		movs	r2, #0
 372 00b0 DA63     		str	r2, [r3, #60]
 530:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 373              		.loc 1 530 0
 374 00b2 7B68     		ldr	r3, [r7, #4]
 375 00b4 2022     		movs	r2, #32
 376 00b6 83F83920 		strb	r2, [r3, #57]
 531:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 377              		.loc 1 531 0
 378 00ba 7B68     		ldr	r3, [r7, #4]
 379 00bc 2022     		movs	r2, #32
 380 00be 83F83A20 		strb	r2, [r3, #58]
 532:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 533:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 381              		.loc 1 533 0
 382 00c2 0023     		movs	r3, #0
 383              	.L11:
 534:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccRTMmaY.s 			page 17


 384              		.loc 1 534 0
 385 00c4 1846     		mov	r0, r3
 386 00c6 0837     		adds	r7, r7, #8
 387              	.LCFI13:
 388              		.cfi_def_cfa_offset 8
 389 00c8 BD46     		mov	sp, r7
 390              	.LCFI14:
 391              		.cfi_def_cfa_register 13
 392              		@ sp needed
 393 00ca 80BD     		pop	{r7, pc}
 394              		.cfi_endproc
 395              	.LFE132:
 397              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 398              		.align	1
 399              		.global	HAL_MultiProcessor_Init
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	HAL_MultiProcessor_Init:
 406              	.LFB133:
 535:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 538:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 539:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 540:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 541:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 542:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 543:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 544:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 545:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 546:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 547:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 548:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 549:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 407              		.loc 1 549 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 16
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411 0000 80B5     		push	{r7, lr}
 412              	.LCFI15:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 84B0     		sub	sp, sp, #16
 417              	.LCFI16:
 418              		.cfi_def_cfa_offset 24
 419 0004 00AF     		add	r7, sp, #0
 420              	.LCFI17:
 421              		.cfi_def_cfa_register 7
 422 0006 F860     		str	r0, [r7, #12]
 423 0008 0B46     		mov	r3, r1
 424 000a 7A60     		str	r2, [r7, #4]
 425 000c FB72     		strb	r3, [r7, #11]
 550:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 551:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  /tmp/ccRTMmaY.s 			page 18


 426              		.loc 1 551 0
 427 000e FB68     		ldr	r3, [r7, #12]
 428 0010 002B     		cmp	r3, #0
 429 0012 01D1     		bne	.L14
 552:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 553:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 430              		.loc 1 553 0
 431 0014 0123     		movs	r3, #1
 432 0016 5FE0     		b	.L15
 433              	.L14:
 554:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 555:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 556:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 557:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 558:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 559:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 560:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 561:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 562:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 563:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 564:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 434              		.loc 1 565 0
 435 0018 FB68     		ldr	r3, [r7, #12]
 436 001a 93F83930 		ldrb	r3, [r3, #57]
 437 001e DBB2     		uxtb	r3, r3
 438 0020 002B     		cmp	r3, #0
 439 0022 06D1     		bne	.L16
 566:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 567:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 568:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 440              		.loc 1 568 0
 441 0024 FB68     		ldr	r3, [r7, #12]
 442 0026 0022     		movs	r2, #0
 443 0028 83F83820 		strb	r2, [r3, #56]
 569:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 570:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 571:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 572:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 574:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 575:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 576:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 577:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 578:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 579:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 580:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 581:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 582:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 444              		.loc 1 582 0
 445 002c F868     		ldr	r0, [r7, #12]
 446 002e FFF7FEFF 		bl	HAL_UART_MspInit
 447              	.L16:
 583:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 584:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 585:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 586:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccRTMmaY.s 			page 19


 448              		.loc 1 586 0
 449 0032 FB68     		ldr	r3, [r7, #12]
 450 0034 2422     		movs	r2, #36
 451 0036 83F83920 		strb	r2, [r3, #57]
 587:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 588:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 589:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 452              		.loc 1 589 0
 453 003a FB68     		ldr	r3, [r7, #12]
 454 003c 1B68     		ldr	r3, [r3]
 455 003e DA68     		ldr	r2, [r3, #12]
 456 0040 FB68     		ldr	r3, [r7, #12]
 457 0042 1B68     		ldr	r3, [r3]
 458 0044 22F40052 		bic	r2, r2, #8192
 459 0048 DA60     		str	r2, [r3, #12]
 590:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 592:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 460              		.loc 1 592 0
 461 004a F868     		ldr	r0, [r7, #12]
 462 004c FFF7FEFF 		bl	UART_SetConfig
 593:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 594:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 595:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 596:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 597:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 463              		.loc 1 597 0
 464 0050 FB68     		ldr	r3, [r7, #12]
 465 0052 1B68     		ldr	r3, [r3]
 466 0054 1A69     		ldr	r2, [r3, #16]
 467 0056 FB68     		ldr	r3, [r7, #12]
 468 0058 1B68     		ldr	r3, [r3]
 469 005a 22F49042 		bic	r2, r2, #18432
 470 005e 1A61     		str	r2, [r3, #16]
 598:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 471              		.loc 1 598 0
 472 0060 FB68     		ldr	r3, [r7, #12]
 473 0062 1B68     		ldr	r3, [r3]
 474 0064 5A69     		ldr	r2, [r3, #20]
 475 0066 FB68     		ldr	r3, [r7, #12]
 476 0068 1B68     		ldr	r3, [r3]
 477 006a 22F02A02 		bic	r2, r2, #42
 478 006e 5A61     		str	r2, [r3, #20]
 599:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 601:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 479              		.loc 1 601 0
 480 0070 FB68     		ldr	r3, [r7, #12]
 481 0072 1B68     		ldr	r3, [r3]
 482 0074 1A69     		ldr	r2, [r3, #16]
 483 0076 FB68     		ldr	r3, [r7, #12]
 484 0078 1B68     		ldr	r3, [r3]
 485 007a 22F00F02 		bic	r2, r2, #15
 486 007e 1A61     		str	r2, [r3, #16]
 602:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 487              		.loc 1 602 0
 488 0080 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccRTMmaY.s 			page 20


 489 0082 1B68     		ldr	r3, [r3]
 490 0084 1969     		ldr	r1, [r3, #16]
 491 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 492 0088 FB68     		ldr	r3, [r7, #12]
 493 008a 1B68     		ldr	r3, [r3]
 494 008c 0A43     		orrs	r2, r2, r1
 495 008e 1A61     		str	r2, [r3, #16]
 603:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 604:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 605:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 496              		.loc 1 605 0
 497 0090 FB68     		ldr	r3, [r7, #12]
 498 0092 1B68     		ldr	r3, [r3]
 499 0094 DA68     		ldr	r2, [r3, #12]
 500 0096 FB68     		ldr	r3, [r7, #12]
 501 0098 1B68     		ldr	r3, [r3]
 502 009a 22F40062 		bic	r2, r2, #2048
 503 009e DA60     		str	r2, [r3, #12]
 606:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 504              		.loc 1 606 0
 505 00a0 FB68     		ldr	r3, [r7, #12]
 506 00a2 1B68     		ldr	r3, [r3]
 507 00a4 D968     		ldr	r1, [r3, #12]
 508 00a6 FB68     		ldr	r3, [r7, #12]
 509 00a8 1B68     		ldr	r3, [r3]
 510 00aa 7A68     		ldr	r2, [r7, #4]
 511 00ac 0A43     		orrs	r2, r2, r1
 512 00ae DA60     		str	r2, [r3, #12]
 607:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 608:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 609:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 513              		.loc 1 609 0
 514 00b0 FB68     		ldr	r3, [r7, #12]
 515 00b2 1B68     		ldr	r3, [r3]
 516 00b4 DA68     		ldr	r2, [r3, #12]
 517 00b6 FB68     		ldr	r3, [r7, #12]
 518 00b8 1B68     		ldr	r3, [r3]
 519 00ba 42F40052 		orr	r2, r2, #8192
 520 00be DA60     		str	r2, [r3, #12]
 610:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 611:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 612:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 521              		.loc 1 612 0
 522 00c0 FB68     		ldr	r3, [r7, #12]
 523 00c2 0022     		movs	r2, #0
 524 00c4 DA63     		str	r2, [r3, #60]
 613:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 525              		.loc 1 613 0
 526 00c6 FB68     		ldr	r3, [r7, #12]
 527 00c8 2022     		movs	r2, #32
 528 00ca 83F83920 		strb	r2, [r3, #57]
 614:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 529              		.loc 1 614 0
 530 00ce FB68     		ldr	r3, [r7, #12]
 531 00d0 2022     		movs	r2, #32
 532 00d2 83F83A20 		strb	r2, [r3, #58]
 615:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 21


 616:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 533              		.loc 1 616 0
 534 00d6 0023     		movs	r3, #0
 535              	.L15:
 617:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 536              		.loc 1 617 0
 537 00d8 1846     		mov	r0, r3
 538 00da 1037     		adds	r7, r7, #16
 539              	.LCFI18:
 540              		.cfi_def_cfa_offset 8
 541 00dc BD46     		mov	sp, r7
 542              	.LCFI19:
 543              		.cfi_def_cfa_register 13
 544              		@ sp needed
 545 00de 80BD     		pop	{r7, pc}
 546              		.cfi_endproc
 547              	.LFE133:
 549              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 550              		.align	1
 551              		.global	HAL_UART_DeInit
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	HAL_UART_DeInit:
 558              	.LFB134:
 618:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 619:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 620:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 621:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 622:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 623:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 624:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 625:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 559              		.loc 1 626 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              	.LCFI20:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0002 82B0     		sub	sp, sp, #8
 569              	.LCFI21:
 570              		.cfi_def_cfa_offset 16
 571 0004 00AF     		add	r7, sp, #0
 572              	.LCFI22:
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 627:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 628:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 575              		.loc 1 628 0
 576 0008 7B68     		ldr	r3, [r7, #4]
 577 000a 002B     		cmp	r3, #0
 578 000c 01D1     		bne	.L18
ARM GAS  /tmp/ccRTMmaY.s 			page 22


 629:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 630:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 579              		.loc 1 630 0
 580 000e 0123     		movs	r3, #1
 581 0010 1EE0     		b	.L19
 582              	.L18:
 631:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 632:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 633:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 634:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 635:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 636:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 583              		.loc 1 636 0
 584 0012 7B68     		ldr	r3, [r7, #4]
 585 0014 2422     		movs	r2, #36
 586 0016 83F83920 		strb	r2, [r3, #57]
 637:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 639:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 587              		.loc 1 639 0
 588 001a 7B68     		ldr	r3, [r7, #4]
 589 001c 1B68     		ldr	r3, [r3]
 590 001e DA68     		ldr	r2, [r3, #12]
 591 0020 7B68     		ldr	r3, [r7, #4]
 592 0022 1B68     		ldr	r3, [r3]
 593 0024 22F40052 		bic	r2, r2, #8192
 594 0028 DA60     		str	r2, [r3, #12]
 640:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 641:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 642:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 643:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 644:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 645:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 646:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 647:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 648:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 649:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 595              		.loc 1 650 0
 596 002a 7868     		ldr	r0, [r7, #4]
 597 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 651:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 652:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 653:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 598              		.loc 1 653 0
 599 0030 7B68     		ldr	r3, [r7, #4]
 600 0032 0022     		movs	r2, #0
 601 0034 DA63     		str	r2, [r3, #60]
 654:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 602              		.loc 1 654 0
 603 0036 7B68     		ldr	r3, [r7, #4]
 604 0038 0022     		movs	r2, #0
 605 003a 83F83920 		strb	r2, [r3, #57]
 655:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 606              		.loc 1 655 0
 607 003e 7B68     		ldr	r3, [r7, #4]
 608 0040 0022     		movs	r2, #0
ARM GAS  /tmp/ccRTMmaY.s 			page 23


 609 0042 83F83A20 		strb	r2, [r3, #58]
 656:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 657:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 658:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 610              		.loc 1 658 0
 611 0046 7B68     		ldr	r3, [r7, #4]
 612 0048 0022     		movs	r2, #0
 613 004a 83F83820 		strb	r2, [r3, #56]
 659:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 660:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 614              		.loc 1 660 0
 615 004e 0023     		movs	r3, #0
 616              	.L19:
 661:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 617              		.loc 1 661 0
 618 0050 1846     		mov	r0, r3
 619 0052 0837     		adds	r7, r7, #8
 620              	.LCFI23:
 621              		.cfi_def_cfa_offset 8
 622 0054 BD46     		mov	sp, r7
 623              	.LCFI24:
 624              		.cfi_def_cfa_register 13
 625              		@ sp needed
 626 0056 80BD     		pop	{r7, pc}
 627              		.cfi_endproc
 628              	.LFE134:
 630              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 631              		.align	1
 632              		.weak	HAL_UART_MspInit
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv4-sp-d16
 638              	HAL_UART_MspInit:
 639              	.LFB135:
 662:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 663:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 664:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 665:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 666:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 667:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 668:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 669:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 670:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 640              		.loc 1 670 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
 646              	.LCFI25:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 7, -4
 649 0002 83B0     		sub	sp, sp, #12
 650              	.LCFI26:
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccRTMmaY.s 			page 24


 653              	.LCFI27:
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 671:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 672:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 673:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 674:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 675:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 676:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 656              		.loc 1 676 0
 657 0008 00BF     		nop
 658 000a 0C37     		adds	r7, r7, #12
 659              	.LCFI28:
 660              		.cfi_def_cfa_offset 4
 661 000c BD46     		mov	sp, r7
 662              	.LCFI29:
 663              		.cfi_def_cfa_register 13
 664              		@ sp needed
 665 000e 5DF8047B 		ldr	r7, [sp], #4
 666              	.LCFI30:
 667              		.cfi_restore 7
 668              		.cfi_def_cfa_offset 0
 669 0012 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE135:
 673              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 674              		.align	1
 675              		.weak	HAL_UART_MspDeInit
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu fpv4-sp-d16
 681              	HAL_UART_MspDeInit:
 682              	.LFB136:
 677:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 679:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 680:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 681:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 682:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 683:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 684:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 685:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 683              		.loc 1 685 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 8
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688 0000 80B4     		push	{r7}
 689              	.LCFI31:
 690              		.cfi_def_cfa_offset 4
 691              		.cfi_offset 7, -4
 692 0002 83B0     		sub	sp, sp, #12
 693              	.LCFI32:
 694              		.cfi_def_cfa_offset 16
 695 0004 00AF     		add	r7, sp, #0
 696              	.LCFI33:
ARM GAS  /tmp/ccRTMmaY.s 			page 25


 697              		.cfi_def_cfa_register 7
 698 0006 7860     		str	r0, [r7, #4]
 686:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 687:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 688:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 689:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 690:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 691:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 699              		.loc 1 691 0
 700 0008 00BF     		nop
 701 000a 0C37     		adds	r7, r7, #12
 702              	.LCFI34:
 703              		.cfi_def_cfa_offset 4
 704 000c BD46     		mov	sp, r7
 705              	.LCFI35:
 706              		.cfi_def_cfa_register 13
 707              		@ sp needed
 708 000e 5DF8047B 		ldr	r7, [sp], #4
 709              	.LCFI36:
 710              		.cfi_restore 7
 711              		.cfi_def_cfa_offset 0
 712 0012 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE136:
 716              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 717              		.align	1
 718              		.global	HAL_UART_Transmit
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu fpv4-sp-d16
 724              	HAL_UART_Transmit:
 725              	.LFB137:
 692:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 694:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 695:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 696:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 697:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 698:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 699:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 700:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 701:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 702:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 703:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 704:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 705:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 706:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 707:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 708:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 709:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 710:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 711:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 712:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 713:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 714:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 715:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccRTMmaY.s 			page 26


 716:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 717:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 718:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 719:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 720:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 721:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 722:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 723:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 724:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 725:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 726:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 727:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 728:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 729:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 730:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 731:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 732:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 733:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 734:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 735:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 736:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 737:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 738:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 739:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 740:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 741:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 742:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 743:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 744:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 745:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 746:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 748:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 749:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 750:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 751:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 752:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 753:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 754:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 755:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 756:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 757:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 758:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 760:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 761:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 762:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 764:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 765:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 766:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 767:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 768:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 769:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 770:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 771:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 772:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
ARM GAS  /tmp/ccRTMmaY.s 			page 27


 773:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 774:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 775:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 776:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 777:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 778:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 779:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 780:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 781:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 782:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 783:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 784:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 785:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 786:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 787:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 788:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 789:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 790:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 791:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 792:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 793:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 794:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 795:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 796:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 797:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 799:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 800:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 801:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 802:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 803:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 804:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 805:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 807:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 808:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 809:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 810:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 811:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 812:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 814:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 815:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 816:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 817:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 818:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 819:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 820:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 821:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 822:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 823:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 824:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 825:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 826:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 827:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 828:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 829:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
ARM GAS  /tmp/ccRTMmaY.s 			page 28


 830:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 831:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 832:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 833:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 834:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 836:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 839:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 840:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 841:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 842:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 843:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 844:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 845:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 846:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 847:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 848:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 849:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 850:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 851:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 852:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 853:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 854:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 855:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 856:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 858:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 859:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 860:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 861:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 862:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 863:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 864:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 866:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 867:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 868:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 869:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 870:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 871:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 872:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 873:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 874:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 875:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 876:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 877:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 878:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 879:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 880:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 881:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 882:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 883:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 884:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 886:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
ARM GAS  /tmp/ccRTMmaY.s 			page 29


 887:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 888:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 889:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 890:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 891:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 892:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 893:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 894:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 895:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 896:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 897:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 898:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 899:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 900:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 901:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 902:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 903:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 904:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 905:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 907:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 908:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 909:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 910:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 911:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 912:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 913:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 914:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 915:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 916:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 917:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 918:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 919:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 920:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 921:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 922:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 924:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 925:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 926:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 928:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 929:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 930:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 933:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 934:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 935:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 936:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
 937:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 938:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 939:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 940:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 941:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 942:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 943:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
ARM GAS  /tmp/ccRTMmaY.s 			page 30


 944:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 945:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 946:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 947:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 948:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
 949:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 950:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
 951:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 952:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 953:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
 954:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 955:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
 956:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 957:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 958:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
 959:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 960:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 961:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 963:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 964:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 965:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 966:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 967:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 968:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 969:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 970:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 971:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 972:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 973:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 974:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 975:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 976:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 977:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 978:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 979:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 980:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 982:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 983:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 984:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 985:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 986:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 987:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 988:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 990:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 991:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 992:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 993:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 994:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 995:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
 996:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 997:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 998:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 999:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1000:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
ARM GAS  /tmp/ccRTMmaY.s 			page 31


1001:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1002:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1003:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1004:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1005:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1006:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1007:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1008:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1009:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1010:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1011:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1012:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1013:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1014:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1015:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1016:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1017:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1018:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1019:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1020:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1021:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1022:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1023:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1024:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1025:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 726              		.loc 1 1025 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 24
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              	.LCFI37:
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 7, -8
 734              		.cfi_offset 14, -4
 735 0002 88B0     		sub	sp, sp, #32
 736              	.LCFI38:
 737              		.cfi_def_cfa_offset 40
 738 0004 02AF     		add	r7, sp, #8
 739              	.LCFI39:
 740              		.cfi_def_cfa 7, 32
 741 0006 F860     		str	r0, [r7, #12]
 742 0008 B960     		str	r1, [r7, #8]
 743 000a 3B60     		str	r3, [r7]
 744 000c 1346     		mov	r3, r2	@ movhi
 745 000e FB80     		strh	r3, [r7, #6]	@ movhi
1026:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1027:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 746              		.loc 1 1027 0
 747 0010 0023     		movs	r3, #0
 748 0012 7B61     		str	r3, [r7, #20]
1028:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1029:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1030:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 749              		.loc 1 1030 0
 750 0014 FB68     		ldr	r3, [r7, #12]
 751 0016 93F83930 		ldrb	r3, [r3, #57]
 752 001a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccRTMmaY.s 			page 32


 753 001c 202B     		cmp	r3, #32
 754 001e 40F08380 		bne	.L23
1031:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1032:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 755              		.loc 1 1032 0
 756 0022 BB68     		ldr	r3, [r7, #8]
 757 0024 002B     		cmp	r3, #0
 758 0026 02D0     		beq	.L24
 759              		.loc 1 1032 0 is_stmt 0 discriminator 1
 760 0028 FB88     		ldrh	r3, [r7, #6]
 761 002a 002B     		cmp	r3, #0
 762 002c 01D1     		bne	.L25
 763              	.L24:
1033:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1034:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 764              		.loc 1 1034 0 is_stmt 1
 765 002e 0123     		movs	r3, #1
 766 0030 7BE0     		b	.L26
 767              	.L25:
1035:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1036:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1037:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1038:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 768              		.loc 1 1038 0
 769 0032 FB68     		ldr	r3, [r7, #12]
 770 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 771 0038 012B     		cmp	r3, #1
 772 003a 01D1     		bne	.L27
 773              		.loc 1 1038 0 is_stmt 0 discriminator 1
 774 003c 0223     		movs	r3, #2
 775 003e 74E0     		b	.L26
 776              	.L27:
 777              		.loc 1 1038 0 discriminator 2
 778 0040 FB68     		ldr	r3, [r7, #12]
 779 0042 0122     		movs	r2, #1
 780 0044 83F83820 		strb	r2, [r3, #56]
1039:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1040:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 781              		.loc 1 1040 0 is_stmt 1 discriminator 2
 782 0048 FB68     		ldr	r3, [r7, #12]
 783 004a 0022     		movs	r2, #0
 784 004c DA63     		str	r2, [r3, #60]
1041:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 785              		.loc 1 1041 0 discriminator 2
 786 004e FB68     		ldr	r3, [r7, #12]
 787 0050 2122     		movs	r2, #33
 788 0052 83F83920 		strb	r2, [r3, #57]
1042:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1044:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 789              		.loc 1 1044 0 discriminator 2
 790 0056 FFF7FEFF 		bl	HAL_GetTick
 791 005a 7861     		str	r0, [r7, #20]
1045:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1046:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 792              		.loc 1 1046 0 discriminator 2
 793 005c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccRTMmaY.s 			page 33


 794 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 795 0060 9A84     		strh	r2, [r3, #36]	@ movhi
1047:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 796              		.loc 1 1047 0 discriminator 2
 797 0062 FB68     		ldr	r3, [r7, #12]
 798 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 799 0066 DA84     		strh	r2, [r3, #38]	@ movhi
1048:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1049:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1050:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 800              		.loc 1 1050 0 discriminator 2
 801 0068 FB68     		ldr	r3, [r7, #12]
 802 006a 0022     		movs	r2, #0
 803 006c 83F83820 		strb	r2, [r3, #56]
1051:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1052:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 804              		.loc 1 1052 0 discriminator 2
 805 0070 42E0     		b	.L28
 806              	.L34:
1053:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1054:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 807              		.loc 1 1054 0
 808 0072 FB68     		ldr	r3, [r7, #12]
 809 0074 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 810 0076 9BB2     		uxth	r3, r3
 811 0078 013B     		subs	r3, r3, #1
 812 007a 9AB2     		uxth	r2, r3
 813 007c FB68     		ldr	r3, [r7, #12]
 814 007e DA84     		strh	r2, [r3, #38]	@ movhi
1055:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 815              		.loc 1 1055 0
 816 0080 FB68     		ldr	r3, [r7, #12]
 817 0082 9B68     		ldr	r3, [r3, #8]
 818 0084 B3F5805F 		cmp	r3, #4096
 819 0088 22D1     		bne	.L29
1056:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1057:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 820              		.loc 1 1057 0
 821 008a 3B68     		ldr	r3, [r7]
 822 008c 0093     		str	r3, [sp]
 823 008e 7B69     		ldr	r3, [r7, #20]
 824 0090 0022     		movs	r2, #0
 825 0092 8021     		movs	r1, #128
 826 0094 F868     		ldr	r0, [r7, #12]
 827 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 828 009a 0346     		mov	r3, r0
 829 009c 002B     		cmp	r3, #0
 830 009e 01D0     		beq	.L30
1058:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1059:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 831              		.loc 1 1059 0
 832 00a0 0323     		movs	r3, #3
 833 00a2 42E0     		b	.L26
 834              	.L30:
1060:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1061:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 835              		.loc 1 1061 0
ARM GAS  /tmp/ccRTMmaY.s 			page 34


 836 00a4 BB68     		ldr	r3, [r7, #8]
 837 00a6 3B61     		str	r3, [r7, #16]
1062:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 838              		.loc 1 1062 0
 839 00a8 3B69     		ldr	r3, [r7, #16]
 840 00aa 1B88     		ldrh	r3, [r3]
 841 00ac 1A46     		mov	r2, r3
 842 00ae FB68     		ldr	r3, [r7, #12]
 843 00b0 1B68     		ldr	r3, [r3]
 844 00b2 C2F30802 		ubfx	r2, r2, #0, #9
 845 00b6 5A60     		str	r2, [r3, #4]
1063:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 846              		.loc 1 1063 0
 847 00b8 FB68     		ldr	r3, [r7, #12]
 848 00ba 1B69     		ldr	r3, [r3, #16]
 849 00bc 002B     		cmp	r3, #0
 850 00be 03D1     		bne	.L31
1064:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1065:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 851              		.loc 1 1065 0
 852 00c0 BB68     		ldr	r3, [r7, #8]
 853 00c2 0233     		adds	r3, r3, #2
 854 00c4 BB60     		str	r3, [r7, #8]
 855 00c6 17E0     		b	.L28
 856              	.L31:
1066:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1067:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1068:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1069:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 857              		.loc 1 1069 0
 858 00c8 BB68     		ldr	r3, [r7, #8]
 859 00ca 0133     		adds	r3, r3, #1
 860 00cc BB60     		str	r3, [r7, #8]
 861 00ce 13E0     		b	.L28
 862              	.L29:
1070:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1071:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1072:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1073:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1074:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 863              		.loc 1 1074 0
 864 00d0 3B68     		ldr	r3, [r7]
 865 00d2 0093     		str	r3, [sp]
 866 00d4 7B69     		ldr	r3, [r7, #20]
 867 00d6 0022     		movs	r2, #0
 868 00d8 8021     		movs	r1, #128
 869 00da F868     		ldr	r0, [r7, #12]
 870 00dc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 871 00e0 0346     		mov	r3, r0
 872 00e2 002B     		cmp	r3, #0
 873 00e4 01D0     		beq	.L33
1075:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1076:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 874              		.loc 1 1076 0
 875 00e6 0323     		movs	r3, #3
 876 00e8 1FE0     		b	.L26
 877              	.L33:
ARM GAS  /tmp/ccRTMmaY.s 			page 35


1077:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1078:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 878              		.loc 1 1078 0
 879 00ea BB68     		ldr	r3, [r7, #8]
 880 00ec 5A1C     		adds	r2, r3, #1
 881 00ee BA60     		str	r2, [r7, #8]
 882 00f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 883 00f2 FB68     		ldr	r3, [r7, #12]
 884 00f4 1B68     		ldr	r3, [r3]
 885 00f6 5A60     		str	r2, [r3, #4]
 886              	.L28:
1052:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 887              		.loc 1 1052 0
 888 00f8 FB68     		ldr	r3, [r7, #12]
 889 00fa DB8C     		ldrh	r3, [r3, #38]	@ movhi
 890 00fc 9BB2     		uxth	r3, r3
 891 00fe 002B     		cmp	r3, #0
 892 0100 B7D1     		bne	.L34
1079:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1080:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1081:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 893              		.loc 1 1082 0
 894 0102 3B68     		ldr	r3, [r7]
 895 0104 0093     		str	r3, [sp]
 896 0106 7B69     		ldr	r3, [r7, #20]
 897 0108 0022     		movs	r2, #0
 898 010a 4021     		movs	r1, #64
 899 010c F868     		ldr	r0, [r7, #12]
 900 010e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 901 0112 0346     		mov	r3, r0
 902 0114 002B     		cmp	r3, #0
 903 0116 01D0     		beq	.L35
1083:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1084:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 904              		.loc 1 1084 0
 905 0118 0323     		movs	r3, #3
 906 011a 06E0     		b	.L26
 907              	.L35:
1085:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1086:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1087:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1088:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 908              		.loc 1 1088 0
 909 011c FB68     		ldr	r3, [r7, #12]
 910 011e 2022     		movs	r2, #32
 911 0120 83F83920 		strb	r2, [r3, #57]
1089:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 912              		.loc 1 1090 0
 913 0124 0023     		movs	r3, #0
 914 0126 00E0     		b	.L26
 915              	.L23:
1091:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1092:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1093:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1094:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
ARM GAS  /tmp/ccRTMmaY.s 			page 36


 916              		.loc 1 1094 0
 917 0128 0223     		movs	r3, #2
 918              	.L26:
1095:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1096:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 919              		.loc 1 1096 0
 920 012a 1846     		mov	r0, r3
 921 012c 1837     		adds	r7, r7, #24
 922              	.LCFI40:
 923              		.cfi_def_cfa_offset 8
 924 012e BD46     		mov	sp, r7
 925              	.LCFI41:
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 0130 80BD     		pop	{r7, pc}
 929              		.cfi_endproc
 930              	.LFE137:
 932              		.section	.text.HAL_UART_Receive,"ax",%progbits
 933              		.align	1
 934              		.global	HAL_UART_Receive
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv4-sp-d16
 940              	HAL_UART_Receive:
 941              	.LFB138:
1097:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1099:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1100:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1101:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1102:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1103:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1104:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1105:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1106:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1107:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1108:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1109:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1110:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1111:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 942              		.loc 1 1111 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 24
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946 0000 80B5     		push	{r7, lr}
 947              	.LCFI42:
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 7, -8
 950              		.cfi_offset 14, -4
 951 0002 88B0     		sub	sp, sp, #32
 952              	.LCFI43:
 953              		.cfi_def_cfa_offset 40
 954 0004 02AF     		add	r7, sp, #8
 955              	.LCFI44:
 956              		.cfi_def_cfa 7, 32
 957 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccRTMmaY.s 			page 37


 958 0008 B960     		str	r1, [r7, #8]
 959 000a 3B60     		str	r3, [r7]
 960 000c 1346     		mov	r3, r2	@ movhi
 961 000e FB80     		strh	r3, [r7, #6]	@ movhi
1112:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1113:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 962              		.loc 1 1113 0
 963 0010 0023     		movs	r3, #0
 964 0012 7B61     		str	r3, [r7, #20]
1114:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1116:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 965              		.loc 1 1116 0
 966 0014 FB68     		ldr	r3, [r7, #12]
 967 0016 93F83A30 		ldrb	r3, [r3, #58]
 968 001a DBB2     		uxtb	r3, r3
 969 001c 202B     		cmp	r3, #32
 970 001e 40F09080 		bne	.L37
1117:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1118:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 971              		.loc 1 1118 0
 972 0022 BB68     		ldr	r3, [r7, #8]
 973 0024 002B     		cmp	r3, #0
 974 0026 02D0     		beq	.L38
 975              		.loc 1 1118 0 is_stmt 0 discriminator 1
 976 0028 FB88     		ldrh	r3, [r7, #6]
 977 002a 002B     		cmp	r3, #0
 978 002c 01D1     		bne	.L39
 979              	.L38:
1119:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1120:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 980              		.loc 1 1120 0 is_stmt 1
 981 002e 0123     		movs	r3, #1
 982 0030 88E0     		b	.L40
 983              	.L39:
1121:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1122:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1124:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 984              		.loc 1 1124 0
 985 0032 FB68     		ldr	r3, [r7, #12]
 986 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 987 0038 012B     		cmp	r3, #1
 988 003a 01D1     		bne	.L41
 989              		.loc 1 1124 0 is_stmt 0 discriminator 1
 990 003c 0223     		movs	r3, #2
 991 003e 81E0     		b	.L40
 992              	.L41:
 993              		.loc 1 1124 0 discriminator 2
 994 0040 FB68     		ldr	r3, [r7, #12]
 995 0042 0122     		movs	r2, #1
 996 0044 83F83820 		strb	r2, [r3, #56]
1125:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1126:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 997              		.loc 1 1126 0 is_stmt 1 discriminator 2
 998 0048 FB68     		ldr	r3, [r7, #12]
 999 004a 0022     		movs	r2, #0
ARM GAS  /tmp/ccRTMmaY.s 			page 38


 1000 004c DA63     		str	r2, [r3, #60]
1127:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1001              		.loc 1 1127 0 discriminator 2
 1002 004e FB68     		ldr	r3, [r7, #12]
 1003 0050 2222     		movs	r2, #34
 1004 0052 83F83A20 		strb	r2, [r3, #58]
1128:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1129:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1130:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1005              		.loc 1 1130 0 discriminator 2
 1006 0056 FFF7FEFF 		bl	HAL_GetTick
 1007 005a 7861     		str	r0, [r7, #20]
1131:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1132:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1008              		.loc 1 1132 0 discriminator 2
 1009 005c FB68     		ldr	r3, [r7, #12]
 1010 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1011 0060 9A85     		strh	r2, [r3, #44]	@ movhi
1133:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1012              		.loc 1 1133 0 discriminator 2
 1013 0062 FB68     		ldr	r3, [r7, #12]
 1014 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1015 0066 DA85     		strh	r2, [r3, #46]	@ movhi
1134:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1135:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1136:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1016              		.loc 1 1136 0 discriminator 2
 1017 0068 FB68     		ldr	r3, [r7, #12]
 1018 006a 0022     		movs	r2, #0
 1019 006c 83F83820 		strb	r2, [r3, #56]
1137:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1139:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1020              		.loc 1 1139 0 discriminator 2
 1021 0070 5CE0     		b	.L42
 1022              	.L49:
1140:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1023              		.loc 1 1141 0
 1024 0072 FB68     		ldr	r3, [r7, #12]
 1025 0074 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1026 0076 9BB2     		uxth	r3, r3
 1027 0078 013B     		subs	r3, r3, #1
 1028 007a 9AB2     		uxth	r2, r3
 1029 007c FB68     		ldr	r3, [r7, #12]
 1030 007e DA85     		strh	r2, [r3, #46]	@ movhi
1142:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1031              		.loc 1 1142 0
 1032 0080 FB68     		ldr	r3, [r7, #12]
 1033 0082 9B68     		ldr	r3, [r3, #8]
 1034 0084 B3F5805F 		cmp	r3, #4096
 1035 0088 2BD1     		bne	.L43
1143:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1144:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1036              		.loc 1 1144 0
 1037 008a 3B68     		ldr	r3, [r7]
 1038 008c 0093     		str	r3, [sp]
ARM GAS  /tmp/ccRTMmaY.s 			page 39


 1039 008e 7B69     		ldr	r3, [r7, #20]
 1040 0090 0022     		movs	r2, #0
 1041 0092 2021     		movs	r1, #32
 1042 0094 F868     		ldr	r0, [r7, #12]
 1043 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1044 009a 0346     		mov	r3, r0
 1045 009c 002B     		cmp	r3, #0
 1046 009e 01D0     		beq	.L44
1145:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1146:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1047              		.loc 1 1146 0
 1048 00a0 0323     		movs	r3, #3
 1049 00a2 4FE0     		b	.L40
 1050              	.L44:
1147:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1148:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 1051              		.loc 1 1148 0
 1052 00a4 BB68     		ldr	r3, [r7, #8]
 1053 00a6 3B61     		str	r3, [r7, #16]
1149:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1054              		.loc 1 1149 0
 1055 00a8 FB68     		ldr	r3, [r7, #12]
 1056 00aa 1B69     		ldr	r3, [r3, #16]
 1057 00ac 002B     		cmp	r3, #0
 1058 00ae 0CD1     		bne	.L45
1150:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1151:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1059              		.loc 1 1151 0
 1060 00b0 FB68     		ldr	r3, [r7, #12]
 1061 00b2 1B68     		ldr	r3, [r3]
 1062 00b4 5B68     		ldr	r3, [r3, #4]
 1063 00b6 9BB2     		uxth	r3, r3
 1064 00b8 C3F30803 		ubfx	r3, r3, #0, #9
 1065 00bc 9AB2     		uxth	r2, r3
 1066 00be 3B69     		ldr	r3, [r7, #16]
 1067 00c0 1A80     		strh	r2, [r3]	@ movhi
1152:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 1068              		.loc 1 1152 0
 1069 00c2 BB68     		ldr	r3, [r7, #8]
 1070 00c4 0233     		adds	r3, r3, #2
 1071 00c6 BB60     		str	r3, [r7, #8]
 1072 00c8 30E0     		b	.L42
 1073              	.L45:
1153:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1154:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1155:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1156:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1074              		.loc 1 1156 0
 1075 00ca FB68     		ldr	r3, [r7, #12]
 1076 00cc 1B68     		ldr	r3, [r3]
 1077 00ce 5B68     		ldr	r3, [r3, #4]
 1078 00d0 9BB2     		uxth	r3, r3
 1079 00d2 DBB2     		uxtb	r3, r3
 1080 00d4 9AB2     		uxth	r2, r3
 1081 00d6 3B69     		ldr	r3, [r7, #16]
 1082 00d8 1A80     		strh	r2, [r3]	@ movhi
1157:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
ARM GAS  /tmp/ccRTMmaY.s 			page 40


 1083              		.loc 1 1157 0
 1084 00da BB68     		ldr	r3, [r7, #8]
 1085 00dc 0133     		adds	r3, r3, #1
 1086 00de BB60     		str	r3, [r7, #8]
 1087 00e0 24E0     		b	.L42
 1088              	.L43:
1158:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1159:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1160:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1161:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1162:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1163:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1089              		.loc 1 1163 0
 1090 00e2 3B68     		ldr	r3, [r7]
 1091 00e4 0093     		str	r3, [sp]
 1092 00e6 7B69     		ldr	r3, [r7, #20]
 1093 00e8 0022     		movs	r2, #0
 1094 00ea 2021     		movs	r1, #32
 1095 00ec F868     		ldr	r0, [r7, #12]
 1096 00ee FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1097 00f2 0346     		mov	r3, r0
 1098 00f4 002B     		cmp	r3, #0
 1099 00f6 01D0     		beq	.L47
1164:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1165:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1100              		.loc 1 1165 0
 1101 00f8 0323     		movs	r3, #3
 1102 00fa 23E0     		b	.L40
 1103              	.L47:
1166:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1167:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1104              		.loc 1 1167 0
 1105 00fc FB68     		ldr	r3, [r7, #12]
 1106 00fe 1B69     		ldr	r3, [r3, #16]
 1107 0100 002B     		cmp	r3, #0
 1108 0102 08D1     		bne	.L48
1168:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1169:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1109              		.loc 1 1169 0
 1110 0104 FB68     		ldr	r3, [r7, #12]
 1111 0106 1B68     		ldr	r3, [r3]
 1112 0108 5968     		ldr	r1, [r3, #4]
 1113 010a BB68     		ldr	r3, [r7, #8]
 1114 010c 5A1C     		adds	r2, r3, #1
 1115 010e BA60     		str	r2, [r7, #8]
 1116 0110 CAB2     		uxtb	r2, r1
 1117 0112 1A70     		strb	r2, [r3]
 1118 0114 0AE0     		b	.L42
 1119              	.L48:
1170:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1171:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1172:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1173:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1120              		.loc 1 1173 0
 1121 0116 FB68     		ldr	r3, [r7, #12]
 1122 0118 1B68     		ldr	r3, [r3]
 1123 011a 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccRTMmaY.s 			page 41


 1124 011c DAB2     		uxtb	r2, r3
 1125 011e BB68     		ldr	r3, [r7, #8]
 1126 0120 591C     		adds	r1, r3, #1
 1127 0122 B960     		str	r1, [r7, #8]
 1128 0124 02F07F02 		and	r2, r2, #127
 1129 0128 D2B2     		uxtb	r2, r2
 1130 012a 1A70     		strb	r2, [r3]
 1131              	.L42:
1139:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1132              		.loc 1 1139 0
 1133 012c FB68     		ldr	r3, [r7, #12]
 1134 012e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1135 0130 9BB2     		uxth	r3, r3
 1136 0132 002B     		cmp	r3, #0
 1137 0134 9DD1     		bne	.L49
1174:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1175:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1177:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1178:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1180:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1138              		.loc 1 1180 0
 1139 0136 FB68     		ldr	r3, [r7, #12]
 1140 0138 2022     		movs	r2, #32
 1141 013a 83F83A20 		strb	r2, [r3, #58]
1181:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1182:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1142              		.loc 1 1182 0
 1143 013e 0023     		movs	r3, #0
 1144 0140 00E0     		b	.L40
 1145              	.L37:
1183:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1184:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1185:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1186:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1146              		.loc 1 1186 0
 1147 0142 0223     		movs	r3, #2
 1148              	.L40:
1187:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1188:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1149              		.loc 1 1188 0
 1150 0144 1846     		mov	r0, r3
 1151 0146 1837     		adds	r7, r7, #24
 1152              	.LCFI45:
 1153              		.cfi_def_cfa_offset 8
 1154 0148 BD46     		mov	sp, r7
 1155              	.LCFI46:
 1156              		.cfi_def_cfa_register 13
 1157              		@ sp needed
 1158 014a 80BD     		pop	{r7, pc}
 1159              		.cfi_endproc
 1160              	.LFE138:
 1162              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1163              		.align	1
 1164              		.global	HAL_UART_Transmit_IT
 1165              		.syntax unified
ARM GAS  /tmp/ccRTMmaY.s 			page 42


 1166              		.thumb
 1167              		.thumb_func
 1168              		.fpu fpv4-sp-d16
 1170              	HAL_UART_Transmit_IT:
 1171              	.LFB139:
1189:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1190:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1191:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1192:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1193:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1194:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1195:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1196:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1197:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1198:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1199:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1200:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1201:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1202:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1172              		.loc 1 1202 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 16
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 0000 80B4     		push	{r7}
 1178              	.LCFI47:
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 7, -4
 1181 0002 85B0     		sub	sp, sp, #20
 1182              	.LCFI48:
 1183              		.cfi_def_cfa_offset 24
 1184 0004 00AF     		add	r7, sp, #0
 1185              	.LCFI49:
 1186              		.cfi_def_cfa_register 7
 1187 0006 F860     		str	r0, [r7, #12]
 1188 0008 B960     		str	r1, [r7, #8]
 1189 000a 1346     		mov	r3, r2
 1190 000c FB80     		strh	r3, [r7, #6]	@ movhi
1203:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1204:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1191              		.loc 1 1204 0
 1192 000e FB68     		ldr	r3, [r7, #12]
 1193 0010 93F83930 		ldrb	r3, [r3, #57]
 1194 0014 DBB2     		uxtb	r3, r3
 1195 0016 202B     		cmp	r3, #32
 1196 0018 30D1     		bne	.L51
1205:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1206:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1197              		.loc 1 1206 0
 1198 001a BB68     		ldr	r3, [r7, #8]
 1199 001c 002B     		cmp	r3, #0
 1200 001e 02D0     		beq	.L52
 1201              		.loc 1 1206 0 is_stmt 0 discriminator 1
 1202 0020 FB88     		ldrh	r3, [r7, #6]
 1203 0022 002B     		cmp	r3, #0
 1204 0024 01D1     		bne	.L53
 1205              	.L52:
ARM GAS  /tmp/ccRTMmaY.s 			page 43


1207:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1208:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1206              		.loc 1 1208 0 is_stmt 1
 1207 0026 0123     		movs	r3, #1
 1208 0028 29E0     		b	.L54
 1209              	.L53:
1209:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1212:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1210              		.loc 1 1212 0
 1211 002a FB68     		ldr	r3, [r7, #12]
 1212 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1213 0030 012B     		cmp	r3, #1
 1214 0032 01D1     		bne	.L55
 1215              		.loc 1 1212 0 is_stmt 0 discriminator 1
 1216 0034 0223     		movs	r3, #2
 1217 0036 22E0     		b	.L54
 1218              	.L55:
 1219              		.loc 1 1212 0 discriminator 2
 1220 0038 FB68     		ldr	r3, [r7, #12]
 1221 003a 0122     		movs	r2, #1
 1222 003c 83F83820 		strb	r2, [r3, #56]
1213:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1223              		.loc 1 1214 0 is_stmt 1 discriminator 2
 1224 0040 FB68     		ldr	r3, [r7, #12]
 1225 0042 BA68     		ldr	r2, [r7, #8]
 1226 0044 1A62     		str	r2, [r3, #32]
1215:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1227              		.loc 1 1215 0 discriminator 2
 1228 0046 FB68     		ldr	r3, [r7, #12]
 1229 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1230 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1216:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1231              		.loc 1 1216 0 discriminator 2
 1232 004c FB68     		ldr	r3, [r7, #12]
 1233 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1234 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1217:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1235              		.loc 1 1218 0 discriminator 2
 1236 0052 FB68     		ldr	r3, [r7, #12]
 1237 0054 0022     		movs	r2, #0
 1238 0056 DA63     		str	r2, [r3, #60]
1219:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1239              		.loc 1 1219 0 discriminator 2
 1240 0058 FB68     		ldr	r3, [r7, #12]
 1241 005a 2122     		movs	r2, #33
 1242 005c 83F83920 		strb	r2, [r3, #57]
1220:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1222:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1243              		.loc 1 1222 0 discriminator 2
 1244 0060 FB68     		ldr	r3, [r7, #12]
 1245 0062 0022     		movs	r2, #0
 1246 0064 83F83820 		strb	r2, [r3, #56]
ARM GAS  /tmp/ccRTMmaY.s 			page 44


1223:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1224:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1225:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1247              		.loc 1 1225 0 discriminator 2
 1248 0068 FB68     		ldr	r3, [r7, #12]
 1249 006a 1B68     		ldr	r3, [r3]
 1250 006c DA68     		ldr	r2, [r3, #12]
 1251 006e FB68     		ldr	r3, [r7, #12]
 1252 0070 1B68     		ldr	r3, [r3]
 1253 0072 42F08002 		orr	r2, r2, #128
 1254 0076 DA60     		str	r2, [r3, #12]
1226:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1227:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1255              		.loc 1 1227 0 discriminator 2
 1256 0078 0023     		movs	r3, #0
 1257 007a 00E0     		b	.L54
 1258              	.L51:
1228:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1229:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1230:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1231:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1259              		.loc 1 1231 0
 1260 007c 0223     		movs	r3, #2
 1261              	.L54:
1232:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1233:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1262              		.loc 1 1233 0
 1263 007e 1846     		mov	r0, r3
 1264 0080 1437     		adds	r7, r7, #20
 1265              	.LCFI50:
 1266              		.cfi_def_cfa_offset 4
 1267 0082 BD46     		mov	sp, r7
 1268              	.LCFI51:
 1269              		.cfi_def_cfa_register 13
 1270              		@ sp needed
 1271 0084 5DF8047B 		ldr	r7, [sp], #4
 1272              	.LCFI52:
 1273              		.cfi_restore 7
 1274              		.cfi_def_cfa_offset 0
 1275 0088 7047     		bx	lr
 1276              		.cfi_endproc
 1277              	.LFE139:
 1279              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1280              		.align	1
 1281              		.global	HAL_UART_Receive_IT
 1282              		.syntax unified
 1283              		.thumb
 1284              		.thumb_func
 1285              		.fpu fpv4-sp-d16
 1287              	HAL_UART_Receive_IT:
 1288              	.LFB140:
1234:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1235:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1236:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1237:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1238:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1239:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
ARM GAS  /tmp/ccRTMmaY.s 			page 45


1240:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1241:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1242:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1243:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1244:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1245:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1246:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1247:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1289              		.loc 1 1247 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 16
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 1294 0000 80B4     		push	{r7}
 1295              	.LCFI53:
 1296              		.cfi_def_cfa_offset 4
 1297              		.cfi_offset 7, -4
 1298 0002 85B0     		sub	sp, sp, #20
 1299              	.LCFI54:
 1300              		.cfi_def_cfa_offset 24
 1301 0004 00AF     		add	r7, sp, #0
 1302              	.LCFI55:
 1303              		.cfi_def_cfa_register 7
 1304 0006 F860     		str	r0, [r7, #12]
 1305 0008 B960     		str	r1, [r7, #8]
 1306 000a 1346     		mov	r3, r2
 1307 000c FB80     		strh	r3, [r7, #6]	@ movhi
1248:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1249:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1308              		.loc 1 1249 0
 1309 000e FB68     		ldr	r3, [r7, #12]
 1310 0010 93F83A30 		ldrb	r3, [r3, #58]
 1311 0014 DBB2     		uxtb	r3, r3
 1312 0016 202B     		cmp	r3, #32
 1313 0018 40D1     		bne	.L57
1250:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1251:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1314              		.loc 1 1251 0
 1315 001a BB68     		ldr	r3, [r7, #8]
 1316 001c 002B     		cmp	r3, #0
 1317 001e 02D0     		beq	.L58
 1318              		.loc 1 1251 0 is_stmt 0 discriminator 1
 1319 0020 FB88     		ldrh	r3, [r7, #6]
 1320 0022 002B     		cmp	r3, #0
 1321 0024 01D1     		bne	.L59
 1322              	.L58:
1252:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1323              		.loc 1 1253 0 is_stmt 1
 1324 0026 0123     		movs	r3, #1
 1325 0028 39E0     		b	.L60
 1326              	.L59:
1254:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1255:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1256:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1257:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1327              		.loc 1 1257 0
ARM GAS  /tmp/ccRTMmaY.s 			page 46


 1328 002a FB68     		ldr	r3, [r7, #12]
 1329 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1330 0030 012B     		cmp	r3, #1
 1331 0032 01D1     		bne	.L61
 1332              		.loc 1 1257 0 is_stmt 0 discriminator 1
 1333 0034 0223     		movs	r3, #2
 1334 0036 32E0     		b	.L60
 1335              	.L61:
 1336              		.loc 1 1257 0 discriminator 2
 1337 0038 FB68     		ldr	r3, [r7, #12]
 1338 003a 0122     		movs	r2, #1
 1339 003c 83F83820 		strb	r2, [r3, #56]
1258:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1259:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1340              		.loc 1 1259 0 is_stmt 1 discriminator 2
 1341 0040 FB68     		ldr	r3, [r7, #12]
 1342 0042 BA68     		ldr	r2, [r7, #8]
 1343 0044 9A62     		str	r2, [r3, #40]
1260:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1344              		.loc 1 1260 0 discriminator 2
 1345 0046 FB68     		ldr	r3, [r7, #12]
 1346 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1347 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1261:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1348              		.loc 1 1261 0 discriminator 2
 1349 004c FB68     		ldr	r3, [r7, #12]
 1350 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1351 0050 DA85     		strh	r2, [r3, #46]	@ movhi
1262:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1352              		.loc 1 1263 0 discriminator 2
 1353 0052 FB68     		ldr	r3, [r7, #12]
 1354 0054 0022     		movs	r2, #0
 1355 0056 DA63     		str	r2, [r3, #60]
1264:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1356              		.loc 1 1264 0 discriminator 2
 1357 0058 FB68     		ldr	r3, [r7, #12]
 1358 005a 2222     		movs	r2, #34
 1359 005c 83F83A20 		strb	r2, [r3, #58]
1265:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1267:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1360              		.loc 1 1267 0 discriminator 2
 1361 0060 FB68     		ldr	r3, [r7, #12]
 1362 0062 0022     		movs	r2, #0
 1363 0064 83F83820 		strb	r2, [r3, #56]
1268:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1269:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1270:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1364              		.loc 1 1270 0 discriminator 2
 1365 0068 FB68     		ldr	r3, [r7, #12]
 1366 006a 1B68     		ldr	r3, [r3]
 1367 006c DA68     		ldr	r2, [r3, #12]
 1368 006e FB68     		ldr	r3, [r7, #12]
 1369 0070 1B68     		ldr	r3, [r3]
 1370 0072 42F48072 		orr	r2, r2, #256
 1371 0076 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccRTMmaY.s 			page 47


1271:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1272:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1273:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1372              		.loc 1 1273 0 discriminator 2
 1373 0078 FB68     		ldr	r3, [r7, #12]
 1374 007a 1B68     		ldr	r3, [r3]
 1375 007c 5A69     		ldr	r2, [r3, #20]
 1376 007e FB68     		ldr	r3, [r7, #12]
 1377 0080 1B68     		ldr	r3, [r3]
 1378 0082 42F00102 		orr	r2, r2, #1
 1379 0086 5A61     		str	r2, [r3, #20]
1274:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1275:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
1276:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1380              		.loc 1 1276 0 discriminator 2
 1381 0088 FB68     		ldr	r3, [r7, #12]
 1382 008a 1B68     		ldr	r3, [r3]
 1383 008c DA68     		ldr	r2, [r3, #12]
 1384 008e FB68     		ldr	r3, [r7, #12]
 1385 0090 1B68     		ldr	r3, [r3]
 1386 0092 42F02002 		orr	r2, r2, #32
 1387 0096 DA60     		str	r2, [r3, #12]
1277:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1278:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1388              		.loc 1 1278 0 discriminator 2
 1389 0098 0023     		movs	r3, #0
 1390 009a 00E0     		b	.L60
 1391              	.L57:
1279:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1280:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1281:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1282:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1392              		.loc 1 1282 0
 1393 009c 0223     		movs	r3, #2
 1394              	.L60:
1283:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1284:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1395              		.loc 1 1284 0
 1396 009e 1846     		mov	r0, r3
 1397 00a0 1437     		adds	r7, r7, #20
 1398              	.LCFI56:
 1399              		.cfi_def_cfa_offset 4
 1400 00a2 BD46     		mov	sp, r7
 1401              	.LCFI57:
 1402              		.cfi_def_cfa_register 13
 1403              		@ sp needed
 1404 00a4 5DF8047B 		ldr	r7, [sp], #4
 1405              	.LCFI58:
 1406              		.cfi_restore 7
 1407              		.cfi_def_cfa_offset 0
 1408 00a8 7047     		bx	lr
 1409              		.cfi_endproc
 1410              	.LFE140:
 1412              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1413              		.align	1
 1414              		.global	HAL_UART_Transmit_DMA
 1415              		.syntax unified
ARM GAS  /tmp/ccRTMmaY.s 			page 48


 1416              		.thumb
 1417              		.thumb_func
 1418              		.fpu fpv4-sp-d16
 1420              	HAL_UART_Transmit_DMA:
 1421              	.LFB141:
1285:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1287:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1288:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1289:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1290:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1291:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1292:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1293:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1294:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1295:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1296:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1297:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1298:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1422              		.loc 1 1298 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 24
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426 0000 80B5     		push	{r7, lr}
 1427              	.LCFI59:
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 86B0     		sub	sp, sp, #24
 1432              	.LCFI60:
 1433              		.cfi_def_cfa_offset 32
 1434 0004 00AF     		add	r7, sp, #0
 1435              	.LCFI61:
 1436              		.cfi_def_cfa_register 7
 1437 0006 F860     		str	r0, [r7, #12]
 1438 0008 B960     		str	r1, [r7, #8]
 1439 000a 1346     		mov	r3, r2
 1440 000c FB80     		strh	r3, [r7, #6]	@ movhi
1299:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1300:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1301:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1302:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1441              		.loc 1 1302 0
 1442 000e FB68     		ldr	r3, [r7, #12]
 1443 0010 93F83930 		ldrb	r3, [r3, #57]
 1444 0014 DBB2     		uxtb	r3, r3
 1445 0016 202B     		cmp	r3, #32
 1446 0018 53D1     		bne	.L63
1303:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1304:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1447              		.loc 1 1304 0
 1448 001a BB68     		ldr	r3, [r7, #8]
 1449 001c 002B     		cmp	r3, #0
 1450 001e 02D0     		beq	.L64
 1451              		.loc 1 1304 0 is_stmt 0 discriminator 1
 1452 0020 FB88     		ldrh	r3, [r7, #6]
 1453 0022 002B     		cmp	r3, #0
ARM GAS  /tmp/ccRTMmaY.s 			page 49


 1454 0024 01D1     		bne	.L65
 1455              	.L64:
1305:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1306:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1456              		.loc 1 1306 0 is_stmt 1
 1457 0026 0123     		movs	r3, #1
 1458 0028 4CE0     		b	.L66
 1459              	.L65:
1307:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1308:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1309:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1310:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1460              		.loc 1 1310 0
 1461 002a FB68     		ldr	r3, [r7, #12]
 1462 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1463 0030 012B     		cmp	r3, #1
 1464 0032 01D1     		bne	.L67
 1465              		.loc 1 1310 0 is_stmt 0 discriminator 1
 1466 0034 0223     		movs	r3, #2
 1467 0036 45E0     		b	.L66
 1468              	.L67:
 1469              		.loc 1 1310 0 discriminator 2
 1470 0038 FB68     		ldr	r3, [r7, #12]
 1471 003a 0122     		movs	r2, #1
 1472 003c 83F83820 		strb	r2, [r3, #56]
1311:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1312:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1473              		.loc 1 1312 0 is_stmt 1 discriminator 2
 1474 0040 BA68     		ldr	r2, [r7, #8]
 1475 0042 FB68     		ldr	r3, [r7, #12]
 1476 0044 1A62     		str	r2, [r3, #32]
1313:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1477              		.loc 1 1313 0 discriminator 2
 1478 0046 FB68     		ldr	r3, [r7, #12]
 1479 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1480 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1314:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1481              		.loc 1 1314 0 discriminator 2
 1482 004c FB68     		ldr	r3, [r7, #12]
 1483 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1484 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1315:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1485              		.loc 1 1316 0 discriminator 2
 1486 0052 FB68     		ldr	r3, [r7, #12]
 1487 0054 0022     		movs	r2, #0
 1488 0056 DA63     		str	r2, [r3, #60]
1317:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1489              		.loc 1 1317 0 discriminator 2
 1490 0058 FB68     		ldr	r3, [r7, #12]
 1491 005a 2122     		movs	r2, #33
 1492 005c 83F83920 		strb	r2, [r3, #57]
1318:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1319:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1320:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1493              		.loc 1 1320 0 discriminator 2
 1494 0060 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccRTMmaY.s 			page 50


 1495 0062 1B6B     		ldr	r3, [r3, #48]
 1496 0064 194A     		ldr	r2, .L68
 1497 0066 DA63     		str	r2, [r3, #60]
1321:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1323:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1498              		.loc 1 1323 0 discriminator 2
 1499 0068 FB68     		ldr	r3, [r7, #12]
 1500 006a 1B6B     		ldr	r3, [r3, #48]
 1501 006c 184A     		ldr	r2, .L68+4
 1502 006e 1A64     		str	r2, [r3, #64]
1324:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1326:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1503              		.loc 1 1326 0 discriminator 2
 1504 0070 FB68     		ldr	r3, [r7, #12]
 1505 0072 1B6B     		ldr	r3, [r3, #48]
 1506 0074 174A     		ldr	r2, .L68+8
 1507 0076 DA64     		str	r2, [r3, #76]
1327:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1329:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1508              		.loc 1 1329 0 discriminator 2
 1509 0078 FB68     		ldr	r3, [r7, #12]
 1510 007a 1B6B     		ldr	r3, [r3, #48]
 1511 007c 0022     		movs	r2, #0
 1512 007e 1A65     		str	r2, [r3, #80]
1330:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1331:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1332:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1513              		.loc 1 1332 0 discriminator 2
 1514 0080 07F10803 		add	r3, r7, #8
 1515 0084 7B61     		str	r3, [r7, #20]
1333:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1516              		.loc 1 1333 0 discriminator 2
 1517 0086 FB68     		ldr	r3, [r7, #12]
 1518 0088 186B     		ldr	r0, [r3, #48]
 1519 008a 7B69     		ldr	r3, [r7, #20]
 1520 008c 1968     		ldr	r1, [r3]
 1521 008e FB68     		ldr	r3, [r7, #12]
 1522 0090 1B68     		ldr	r3, [r3]
 1523 0092 0433     		adds	r3, r3, #4
 1524 0094 1A46     		mov	r2, r3
 1525 0096 FB88     		ldrh	r3, [r7, #6]
 1526 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1334:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1336:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1527              		.loc 1 1336 0 discriminator 2
 1528 009c FB68     		ldr	r3, [r7, #12]
 1529 009e 1B68     		ldr	r3, [r3]
 1530 00a0 6FF04002 		mvn	r2, #64
 1531 00a4 1A60     		str	r2, [r3]
1337:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1339:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1532              		.loc 1 1339 0 discriminator 2
ARM GAS  /tmp/ccRTMmaY.s 			page 51


 1533 00a6 FB68     		ldr	r3, [r7, #12]
 1534 00a8 0022     		movs	r2, #0
 1535 00aa 83F83820 		strb	r2, [r3, #56]
1340:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1342:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1343:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1536              		.loc 1 1343 0 discriminator 2
 1537 00ae FB68     		ldr	r3, [r7, #12]
 1538 00b0 1B68     		ldr	r3, [r3]
 1539 00b2 5A69     		ldr	r2, [r3, #20]
 1540 00b4 FB68     		ldr	r3, [r7, #12]
 1541 00b6 1B68     		ldr	r3, [r3]
 1542 00b8 42F08002 		orr	r2, r2, #128
 1543 00bc 5A61     		str	r2, [r3, #20]
1344:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1345:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1544              		.loc 1 1345 0 discriminator 2
 1545 00be 0023     		movs	r3, #0
 1546 00c0 00E0     		b	.L66
 1547              	.L63:
1346:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1348:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1349:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1548              		.loc 1 1349 0
 1549 00c2 0223     		movs	r3, #2
 1550              	.L66:
1350:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1351:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1551              		.loc 1 1351 0
 1552 00c4 1846     		mov	r0, r3
 1553 00c6 1837     		adds	r7, r7, #24
 1554              	.LCFI62:
 1555              		.cfi_def_cfa_offset 8
 1556 00c8 BD46     		mov	sp, r7
 1557              	.LCFI63:
 1558              		.cfi_def_cfa_register 13
 1559              		@ sp needed
 1560 00ca 80BD     		pop	{r7, pc}
 1561              	.L69:
 1562              		.align	2
 1563              	.L68:
 1564 00cc 00000000 		.word	UART_DMATransmitCplt
 1565 00d0 00000000 		.word	UART_DMATxHalfCplt
 1566 00d4 00000000 		.word	UART_DMAError
 1567              		.cfi_endproc
 1568              	.LFE141:
 1570              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1571              		.align	1
 1572              		.global	HAL_UART_Receive_DMA
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu fpv4-sp-d16
 1578              	HAL_UART_Receive_DMA:
 1579              	.LFB142:
ARM GAS  /tmp/ccRTMmaY.s 			page 52


1352:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1353:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1354:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1355:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1356:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1357:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1358:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1359:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1360:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1361:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1362:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1363:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1364:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1365:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1366:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1580              		.loc 1 1366 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 24
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 80B5     		push	{r7, lr}
 1585              	.LCFI64:
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 7, -8
 1588              		.cfi_offset 14, -4
 1589 0002 86B0     		sub	sp, sp, #24
 1590              	.LCFI65:
 1591              		.cfi_def_cfa_offset 32
 1592 0004 00AF     		add	r7, sp, #0
 1593              	.LCFI66:
 1594              		.cfi_def_cfa_register 7
 1595 0006 F860     		str	r0, [r7, #12]
 1596 0008 B960     		str	r1, [r7, #8]
 1597 000a 1346     		mov	r3, r2
 1598 000c FB80     		strh	r3, [r7, #6]	@ movhi
1367:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1368:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1369:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1370:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1599              		.loc 1 1370 0
 1600 000e FB68     		ldr	r3, [r7, #12]
 1601 0010 93F83A30 		ldrb	r3, [r3, #58]
 1602 0014 DBB2     		uxtb	r3, r3
 1603 0016 202B     		cmp	r3, #32
 1604 0018 66D1     		bne	.L71
1371:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1372:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1605              		.loc 1 1372 0
 1606 001a BB68     		ldr	r3, [r7, #8]
 1607 001c 002B     		cmp	r3, #0
 1608 001e 02D0     		beq	.L72
 1609              		.loc 1 1372 0 is_stmt 0 discriminator 1
 1610 0020 FB88     		ldrh	r3, [r7, #6]
 1611 0022 002B     		cmp	r3, #0
 1612 0024 01D1     		bne	.L73
 1613              	.L72:
1373:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1374:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccRTMmaY.s 			page 53


 1614              		.loc 1 1374 0 is_stmt 1
 1615 0026 0123     		movs	r3, #1
 1616 0028 5FE0     		b	.L74
 1617              	.L73:
1375:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1376:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1377:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1378:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1618              		.loc 1 1378 0
 1619 002a FB68     		ldr	r3, [r7, #12]
 1620 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1621 0030 012B     		cmp	r3, #1
 1622 0032 01D1     		bne	.L75
 1623              		.loc 1 1378 0 is_stmt 0 discriminator 1
 1624 0034 0223     		movs	r3, #2
 1625 0036 58E0     		b	.L74
 1626              	.L75:
 1627              		.loc 1 1378 0 discriminator 2
 1628 0038 FB68     		ldr	r3, [r7, #12]
 1629 003a 0122     		movs	r2, #1
 1630 003c 83F83820 		strb	r2, [r3, #56]
1379:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1380:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1631              		.loc 1 1380 0 is_stmt 1 discriminator 2
 1632 0040 BA68     		ldr	r2, [r7, #8]
 1633 0042 FB68     		ldr	r3, [r7, #12]
 1634 0044 9A62     		str	r2, [r3, #40]
1381:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1635              		.loc 1 1381 0 discriminator 2
 1636 0046 FB68     		ldr	r3, [r7, #12]
 1637 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1638 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1382:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1639              		.loc 1 1383 0 discriminator 2
 1640 004c FB68     		ldr	r3, [r7, #12]
 1641 004e 0022     		movs	r2, #0
 1642 0050 DA63     		str	r2, [r3, #60]
1384:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1643              		.loc 1 1384 0 discriminator 2
 1644 0052 FB68     		ldr	r3, [r7, #12]
 1645 0054 2222     		movs	r2, #34
 1646 0056 83F83A20 		strb	r2, [r3, #58]
1385:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1387:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1647              		.loc 1 1387 0 discriminator 2
 1648 005a FB68     		ldr	r3, [r7, #12]
 1649 005c 5B6B     		ldr	r3, [r3, #52]
 1650 005e 254A     		ldr	r2, .L76
 1651 0060 DA63     		str	r2, [r3, #60]
1388:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1389:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1390:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1652              		.loc 1 1390 0 discriminator 2
 1653 0062 FB68     		ldr	r3, [r7, #12]
 1654 0064 5B6B     		ldr	r3, [r3, #52]
ARM GAS  /tmp/ccRTMmaY.s 			page 54


 1655 0066 244A     		ldr	r2, .L76+4
 1656 0068 1A64     		str	r2, [r3, #64]
1391:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1392:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1393:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1657              		.loc 1 1393 0 discriminator 2
 1658 006a FB68     		ldr	r3, [r7, #12]
 1659 006c 5B6B     		ldr	r3, [r3, #52]
 1660 006e 234A     		ldr	r2, .L76+8
 1661 0070 DA64     		str	r2, [r3, #76]
1394:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1395:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1396:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1662              		.loc 1 1396 0 discriminator 2
 1663 0072 FB68     		ldr	r3, [r7, #12]
 1664 0074 5B6B     		ldr	r3, [r3, #52]
 1665 0076 0022     		movs	r2, #0
 1666 0078 1A65     		str	r2, [r3, #80]
1397:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA stream */
1399:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1667              		.loc 1 1399 0 discriminator 2
 1668 007a 07F10803 		add	r3, r7, #8
 1669 007e 7B61     		str	r3, [r7, #20]
1400:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 1670              		.loc 1 1400 0 discriminator 2
 1671 0080 FB68     		ldr	r3, [r7, #12]
 1672 0082 586B     		ldr	r0, [r3, #52]
 1673 0084 FB68     		ldr	r3, [r7, #12]
 1674 0086 1B68     		ldr	r3, [r3]
 1675 0088 0433     		adds	r3, r3, #4
 1676 008a 1946     		mov	r1, r3
 1677 008c 7B69     		ldr	r3, [r7, #20]
 1678 008e 1A68     		ldr	r2, [r3]
 1679 0090 FB88     		ldrh	r3, [r7, #6]
 1680 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1681              	.LBB2:
1401:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1402:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1403:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1682              		.loc 1 1403 0 discriminator 2
 1683 0096 0023     		movs	r3, #0
 1684 0098 3B61     		str	r3, [r7, #16]
 1685 009a FB68     		ldr	r3, [r7, #12]
 1686 009c 1B68     		ldr	r3, [r3]
 1687 009e 1B68     		ldr	r3, [r3]
 1688 00a0 3B61     		str	r3, [r7, #16]
 1689 00a2 FB68     		ldr	r3, [r7, #12]
 1690 00a4 1B68     		ldr	r3, [r3]
 1691 00a6 5B68     		ldr	r3, [r3, #4]
 1692 00a8 3B61     		str	r3, [r7, #16]
 1693 00aa 3B69     		ldr	r3, [r7, #16]
 1694              	.LBE2:
1404:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1406:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1695              		.loc 1 1406 0 discriminator 2
ARM GAS  /tmp/ccRTMmaY.s 			page 55


 1696 00ac FB68     		ldr	r3, [r7, #12]
 1697 00ae 0022     		movs	r2, #0
 1698 00b0 83F83820 		strb	r2, [r3, #56]
1407:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1408:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1409:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1699              		.loc 1 1409 0 discriminator 2
 1700 00b4 FB68     		ldr	r3, [r7, #12]
 1701 00b6 1B68     		ldr	r3, [r3]
 1702 00b8 DA68     		ldr	r2, [r3, #12]
 1703 00ba FB68     		ldr	r3, [r7, #12]
 1704 00bc 1B68     		ldr	r3, [r3]
 1705 00be 42F48072 		orr	r2, r2, #256
 1706 00c2 DA60     		str	r2, [r3, #12]
1410:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1411:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1412:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1707              		.loc 1 1412 0 discriminator 2
 1708 00c4 FB68     		ldr	r3, [r7, #12]
 1709 00c6 1B68     		ldr	r3, [r3]
 1710 00c8 5A69     		ldr	r2, [r3, #20]
 1711 00ca FB68     		ldr	r3, [r7, #12]
 1712 00cc 1B68     		ldr	r3, [r3]
 1713 00ce 42F00102 		orr	r2, r2, #1
 1714 00d2 5A61     		str	r2, [r3, #20]
1413:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1415:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
1416:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1715              		.loc 1 1416 0 discriminator 2
 1716 00d4 FB68     		ldr	r3, [r7, #12]
 1717 00d6 1B68     		ldr	r3, [r3]
 1718 00d8 5A69     		ldr	r2, [r3, #20]
 1719 00da FB68     		ldr	r3, [r7, #12]
 1720 00dc 1B68     		ldr	r3, [r3]
 1721 00de 42F04002 		orr	r2, r2, #64
 1722 00e2 5A61     		str	r2, [r3, #20]
1417:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1418:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1723              		.loc 1 1418 0 discriminator 2
 1724 00e4 0023     		movs	r3, #0
 1725 00e6 00E0     		b	.L74
 1726              	.L71:
1419:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1420:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1421:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1422:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1727              		.loc 1 1422 0
 1728 00e8 0223     		movs	r3, #2
 1729              	.L74:
1423:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1424:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1730              		.loc 1 1424 0
 1731 00ea 1846     		mov	r0, r3
 1732 00ec 1837     		adds	r7, r7, #24
 1733              	.LCFI67:
 1734              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccRTMmaY.s 			page 56


 1735 00ee BD46     		mov	sp, r7
 1736              	.LCFI68:
 1737              		.cfi_def_cfa_register 13
 1738              		@ sp needed
 1739 00f0 80BD     		pop	{r7, pc}
 1740              	.L77:
 1741 00f2 00BF     		.align	2
 1742              	.L76:
 1743 00f4 00000000 		.word	UART_DMAReceiveCplt
 1744 00f8 00000000 		.word	UART_DMARxHalfCplt
 1745 00fc 00000000 		.word	UART_DMAError
 1746              		.cfi_endproc
 1747              	.LFE142:
 1749              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1750              		.align	1
 1751              		.global	HAL_UART_DMAPause
 1752              		.syntax unified
 1753              		.thumb
 1754              		.thumb_func
 1755              		.fpu fpv4-sp-d16
 1757              	HAL_UART_DMAPause:
 1758              	.LFB143:
1425:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1427:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1428:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1429:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1430:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1431:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1432:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1433:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1759              		.loc 1 1433 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 16
 1762              		@ frame_needed = 1, uses_anonymous_args = 0
 1763              		@ link register save eliminated.
 1764 0000 80B4     		push	{r7}
 1765              	.LCFI69:
 1766              		.cfi_def_cfa_offset 4
 1767              		.cfi_offset 7, -4
 1768 0002 85B0     		sub	sp, sp, #20
 1769              	.LCFI70:
 1770              		.cfi_def_cfa_offset 24
 1771 0004 00AF     		add	r7, sp, #0
 1772              	.LCFI71:
 1773              		.cfi_def_cfa_register 7
 1774 0006 7860     		str	r0, [r7, #4]
1434:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1775              		.loc 1 1434 0
 1776 0008 0023     		movs	r3, #0
 1777 000a FB60     		str	r3, [r7, #12]
1435:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1437:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1778              		.loc 1 1437 0
 1779 000c 7B68     		ldr	r3, [r7, #4]
 1780 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
ARM GAS  /tmp/ccRTMmaY.s 			page 57


 1781 0012 012B     		cmp	r3, #1
 1782 0014 01D1     		bne	.L79
 1783              		.loc 1 1437 0 is_stmt 0 discriminator 1
 1784 0016 0223     		movs	r3, #2
 1785 0018 50E0     		b	.L80
 1786              	.L79:
 1787              		.loc 1 1437 0 discriminator 2
 1788 001a 7B68     		ldr	r3, [r7, #4]
 1789 001c 0122     		movs	r2, #1
 1790 001e 83F83820 		strb	r2, [r3, #56]
1438:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1791              		.loc 1 1439 0 is_stmt 1 discriminator 2
 1792 0022 7B68     		ldr	r3, [r7, #4]
 1793 0024 1B68     		ldr	r3, [r3]
 1794 0026 5B69     		ldr	r3, [r3, #20]
 1795 0028 03F08003 		and	r3, r3, #128
 1796 002c 802B     		cmp	r3, #128
 1797 002e 0CBF     		ite	eq
 1798 0030 0123     		moveq	r3, #1
 1799 0032 0023     		movne	r3, #0
 1800 0034 DBB2     		uxtb	r3, r3
 1801 0036 FB60     		str	r3, [r7, #12]
1440:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1802              		.loc 1 1440 0 discriminator 2
 1803 0038 7B68     		ldr	r3, [r7, #4]
 1804 003a 93F83930 		ldrb	r3, [r3, #57]
 1805 003e DBB2     		uxtb	r3, r3
 1806 0040 212B     		cmp	r3, #33
 1807 0042 0AD1     		bne	.L81
 1808              		.loc 1 1440 0 is_stmt 0 discriminator 1
 1809 0044 FB68     		ldr	r3, [r7, #12]
 1810 0046 002B     		cmp	r3, #0
 1811 0048 07D0     		beq	.L81
1441:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1442:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1443:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1812              		.loc 1 1443 0 is_stmt 1
 1813 004a 7B68     		ldr	r3, [r7, #4]
 1814 004c 1B68     		ldr	r3, [r3]
 1815 004e 5A69     		ldr	r2, [r3, #20]
 1816 0050 7B68     		ldr	r3, [r7, #4]
 1817 0052 1B68     		ldr	r3, [r3]
 1818 0054 22F08002 		bic	r2, r2, #128
 1819 0058 5A61     		str	r2, [r3, #20]
 1820              	.L81:
1444:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1445:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1446:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1821              		.loc 1 1446 0
 1822 005a 7B68     		ldr	r3, [r7, #4]
 1823 005c 1B68     		ldr	r3, [r3]
 1824 005e 5B69     		ldr	r3, [r3, #20]
 1825 0060 03F04003 		and	r3, r3, #64
 1826 0064 402B     		cmp	r3, #64
 1827 0066 0CBF     		ite	eq
 1828 0068 0123     		moveq	r3, #1
ARM GAS  /tmp/ccRTMmaY.s 			page 58


 1829 006a 0023     		movne	r3, #0
 1830 006c DBB2     		uxtb	r3, r3
 1831 006e FB60     		str	r3, [r7, #12]
1447:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1832              		.loc 1 1447 0
 1833 0070 7B68     		ldr	r3, [r7, #4]
 1834 0072 93F83A30 		ldrb	r3, [r3, #58]
 1835 0076 DBB2     		uxtb	r3, r3
 1836 0078 222B     		cmp	r3, #34
 1837 007a 1AD1     		bne	.L82
 1838              		.loc 1 1447 0 is_stmt 0 discriminator 1
 1839 007c FB68     		ldr	r3, [r7, #12]
 1840 007e 002B     		cmp	r3, #0
 1841 0080 17D0     		beq	.L82
1448:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1449:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1842              		.loc 1 1450 0 is_stmt 1
 1843 0082 7B68     		ldr	r3, [r7, #4]
 1844 0084 1B68     		ldr	r3, [r3]
 1845 0086 DA68     		ldr	r2, [r3, #12]
 1846 0088 7B68     		ldr	r3, [r7, #4]
 1847 008a 1B68     		ldr	r3, [r3]
 1848 008c 22F48072 		bic	r2, r2, #256
 1849 0090 DA60     		str	r2, [r3, #12]
1451:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1850              		.loc 1 1451 0
 1851 0092 7B68     		ldr	r3, [r7, #4]
 1852 0094 1B68     		ldr	r3, [r3]
 1853 0096 5A69     		ldr	r2, [r3, #20]
 1854 0098 7B68     		ldr	r3, [r7, #4]
 1855 009a 1B68     		ldr	r3, [r3]
 1856 009c 22F00102 		bic	r2, r2, #1
 1857 00a0 5A61     		str	r2, [r3, #20]
1452:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1453:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1858              		.loc 1 1454 0
 1859 00a2 7B68     		ldr	r3, [r7, #4]
 1860 00a4 1B68     		ldr	r3, [r3]
 1861 00a6 5A69     		ldr	r2, [r3, #20]
 1862 00a8 7B68     		ldr	r3, [r7, #4]
 1863 00aa 1B68     		ldr	r3, [r3]
 1864 00ac 22F04002 		bic	r2, r2, #64
 1865 00b0 5A61     		str	r2, [r3, #20]
 1866              	.L82:
1455:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1456:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1457:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1458:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1867              		.loc 1 1458 0
 1868 00b2 7B68     		ldr	r3, [r7, #4]
 1869 00b4 0022     		movs	r2, #0
 1870 00b6 83F83820 		strb	r2, [r3, #56]
1459:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1460:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1871              		.loc 1 1460 0
ARM GAS  /tmp/ccRTMmaY.s 			page 59


 1872 00ba 0023     		movs	r3, #0
 1873              	.L80:
1461:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1874              		.loc 1 1461 0
 1875 00bc 1846     		mov	r0, r3
 1876 00be 1437     		adds	r7, r7, #20
 1877              	.LCFI72:
 1878              		.cfi_def_cfa_offset 4
 1879 00c0 BD46     		mov	sp, r7
 1880              	.LCFI73:
 1881              		.cfi_def_cfa_register 13
 1882              		@ sp needed
 1883 00c2 5DF8047B 		ldr	r7, [sp], #4
 1884              	.LCFI74:
 1885              		.cfi_restore 7
 1886              		.cfi_def_cfa_offset 0
 1887 00c6 7047     		bx	lr
 1888              		.cfi_endproc
 1889              	.LFE143:
 1891              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1892              		.align	1
 1893              		.global	HAL_UART_DMAResume
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1897              		.fpu fpv4-sp-d16
 1899              	HAL_UART_DMAResume:
 1900              	.LFB144:
1462:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1463:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1464:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1465:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1466:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1467:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1468:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1469:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1470:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1901              		.loc 1 1470 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 16
 1904              		@ frame_needed = 1, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
 1906 0000 80B4     		push	{r7}
 1907              	.LCFI75:
 1908              		.cfi_def_cfa_offset 4
 1909              		.cfi_offset 7, -4
 1910 0002 85B0     		sub	sp, sp, #20
 1911              	.LCFI76:
 1912              		.cfi_def_cfa_offset 24
 1913 0004 00AF     		add	r7, sp, #0
 1914              	.LCFI77:
 1915              		.cfi_def_cfa_register 7
 1916 0006 7860     		str	r0, [r7, #4]
1471:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1472:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1917              		.loc 1 1472 0
 1918 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRTMmaY.s 			page 60


 1919 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1920 000e 012B     		cmp	r3, #1
 1921 0010 01D1     		bne	.L84
 1922              		.loc 1 1472 0 is_stmt 0 discriminator 1
 1923 0012 0223     		movs	r3, #2
 1924 0014 3FE0     		b	.L85
 1925              	.L84:
 1926              		.loc 1 1472 0 discriminator 2
 1927 0016 7B68     		ldr	r3, [r7, #4]
 1928 0018 0122     		movs	r2, #1
 1929 001a 83F83820 		strb	r2, [r3, #56]
1473:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1474:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1930              		.loc 1 1474 0 is_stmt 1 discriminator 2
 1931 001e 7B68     		ldr	r3, [r7, #4]
 1932 0020 93F83930 		ldrb	r3, [r3, #57]
 1933 0024 DBB2     		uxtb	r3, r3
 1934 0026 212B     		cmp	r3, #33
 1935 0028 07D1     		bne	.L86
1475:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1476:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1477:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1936              		.loc 1 1477 0
 1937 002a 7B68     		ldr	r3, [r7, #4]
 1938 002c 1B68     		ldr	r3, [r3]
 1939 002e 5A69     		ldr	r2, [r3, #20]
 1940 0030 7B68     		ldr	r3, [r7, #4]
 1941 0032 1B68     		ldr	r3, [r3]
 1942 0034 42F08002 		orr	r2, r2, #128
 1943 0038 5A61     		str	r2, [r3, #20]
 1944              	.L86:
1478:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1479:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1480:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1945              		.loc 1 1480 0
 1946 003a 7B68     		ldr	r3, [r7, #4]
 1947 003c 93F83A30 		ldrb	r3, [r3, #58]
 1948 0040 DBB2     		uxtb	r3, r3
 1949 0042 222B     		cmp	r3, #34
 1950 0044 22D1     		bne	.L87
 1951              	.LBB3:
1481:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1482:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1483:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1952              		.loc 1 1483 0
 1953 0046 0023     		movs	r3, #0
 1954 0048 FB60     		str	r3, [r7, #12]
 1955 004a 7B68     		ldr	r3, [r7, #4]
 1956 004c 1B68     		ldr	r3, [r3]
 1957 004e 1B68     		ldr	r3, [r3]
 1958 0050 FB60     		str	r3, [r7, #12]
 1959 0052 7B68     		ldr	r3, [r7, #4]
 1960 0054 1B68     		ldr	r3, [r3]
 1961 0056 5B68     		ldr	r3, [r3, #4]
 1962 0058 FB60     		str	r3, [r7, #12]
 1963 005a FB68     		ldr	r3, [r7, #12]
 1964              	.LBE3:
ARM GAS  /tmp/ccRTMmaY.s 			page 61


1484:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1485:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1486:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1965              		.loc 1 1486 0
 1966 005c 7B68     		ldr	r3, [r7, #4]
 1967 005e 1B68     		ldr	r3, [r3]
 1968 0060 DA68     		ldr	r2, [r3, #12]
 1969 0062 7B68     		ldr	r3, [r7, #4]
 1970 0064 1B68     		ldr	r3, [r3]
 1971 0066 42F48072 		orr	r2, r2, #256
 1972 006a DA60     		str	r2, [r3, #12]
1487:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1973              		.loc 1 1487 0
 1974 006c 7B68     		ldr	r3, [r7, #4]
 1975 006e 1B68     		ldr	r3, [r3]
 1976 0070 5A69     		ldr	r2, [r3, #20]
 1977 0072 7B68     		ldr	r3, [r7, #4]
 1978 0074 1B68     		ldr	r3, [r3]
 1979 0076 42F00102 		orr	r2, r2, #1
 1980 007a 5A61     		str	r2, [r3, #20]
1488:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1489:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1490:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1981              		.loc 1 1490 0
 1982 007c 7B68     		ldr	r3, [r7, #4]
 1983 007e 1B68     		ldr	r3, [r3]
 1984 0080 5A69     		ldr	r2, [r3, #20]
 1985 0082 7B68     		ldr	r3, [r7, #4]
 1986 0084 1B68     		ldr	r3, [r3]
 1987 0086 42F04002 		orr	r2, r2, #64
 1988 008a 5A61     		str	r2, [r3, #20]
 1989              	.L87:
1491:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1492:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1493:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1494:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1990              		.loc 1 1494 0
 1991 008c 7B68     		ldr	r3, [r7, #4]
 1992 008e 0022     		movs	r2, #0
 1993 0090 83F83820 		strb	r2, [r3, #56]
1495:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1496:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1994              		.loc 1 1496 0
 1995 0094 0023     		movs	r3, #0
 1996              	.L85:
1497:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1997              		.loc 1 1497 0
 1998 0096 1846     		mov	r0, r3
 1999 0098 1437     		adds	r7, r7, #20
 2000              	.LCFI78:
 2001              		.cfi_def_cfa_offset 4
 2002 009a BD46     		mov	sp, r7
 2003              	.LCFI79:
 2004              		.cfi_def_cfa_register 13
 2005              		@ sp needed
 2006 009c 5DF8047B 		ldr	r7, [sp], #4
 2007              	.LCFI80:
ARM GAS  /tmp/ccRTMmaY.s 			page 62


 2008              		.cfi_restore 7
 2009              		.cfi_def_cfa_offset 0
 2010 00a0 7047     		bx	lr
 2011              		.cfi_endproc
 2012              	.LFE144:
 2014              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2015              		.align	1
 2016              		.global	HAL_UART_DMAStop
 2017              		.syntax unified
 2018              		.thumb
 2019              		.thumb_func
 2020              		.fpu fpv4-sp-d16
 2022              	HAL_UART_DMAStop:
 2023              	.LFB145:
1498:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1499:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1500:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1501:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1502:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1503:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1504:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1505:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1506:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2024              		.loc 1 1506 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 16
 2027              		@ frame_needed = 1, uses_anonymous_args = 0
 2028 0000 80B5     		push	{r7, lr}
 2029              	.LCFI81:
 2030              		.cfi_def_cfa_offset 8
 2031              		.cfi_offset 7, -8
 2032              		.cfi_offset 14, -4
 2033 0002 84B0     		sub	sp, sp, #16
 2034              	.LCFI82:
 2035              		.cfi_def_cfa_offset 24
 2036 0004 00AF     		add	r7, sp, #0
 2037              	.LCFI83:
 2038              		.cfi_def_cfa_register 7
 2039 0006 7860     		str	r0, [r7, #4]
1507:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2040              		.loc 1 1507 0
 2041 0008 0023     		movs	r3, #0
 2042 000a FB60     		str	r3, [r7, #12]
1508:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1509:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1510:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1511:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1512:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1513:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1515:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2043              		.loc 1 1515 0
 2044 000c 7B68     		ldr	r3, [r7, #4]
 2045 000e 1B68     		ldr	r3, [r3]
 2046 0010 5B69     		ldr	r3, [r3, #20]
 2047 0012 03F08003 		and	r3, r3, #128
 2048 0016 802B     		cmp	r3, #128
ARM GAS  /tmp/ccRTMmaY.s 			page 63


 2049 0018 0CBF     		ite	eq
 2050 001a 0123     		moveq	r3, #1
 2051 001c 0023     		movne	r3, #0
 2052 001e DBB2     		uxtb	r3, r3
 2053 0020 FB60     		str	r3, [r7, #12]
1516:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2054              		.loc 1 1516 0
 2055 0022 7B68     		ldr	r3, [r7, #4]
 2056 0024 93F83930 		ldrb	r3, [r3, #57]
 2057 0028 DBB2     		uxtb	r3, r3
 2058 002a 212B     		cmp	r3, #33
 2059 002c 16D1     		bne	.L89
 2060              		.loc 1 1516 0 is_stmt 0 discriminator 1
 2061 002e FB68     		ldr	r3, [r7, #12]
 2062 0030 002B     		cmp	r3, #0
 2063 0032 13D0     		beq	.L89
1517:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1518:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2064              		.loc 1 1518 0 is_stmt 1
 2065 0034 7B68     		ldr	r3, [r7, #4]
 2066 0036 1B68     		ldr	r3, [r3]
 2067 0038 5A69     		ldr	r2, [r3, #20]
 2068 003a 7B68     		ldr	r3, [r7, #4]
 2069 003c 1B68     		ldr	r3, [r3]
 2070 003e 22F08002 		bic	r2, r2, #128
 2071 0042 5A61     		str	r2, [r3, #20]
1519:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1520:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1521:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2072              		.loc 1 1521 0
 2073 0044 7B68     		ldr	r3, [r7, #4]
 2074 0046 1B6B     		ldr	r3, [r3, #48]
 2075 0048 002B     		cmp	r3, #0
 2076 004a 04D0     		beq	.L90
1522:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1523:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2077              		.loc 1 1523 0
 2078 004c 7B68     		ldr	r3, [r7, #4]
 2079 004e 1B6B     		ldr	r3, [r3, #48]
 2080 0050 1846     		mov	r0, r3
 2081 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2082              	.L90:
1524:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1525:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2083              		.loc 1 1525 0
 2084 0056 7868     		ldr	r0, [r7, #4]
 2085 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2086              	.L89:
1526:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1527:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1528:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1529:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2087              		.loc 1 1529 0
 2088 005c 7B68     		ldr	r3, [r7, #4]
 2089 005e 1B68     		ldr	r3, [r3]
 2090 0060 5B69     		ldr	r3, [r3, #20]
 2091 0062 03F04003 		and	r3, r3, #64
ARM GAS  /tmp/ccRTMmaY.s 			page 64


 2092 0066 402B     		cmp	r3, #64
 2093 0068 0CBF     		ite	eq
 2094 006a 0123     		moveq	r3, #1
 2095 006c 0023     		movne	r3, #0
 2096 006e DBB2     		uxtb	r3, r3
 2097 0070 FB60     		str	r3, [r7, #12]
1530:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2098              		.loc 1 1530 0
 2099 0072 7B68     		ldr	r3, [r7, #4]
 2100 0074 93F83A30 		ldrb	r3, [r3, #58]
 2101 0078 DBB2     		uxtb	r3, r3
 2102 007a 222B     		cmp	r3, #34
 2103 007c 16D1     		bne	.L91
 2104              		.loc 1 1530 0 is_stmt 0 discriminator 1
 2105 007e FB68     		ldr	r3, [r7, #12]
 2106 0080 002B     		cmp	r3, #0
 2107 0082 13D0     		beq	.L91
1531:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1532:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2108              		.loc 1 1532 0 is_stmt 1
 2109 0084 7B68     		ldr	r3, [r7, #4]
 2110 0086 1B68     		ldr	r3, [r3]
 2111 0088 5A69     		ldr	r2, [r3, #20]
 2112 008a 7B68     		ldr	r3, [r7, #4]
 2113 008c 1B68     		ldr	r3, [r3]
 2114 008e 22F04002 		bic	r2, r2, #64
 2115 0092 5A61     		str	r2, [r3, #20]
1533:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1534:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1535:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2116              		.loc 1 1535 0
 2117 0094 7B68     		ldr	r3, [r7, #4]
 2118 0096 5B6B     		ldr	r3, [r3, #52]
 2119 0098 002B     		cmp	r3, #0
 2120 009a 04D0     		beq	.L92
1536:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1537:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2121              		.loc 1 1537 0
 2122 009c 7B68     		ldr	r3, [r7, #4]
 2123 009e 5B6B     		ldr	r3, [r3, #52]
 2124 00a0 1846     		mov	r0, r3
 2125 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2126              	.L92:
1538:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1539:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2127              		.loc 1 1539 0
 2128 00a6 7868     		ldr	r0, [r7, #4]
 2129 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2130              	.L91:
1540:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1541:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2131              		.loc 1 1542 0
 2132 00ac 0023     		movs	r3, #0
1543:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2133              		.loc 1 1543 0
 2134 00ae 1846     		mov	r0, r3
ARM GAS  /tmp/ccRTMmaY.s 			page 65


 2135 00b0 1037     		adds	r7, r7, #16
 2136              	.LCFI84:
 2137              		.cfi_def_cfa_offset 8
 2138 00b2 BD46     		mov	sp, r7
 2139              	.LCFI85:
 2140              		.cfi_def_cfa_register 13
 2141              		@ sp needed
 2142 00b4 80BD     		pop	{r7, pc}
 2143              		.cfi_endproc
 2144              	.LFE145:
 2146              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2147              		.align	1
 2148              		.global	HAL_UART_Abort
 2149              		.syntax unified
 2150              		.thumb
 2151              		.thumb_func
 2152              		.fpu fpv4-sp-d16
 2154              	HAL_UART_Abort:
 2155              	.LFB146:
1544:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1545:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1546:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1547:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1548:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1549:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1550:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1551:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1552:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1553:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1554:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1555:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1556:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1557:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1558:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2156              		.loc 1 1558 0
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 8
 2159              		@ frame_needed = 1, uses_anonymous_args = 0
 2160 0000 80B5     		push	{r7, lr}
 2161              	.LCFI86:
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 7, -8
 2164              		.cfi_offset 14, -4
 2165 0002 82B0     		sub	sp, sp, #8
 2166              	.LCFI87:
 2167              		.cfi_def_cfa_offset 16
 2168 0004 00AF     		add	r7, sp, #0
 2169              	.LCFI88:
 2170              		.cfi_def_cfa_register 7
 2171 0006 7860     		str	r0, [r7, #4]
1559:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1560:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2172              		.loc 1 1560 0
 2173 0008 7B68     		ldr	r3, [r7, #4]
 2174 000a 1B68     		ldr	r3, [r3]
 2175 000c DA68     		ldr	r2, [r3, #12]
 2176 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRTMmaY.s 			page 66


 2177 0010 1B68     		ldr	r3, [r3]
 2178 0012 22F4F072 		bic	r2, r2, #480
 2179 0016 DA60     		str	r2, [r3, #12]
1561:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2180              		.loc 1 1561 0
 2181 0018 7B68     		ldr	r3, [r7, #4]
 2182 001a 1B68     		ldr	r3, [r3]
 2183 001c 5A69     		ldr	r2, [r3, #20]
 2184 001e 7B68     		ldr	r3, [r7, #4]
 2185 0020 1B68     		ldr	r3, [r3]
 2186 0022 22F00102 		bic	r2, r2, #1
 2187 0026 5A61     		str	r2, [r3, #20]
1562:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1564:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2188              		.loc 1 1564 0
 2189 0028 7B68     		ldr	r3, [r7, #4]
 2190 002a 1B68     		ldr	r3, [r3]
 2191 002c 5B69     		ldr	r3, [r3, #20]
 2192 002e 03F08003 		and	r3, r3, #128
 2193 0032 802B     		cmp	r3, #128
 2194 0034 24D1     		bne	.L95
1565:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1566:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2195              		.loc 1 1566 0
 2196 0036 7B68     		ldr	r3, [r7, #4]
 2197 0038 1B68     		ldr	r3, [r3]
 2198 003a 5A69     		ldr	r2, [r3, #20]
 2199 003c 7B68     		ldr	r3, [r7, #4]
 2200 003e 1B68     		ldr	r3, [r3]
 2201 0040 22F08002 		bic	r2, r2, #128
 2202 0044 5A61     		str	r2, [r3, #20]
1567:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1568:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1569:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2203              		.loc 1 1569 0
 2204 0046 7B68     		ldr	r3, [r7, #4]
 2205 0048 1B6B     		ldr	r3, [r3, #48]
 2206 004a 002B     		cmp	r3, #0
 2207 004c 18D0     		beq	.L95
1570:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1571:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1572:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1573:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2208              		.loc 1 1573 0
 2209 004e 7B68     		ldr	r3, [r7, #4]
 2210 0050 1B6B     		ldr	r3, [r3, #48]
 2211 0052 0022     		movs	r2, #0
 2212 0054 1A65     		str	r2, [r3, #80]
1574:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1575:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2213              		.loc 1 1575 0
 2214 0056 7B68     		ldr	r3, [r7, #4]
 2215 0058 1B6B     		ldr	r3, [r3, #48]
 2216 005a 1846     		mov	r0, r3
 2217 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2218 0060 0346     		mov	r3, r0
ARM GAS  /tmp/ccRTMmaY.s 			page 67


 2219 0062 002B     		cmp	r3, #0
 2220 0064 0CD0     		beq	.L95
1576:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1577:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2221              		.loc 1 1577 0
 2222 0066 7B68     		ldr	r3, [r7, #4]
 2223 0068 1B6B     		ldr	r3, [r3, #48]
 2224 006a 1846     		mov	r0, r3
 2225 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2226 0070 0346     		mov	r3, r0
 2227 0072 202B     		cmp	r3, #32
 2228 0074 04D1     		bne	.L95
1578:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1579:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1580:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2229              		.loc 1 1580 0
 2230 0076 7B68     		ldr	r3, [r7, #4]
 2231 0078 1022     		movs	r2, #16
 2232 007a DA63     		str	r2, [r3, #60]
1581:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1582:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2233              		.loc 1 1582 0
 2234 007c 0323     		movs	r3, #3
 2235 007e 3DE0     		b	.L96
 2236              	.L95:
1583:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1584:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1585:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1586:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1587:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1588:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1589:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2237              		.loc 1 1589 0
 2238 0080 7B68     		ldr	r3, [r7, #4]
 2239 0082 1B68     		ldr	r3, [r3]
 2240 0084 5B69     		ldr	r3, [r3, #20]
 2241 0086 03F04003 		and	r3, r3, #64
 2242 008a 402B     		cmp	r3, #64
 2243 008c 24D1     		bne	.L97
1590:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1591:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2244              		.loc 1 1591 0
 2245 008e 7B68     		ldr	r3, [r7, #4]
 2246 0090 1B68     		ldr	r3, [r3]
 2247 0092 5A69     		ldr	r2, [r3, #20]
 2248 0094 7B68     		ldr	r3, [r7, #4]
 2249 0096 1B68     		ldr	r3, [r3]
 2250 0098 22F04002 		bic	r2, r2, #64
 2251 009c 5A61     		str	r2, [r3, #20]
1592:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1593:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1594:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2252              		.loc 1 1594 0
 2253 009e 7B68     		ldr	r3, [r7, #4]
 2254 00a0 5B6B     		ldr	r3, [r3, #52]
 2255 00a2 002B     		cmp	r3, #0
 2256 00a4 18D0     		beq	.L97
ARM GAS  /tmp/ccRTMmaY.s 			page 68


1595:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1596:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1597:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1598:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2257              		.loc 1 1598 0
 2258 00a6 7B68     		ldr	r3, [r7, #4]
 2259 00a8 5B6B     		ldr	r3, [r3, #52]
 2260 00aa 0022     		movs	r2, #0
 2261 00ac 1A65     		str	r2, [r3, #80]
1599:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1600:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2262              		.loc 1 1600 0
 2263 00ae 7B68     		ldr	r3, [r7, #4]
 2264 00b0 5B6B     		ldr	r3, [r3, #52]
 2265 00b2 1846     		mov	r0, r3
 2266 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2267 00b8 0346     		mov	r3, r0
 2268 00ba 002B     		cmp	r3, #0
 2269 00bc 0CD0     		beq	.L97
1601:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1602:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2270              		.loc 1 1602 0
 2271 00be 7B68     		ldr	r3, [r7, #4]
 2272 00c0 5B6B     		ldr	r3, [r3, #52]
 2273 00c2 1846     		mov	r0, r3
 2274 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2275 00c8 0346     		mov	r3, r0
 2276 00ca 202B     		cmp	r3, #32
 2277 00cc 04D1     		bne	.L97
1603:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1604:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1605:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2278              		.loc 1 1605 0
 2279 00ce 7B68     		ldr	r3, [r7, #4]
 2280 00d0 1022     		movs	r2, #16
 2281 00d2 DA63     		str	r2, [r3, #60]
1606:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1607:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2282              		.loc 1 1607 0
 2283 00d4 0323     		movs	r3, #3
 2284 00d6 11E0     		b	.L96
 2285              	.L97:
1608:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1609:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1610:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1611:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1612:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1613:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1614:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2286              		.loc 1 1614 0
 2287 00d8 7B68     		ldr	r3, [r7, #4]
 2288 00da 0022     		movs	r2, #0
 2289 00dc DA84     		strh	r2, [r3, #38]	@ movhi
1615:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2290              		.loc 1 1615 0
 2291 00de 7B68     		ldr	r3, [r7, #4]
 2292 00e0 0022     		movs	r2, #0
ARM GAS  /tmp/ccRTMmaY.s 			page 69


 2293 00e2 DA85     		strh	r2, [r3, #46]	@ movhi
1616:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1617:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1618:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2294              		.loc 1 1618 0
 2295 00e4 7B68     		ldr	r3, [r7, #4]
 2296 00e6 0022     		movs	r2, #0
 2297 00e8 DA63     		str	r2, [r3, #60]
1619:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1620:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1621:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2298              		.loc 1 1621 0
 2299 00ea 7B68     		ldr	r3, [r7, #4]
 2300 00ec 2022     		movs	r2, #32
 2301 00ee 83F83A20 		strb	r2, [r3, #58]
1622:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2302              		.loc 1 1622 0
 2303 00f2 7B68     		ldr	r3, [r7, #4]
 2304 00f4 2022     		movs	r2, #32
 2305 00f6 83F83920 		strb	r2, [r3, #57]
1623:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1624:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2306              		.loc 1 1624 0
 2307 00fa 0023     		movs	r3, #0
 2308              	.L96:
1625:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2309              		.loc 1 1625 0
 2310 00fc 1846     		mov	r0, r3
 2311 00fe 0837     		adds	r7, r7, #8
 2312              	.LCFI89:
 2313              		.cfi_def_cfa_offset 8
 2314 0100 BD46     		mov	sp, r7
 2315              	.LCFI90:
 2316              		.cfi_def_cfa_register 13
 2317              		@ sp needed
 2318 0102 80BD     		pop	{r7, pc}
 2319              		.cfi_endproc
 2320              	.LFE146:
 2322              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2323              		.align	1
 2324              		.global	HAL_UART_AbortTransmit
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu fpv4-sp-d16
 2330              	HAL_UART_AbortTransmit:
 2331              	.LFB147:
1626:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1627:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1628:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1629:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1630:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1631:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1632:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1633:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1634:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1635:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccRTMmaY.s 			page 70


1636:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1637:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1638:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1639:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1640:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2332              		.loc 1 1640 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 8
 2335              		@ frame_needed = 1, uses_anonymous_args = 0
 2336 0000 80B5     		push	{r7, lr}
 2337              	.LCFI91:
 2338              		.cfi_def_cfa_offset 8
 2339              		.cfi_offset 7, -8
 2340              		.cfi_offset 14, -4
 2341 0002 82B0     		sub	sp, sp, #8
 2342              	.LCFI92:
 2343              		.cfi_def_cfa_offset 16
 2344 0004 00AF     		add	r7, sp, #0
 2345              	.LCFI93:
 2346              		.cfi_def_cfa_register 7
 2347 0006 7860     		str	r0, [r7, #4]
1641:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1642:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2348              		.loc 1 1642 0
 2349 0008 7B68     		ldr	r3, [r7, #4]
 2350 000a 1B68     		ldr	r3, [r3]
 2351 000c DA68     		ldr	r2, [r3, #12]
 2352 000e 7B68     		ldr	r3, [r7, #4]
 2353 0010 1B68     		ldr	r3, [r3]
 2354 0012 22F0C002 		bic	r2, r2, #192
 2355 0016 DA60     		str	r2, [r3, #12]
1643:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1645:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2356              		.loc 1 1645 0
 2357 0018 7B68     		ldr	r3, [r7, #4]
 2358 001a 1B68     		ldr	r3, [r3]
 2359 001c 5B69     		ldr	r3, [r3, #20]
 2360 001e 03F08003 		and	r3, r3, #128
 2361 0022 802B     		cmp	r3, #128
 2362 0024 24D1     		bne	.L99
1646:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1647:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2363              		.loc 1 1647 0
 2364 0026 7B68     		ldr	r3, [r7, #4]
 2365 0028 1B68     		ldr	r3, [r3]
 2366 002a 5A69     		ldr	r2, [r3, #20]
 2367 002c 7B68     		ldr	r3, [r7, #4]
 2368 002e 1B68     		ldr	r3, [r3]
 2369 0030 22F08002 		bic	r2, r2, #128
 2370 0034 5A61     		str	r2, [r3, #20]
1648:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1649:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1650:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2371              		.loc 1 1650 0
 2372 0036 7B68     		ldr	r3, [r7, #4]
 2373 0038 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccRTMmaY.s 			page 71


 2374 003a 002B     		cmp	r3, #0
 2375 003c 18D0     		beq	.L99
1651:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1652:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1653:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1654:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2376              		.loc 1 1654 0
 2377 003e 7B68     		ldr	r3, [r7, #4]
 2378 0040 1B6B     		ldr	r3, [r3, #48]
 2379 0042 0022     		movs	r2, #0
 2380 0044 1A65     		str	r2, [r3, #80]
1655:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1656:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2381              		.loc 1 1656 0
 2382 0046 7B68     		ldr	r3, [r7, #4]
 2383 0048 1B6B     		ldr	r3, [r3, #48]
 2384 004a 1846     		mov	r0, r3
 2385 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2386 0050 0346     		mov	r3, r0
 2387 0052 002B     		cmp	r3, #0
 2388 0054 0CD0     		beq	.L99
1657:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1658:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2389              		.loc 1 1658 0
 2390 0056 7B68     		ldr	r3, [r7, #4]
 2391 0058 1B6B     		ldr	r3, [r3, #48]
 2392 005a 1846     		mov	r0, r3
 2393 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2394 0060 0346     		mov	r3, r0
 2395 0062 202B     		cmp	r3, #32
 2396 0064 04D1     		bne	.L99
1659:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1660:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1661:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2397              		.loc 1 1661 0
 2398 0066 7B68     		ldr	r3, [r7, #4]
 2399 0068 1022     		movs	r2, #16
 2400 006a DA63     		str	r2, [r3, #60]
1662:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2401              		.loc 1 1663 0
 2402 006c 0323     		movs	r3, #3
 2403 006e 07E0     		b	.L100
 2404              	.L99:
1664:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1665:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1666:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1667:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1668:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1669:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1670:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2405              		.loc 1 1670 0
 2406 0070 7B68     		ldr	r3, [r7, #4]
 2407 0072 0022     		movs	r2, #0
 2408 0074 DA84     		strh	r2, [r3, #38]	@ movhi
1671:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1672:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
ARM GAS  /tmp/ccRTMmaY.s 			page 72


1673:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2409              		.loc 1 1673 0
 2410 0076 7B68     		ldr	r3, [r7, #4]
 2411 0078 2022     		movs	r2, #32
 2412 007a 83F83920 		strb	r2, [r3, #57]
1674:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1675:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2413              		.loc 1 1675 0
 2414 007e 0023     		movs	r3, #0
 2415              	.L100:
1676:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2416              		.loc 1 1676 0
 2417 0080 1846     		mov	r0, r3
 2418 0082 0837     		adds	r7, r7, #8
 2419              	.LCFI94:
 2420              		.cfi_def_cfa_offset 8
 2421 0084 BD46     		mov	sp, r7
 2422              	.LCFI95:
 2423              		.cfi_def_cfa_register 13
 2424              		@ sp needed
 2425 0086 80BD     		pop	{r7, pc}
 2426              		.cfi_endproc
 2427              	.LFE147:
 2429              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2430              		.align	1
 2431              		.global	HAL_UART_AbortReceive
 2432              		.syntax unified
 2433              		.thumb
 2434              		.thumb_func
 2435              		.fpu fpv4-sp-d16
 2437              	HAL_UART_AbortReceive:
 2438              	.LFB148:
1677:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1678:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1679:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1680:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1681:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1682:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1683:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1684:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1685:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1686:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1687:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1688:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1689:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1690:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1691:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2439              		.loc 1 1691 0
 2440              		.cfi_startproc
 2441              		@ args = 0, pretend = 0, frame = 8
 2442              		@ frame_needed = 1, uses_anonymous_args = 0
 2443 0000 80B5     		push	{r7, lr}
 2444              	.LCFI96:
 2445              		.cfi_def_cfa_offset 8
 2446              		.cfi_offset 7, -8
 2447              		.cfi_offset 14, -4
 2448 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccRTMmaY.s 			page 73


 2449              	.LCFI97:
 2450              		.cfi_def_cfa_offset 16
 2451 0004 00AF     		add	r7, sp, #0
 2452              	.LCFI98:
 2453              		.cfi_def_cfa_register 7
 2454 0006 7860     		str	r0, [r7, #4]
1692:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1693:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2455              		.loc 1 1693 0
 2456 0008 7B68     		ldr	r3, [r7, #4]
 2457 000a 1B68     		ldr	r3, [r3]
 2458 000c DA68     		ldr	r2, [r3, #12]
 2459 000e 7B68     		ldr	r3, [r7, #4]
 2460 0010 1B68     		ldr	r3, [r3]
 2461 0012 22F49072 		bic	r2, r2, #288
 2462 0016 DA60     		str	r2, [r3, #12]
1694:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2463              		.loc 1 1694 0
 2464 0018 7B68     		ldr	r3, [r7, #4]
 2465 001a 1B68     		ldr	r3, [r3]
 2466 001c 5A69     		ldr	r2, [r3, #20]
 2467 001e 7B68     		ldr	r3, [r7, #4]
 2468 0020 1B68     		ldr	r3, [r3]
 2469 0022 22F00102 		bic	r2, r2, #1
 2470 0026 5A61     		str	r2, [r3, #20]
1695:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1696:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1697:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2471              		.loc 1 1697 0
 2472 0028 7B68     		ldr	r3, [r7, #4]
 2473 002a 1B68     		ldr	r3, [r3]
 2474 002c 5B69     		ldr	r3, [r3, #20]
 2475 002e 03F04003 		and	r3, r3, #64
 2476 0032 402B     		cmp	r3, #64
 2477 0034 24D1     		bne	.L102
1698:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1699:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2478              		.loc 1 1699 0
 2479 0036 7B68     		ldr	r3, [r7, #4]
 2480 0038 1B68     		ldr	r3, [r3]
 2481 003a 5A69     		ldr	r2, [r3, #20]
 2482 003c 7B68     		ldr	r3, [r7, #4]
 2483 003e 1B68     		ldr	r3, [r3]
 2484 0040 22F04002 		bic	r2, r2, #64
 2485 0044 5A61     		str	r2, [r3, #20]
1700:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1701:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1702:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2486              		.loc 1 1702 0
 2487 0046 7B68     		ldr	r3, [r7, #4]
 2488 0048 5B6B     		ldr	r3, [r3, #52]
 2489 004a 002B     		cmp	r3, #0
 2490 004c 18D0     		beq	.L102
1703:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1704:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1705:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1706:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccRTMmaY.s 			page 74


 2491              		.loc 1 1706 0
 2492 004e 7B68     		ldr	r3, [r7, #4]
 2493 0050 5B6B     		ldr	r3, [r3, #52]
 2494 0052 0022     		movs	r2, #0
 2495 0054 1A65     		str	r2, [r3, #80]
1707:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1708:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2496              		.loc 1 1708 0
 2497 0056 7B68     		ldr	r3, [r7, #4]
 2498 0058 5B6B     		ldr	r3, [r3, #52]
 2499 005a 1846     		mov	r0, r3
 2500 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2501 0060 0346     		mov	r3, r0
 2502 0062 002B     		cmp	r3, #0
 2503 0064 0CD0     		beq	.L102
1709:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1710:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2504              		.loc 1 1710 0
 2505 0066 7B68     		ldr	r3, [r7, #4]
 2506 0068 5B6B     		ldr	r3, [r3, #52]
 2507 006a 1846     		mov	r0, r3
 2508 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2509 0070 0346     		mov	r3, r0
 2510 0072 202B     		cmp	r3, #32
 2511 0074 04D1     		bne	.L102
1711:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1712:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1713:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2512              		.loc 1 1713 0
 2513 0076 7B68     		ldr	r3, [r7, #4]
 2514 0078 1022     		movs	r2, #16
 2515 007a DA63     		str	r2, [r3, #60]
1714:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1715:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2516              		.loc 1 1715 0
 2517 007c 0323     		movs	r3, #3
 2518 007e 07E0     		b	.L103
 2519              	.L102:
1716:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1717:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1718:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1719:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1720:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1721:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1722:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2520              		.loc 1 1722 0
 2521 0080 7B68     		ldr	r3, [r7, #4]
 2522 0082 0022     		movs	r2, #0
 2523 0084 DA85     		strh	r2, [r3, #46]	@ movhi
1723:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1724:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1725:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2524              		.loc 1 1725 0
 2525 0086 7B68     		ldr	r3, [r7, #4]
 2526 0088 2022     		movs	r2, #32
 2527 008a 83F83A20 		strb	r2, [r3, #58]
1726:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 75


1727:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2528              		.loc 1 1727 0
 2529 008e 0023     		movs	r3, #0
 2530              	.L103:
1728:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2531              		.loc 1 1728 0
 2532 0090 1846     		mov	r0, r3
 2533 0092 0837     		adds	r7, r7, #8
 2534              	.LCFI99:
 2535              		.cfi_def_cfa_offset 8
 2536 0094 BD46     		mov	sp, r7
 2537              	.LCFI100:
 2538              		.cfi_def_cfa_register 13
 2539              		@ sp needed
 2540 0096 80BD     		pop	{r7, pc}
 2541              		.cfi_endproc
 2542              	.LFE148:
 2544              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2545              		.align	1
 2546              		.global	HAL_UART_Abort_IT
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2550              		.fpu fpv4-sp-d16
 2552              	HAL_UART_Abort_IT:
 2553              	.LFB149:
1729:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1731:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1732:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1733:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1734:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1735:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1736:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1737:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1738:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1739:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1740:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1741:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1742:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1743:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1744:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1745:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2554              		.loc 1 1745 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 16
 2557              		@ frame_needed = 1, uses_anonymous_args = 0
 2558 0000 80B5     		push	{r7, lr}
 2559              	.LCFI101:
 2560              		.cfi_def_cfa_offset 8
 2561              		.cfi_offset 7, -8
 2562              		.cfi_offset 14, -4
 2563 0002 84B0     		sub	sp, sp, #16
 2564              	.LCFI102:
 2565              		.cfi_def_cfa_offset 24
 2566 0004 00AF     		add	r7, sp, #0
 2567              	.LCFI103:
ARM GAS  /tmp/ccRTMmaY.s 			page 76


 2568              		.cfi_def_cfa_register 7
 2569 0006 7860     		str	r0, [r7, #4]
1746:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 2570              		.loc 1 1746 0
 2571 0008 0123     		movs	r3, #1
 2572 000a FB60     		str	r3, [r7, #12]
1747:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1749:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2573              		.loc 1 1749 0
 2574 000c 7B68     		ldr	r3, [r7, #4]
 2575 000e 1B68     		ldr	r3, [r3]
 2576 0010 DA68     		ldr	r2, [r3, #12]
 2577 0012 7B68     		ldr	r3, [r7, #4]
 2578 0014 1B68     		ldr	r3, [r3]
 2579 0016 22F4F072 		bic	r2, r2, #480
 2580 001a DA60     		str	r2, [r3, #12]
1750:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2581              		.loc 1 1750 0
 2582 001c 7B68     		ldr	r3, [r7, #4]
 2583 001e 1B68     		ldr	r3, [r3]
 2584 0020 5A69     		ldr	r2, [r3, #20]
 2585 0022 7B68     		ldr	r3, [r7, #4]
 2586 0024 1B68     		ldr	r3, [r3]
 2587 0026 22F00102 		bic	r2, r2, #1
 2588 002a 5A61     		str	r2, [r3, #20]
1751:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1752:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1753:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1754:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1755:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 2589              		.loc 1 1755 0
 2590 002c 7B68     		ldr	r3, [r7, #4]
 2591 002e 1B6B     		ldr	r3, [r3, #48]
 2592 0030 002B     		cmp	r3, #0
 2593 0032 0FD0     		beq	.L105
1756:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1757:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1758:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1759:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2594              		.loc 1 1759 0
 2595 0034 7B68     		ldr	r3, [r7, #4]
 2596 0036 1B68     		ldr	r3, [r3]
 2597 0038 5B69     		ldr	r3, [r3, #20]
 2598 003a 03F08003 		and	r3, r3, #128
 2599 003e 802B     		cmp	r3, #128
 2600 0040 04D1     		bne	.L106
1760:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1761:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2601              		.loc 1 1761 0
 2602 0042 7B68     		ldr	r3, [r7, #4]
 2603 0044 1B6B     		ldr	r3, [r3, #48]
 2604 0046 3E4A     		ldr	r2, .L115
 2605 0048 1A65     		str	r2, [r3, #80]
 2606 004a 03E0     		b	.L105
 2607              	.L106:
1762:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccRTMmaY.s 			page 77


1763:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1764:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1765:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2608              		.loc 1 1765 0
 2609 004c 7B68     		ldr	r3, [r7, #4]
 2610 004e 1B6B     		ldr	r3, [r3, #48]
 2611 0050 0022     		movs	r2, #0
 2612 0052 1A65     		str	r2, [r3, #80]
 2613              	.L105:
1766:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1767:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1768:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1769:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 2614              		.loc 1 1769 0
 2615 0054 7B68     		ldr	r3, [r7, #4]
 2616 0056 5B6B     		ldr	r3, [r3, #52]
 2617 0058 002B     		cmp	r3, #0
 2618 005a 0FD0     		beq	.L107
1770:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1771:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1772:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1773:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2619              		.loc 1 1773 0
 2620 005c 7B68     		ldr	r3, [r7, #4]
 2621 005e 1B68     		ldr	r3, [r3]
 2622 0060 5B69     		ldr	r3, [r3, #20]
 2623 0062 03F04003 		and	r3, r3, #64
 2624 0066 402B     		cmp	r3, #64
 2625 0068 04D1     		bne	.L108
1774:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1775:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2626              		.loc 1 1775 0
 2627 006a 7B68     		ldr	r3, [r7, #4]
 2628 006c 5B6B     		ldr	r3, [r3, #52]
 2629 006e 354A     		ldr	r2, .L115+4
 2630 0070 1A65     		str	r2, [r3, #80]
 2631 0072 03E0     		b	.L107
 2632              	.L108:
1776:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1777:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1778:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1779:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2633              		.loc 1 1779 0
 2634 0074 7B68     		ldr	r3, [r7, #4]
 2635 0076 5B6B     		ldr	r3, [r3, #52]
 2636 0078 0022     		movs	r2, #0
 2637 007a 1A65     		str	r2, [r3, #80]
 2638              	.L107:
1780:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1781:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1782:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1783:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1784:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2639              		.loc 1 1784 0
 2640 007c 7B68     		ldr	r3, [r7, #4]
 2641 007e 1B68     		ldr	r3, [r3]
 2642 0080 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/ccRTMmaY.s 			page 78


 2643 0082 03F08003 		and	r3, r3, #128
 2644 0086 802B     		cmp	r3, #128
 2645 0088 1AD1     		bne	.L109
1785:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1786:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1787:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2646              		.loc 1 1787 0
 2647 008a 7B68     		ldr	r3, [r7, #4]
 2648 008c 1B68     		ldr	r3, [r3]
 2649 008e 5A69     		ldr	r2, [r3, #20]
 2650 0090 7B68     		ldr	r3, [r7, #4]
 2651 0092 1B68     		ldr	r3, [r3]
 2652 0094 22F08002 		bic	r2, r2, #128
 2653 0098 5A61     		str	r2, [r3, #20]
1788:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1789:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
1790:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2654              		.loc 1 1790 0
 2655 009a 7B68     		ldr	r3, [r7, #4]
 2656 009c 1B6B     		ldr	r3, [r3, #48]
 2657 009e 002B     		cmp	r3, #0
 2658 00a0 0ED0     		beq	.L109
1791:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1792:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1793:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1794:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1795:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1796:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2659              		.loc 1 1796 0
 2660 00a2 7B68     		ldr	r3, [r7, #4]
 2661 00a4 1B6B     		ldr	r3, [r3, #48]
 2662 00a6 1846     		mov	r0, r3
 2663 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2664 00ac 0346     		mov	r3, r0
 2665 00ae 002B     		cmp	r3, #0
 2666 00b0 04D0     		beq	.L110
1797:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1798:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2667              		.loc 1 1798 0
 2668 00b2 7B68     		ldr	r3, [r7, #4]
 2669 00b4 1B6B     		ldr	r3, [r3, #48]
 2670 00b6 0022     		movs	r2, #0
 2671 00b8 1A65     		str	r2, [r3, #80]
 2672 00ba 01E0     		b	.L109
 2673              	.L110:
1799:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1800:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1801:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1802:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 2674              		.loc 1 1802 0
 2675 00bc 0023     		movs	r3, #0
 2676 00be FB60     		str	r3, [r7, #12]
 2677              	.L109:
1803:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1804:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1805:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1806:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 79


1807:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1808:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2678              		.loc 1 1808 0
 2679 00c0 7B68     		ldr	r3, [r7, #4]
 2680 00c2 1B68     		ldr	r3, [r3]
 2681 00c4 5B69     		ldr	r3, [r3, #20]
 2682 00c6 03F04003 		and	r3, r3, #64
 2683 00ca 402B     		cmp	r3, #64
 2684 00cc 1CD1     		bne	.L111
1809:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1810:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2685              		.loc 1 1810 0
 2686 00ce 7B68     		ldr	r3, [r7, #4]
 2687 00d0 1B68     		ldr	r3, [r3]
 2688 00d2 5A69     		ldr	r2, [r3, #20]
 2689 00d4 7B68     		ldr	r3, [r7, #4]
 2690 00d6 1B68     		ldr	r3, [r3]
 2691 00d8 22F04002 		bic	r2, r2, #64
 2692 00dc 5A61     		str	r2, [r3, #20]
1811:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1812:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
1813:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2693              		.loc 1 1813 0
 2694 00de 7B68     		ldr	r3, [r7, #4]
 2695 00e0 5B6B     		ldr	r3, [r3, #52]
 2696 00e2 002B     		cmp	r3, #0
 2697 00e4 10D0     		beq	.L111
1814:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1815:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1816:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1817:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1818:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1819:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2698              		.loc 1 1819 0
 2699 00e6 7B68     		ldr	r3, [r7, #4]
 2700 00e8 5B6B     		ldr	r3, [r3, #52]
 2701 00ea 1846     		mov	r0, r3
 2702 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2703 00f0 0346     		mov	r3, r0
 2704 00f2 002B     		cmp	r3, #0
 2705 00f4 06D0     		beq	.L112
1820:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1821:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2706              		.loc 1 1821 0
 2707 00f6 7B68     		ldr	r3, [r7, #4]
 2708 00f8 5B6B     		ldr	r3, [r3, #52]
 2709 00fa 0022     		movs	r2, #0
 2710 00fc 1A65     		str	r2, [r3, #80]
1822:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 2711              		.loc 1 1822 0
 2712 00fe 0123     		movs	r3, #1
 2713 0100 FB60     		str	r3, [r7, #12]
 2714 0102 01E0     		b	.L111
 2715              	.L112:
1823:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1824:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1825:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccRTMmaY.s 			page 80


1826:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 2716              		.loc 1 1826 0
 2717 0104 0023     		movs	r3, #0
 2718 0106 FB60     		str	r3, [r7, #12]
 2719              	.L111:
1827:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1828:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1829:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1830:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1832:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 2720              		.loc 1 1832 0
 2721 0108 FB68     		ldr	r3, [r7, #12]
 2722 010a 012B     		cmp	r3, #1
 2723 010c 13D1     		bne	.L113
1833:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1834:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1835:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2724              		.loc 1 1835 0
 2725 010e 7B68     		ldr	r3, [r7, #4]
 2726 0110 0022     		movs	r2, #0
 2727 0112 DA84     		strh	r2, [r3, #38]	@ movhi
1836:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 2728              		.loc 1 1836 0
 2729 0114 7B68     		ldr	r3, [r7, #4]
 2730 0116 0022     		movs	r2, #0
 2731 0118 DA85     		strh	r2, [r3, #46]	@ movhi
1837:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1839:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2732              		.loc 1 1839 0
 2733 011a 7B68     		ldr	r3, [r7, #4]
 2734 011c 0022     		movs	r2, #0
 2735 011e DA63     		str	r2, [r3, #60]
1840:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1841:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1842:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 2736              		.loc 1 1842 0
 2737 0120 7B68     		ldr	r3, [r7, #4]
 2738 0122 2022     		movs	r2, #32
 2739 0124 83F83920 		strb	r2, [r3, #57]
1843:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2740              		.loc 1 1843 0
 2741 0128 7B68     		ldr	r3, [r7, #4]
 2742 012a 2022     		movs	r2, #32
 2743 012c 83F83A20 		strb	r2, [r3, #58]
1844:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1845:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1846:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1847:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1848:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1849:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1850:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1851:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2744              		.loc 1 1851 0
 2745 0130 7868     		ldr	r0, [r7, #4]
 2746 0132 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
ARM GAS  /tmp/ccRTMmaY.s 			page 81


 2747              	.L113:
1852:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1853:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1854:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1855:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2748              		.loc 1 1855 0
 2749 0136 0023     		movs	r3, #0
1856:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2750              		.loc 1 1856 0
 2751 0138 1846     		mov	r0, r3
 2752 013a 1037     		adds	r7, r7, #16
 2753              	.LCFI104:
 2754              		.cfi_def_cfa_offset 8
 2755 013c BD46     		mov	sp, r7
 2756              	.LCFI105:
 2757              		.cfi_def_cfa_register 13
 2758              		@ sp needed
 2759 013e 80BD     		pop	{r7, pc}
 2760              	.L116:
 2761              		.align	2
 2762              	.L115:
 2763 0140 00000000 		.word	UART_DMATxAbortCallback
 2764 0144 00000000 		.word	UART_DMARxAbortCallback
 2765              		.cfi_endproc
 2766              	.LFE149:
 2768              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2769              		.align	1
 2770              		.global	HAL_UART_AbortTransmit_IT
 2771              		.syntax unified
 2772              		.thumb
 2773              		.thumb_func
 2774              		.fpu fpv4-sp-d16
 2776              	HAL_UART_AbortTransmit_IT:
 2777              	.LFB150:
1857:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1858:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1859:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1860:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1861:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1862:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1863:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1864:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1865:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1866:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1867:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1868:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1869:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1870:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1871:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1872:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1873:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2778              		.loc 1 1873 0
 2779              		.cfi_startproc
 2780              		@ args = 0, pretend = 0, frame = 8
 2781              		@ frame_needed = 1, uses_anonymous_args = 0
 2782 0000 80B5     		push	{r7, lr}
 2783              	.LCFI106:
ARM GAS  /tmp/ccRTMmaY.s 			page 82


 2784              		.cfi_def_cfa_offset 8
 2785              		.cfi_offset 7, -8
 2786              		.cfi_offset 14, -4
 2787 0002 82B0     		sub	sp, sp, #8
 2788              	.LCFI107:
 2789              		.cfi_def_cfa_offset 16
 2790 0004 00AF     		add	r7, sp, #0
 2791              	.LCFI108:
 2792              		.cfi_def_cfa_register 7
 2793 0006 7860     		str	r0, [r7, #4]
1874:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1875:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2794              		.loc 1 1875 0
 2795 0008 7B68     		ldr	r3, [r7, #4]
 2796 000a 1B68     		ldr	r3, [r3]
 2797 000c DA68     		ldr	r2, [r3, #12]
 2798 000e 7B68     		ldr	r3, [r7, #4]
 2799 0010 1B68     		ldr	r3, [r3]
 2800 0012 22F0C002 		bic	r2, r2, #192
 2801 0016 DA60     		str	r2, [r3, #12]
1876:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1877:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1878:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2802              		.loc 1 1878 0
 2803 0018 7B68     		ldr	r3, [r7, #4]
 2804 001a 1B68     		ldr	r3, [r3]
 2805 001c 5B69     		ldr	r3, [r3, #20]
 2806 001e 03F08003 		and	r3, r3, #128
 2807 0022 802B     		cmp	r3, #128
 2808 0024 2AD1     		bne	.L118
1879:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1880:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2809              		.loc 1 1880 0
 2810 0026 7B68     		ldr	r3, [r7, #4]
 2811 0028 1B68     		ldr	r3, [r3]
 2812 002a 5A69     		ldr	r2, [r3, #20]
 2813 002c 7B68     		ldr	r3, [r7, #4]
 2814 002e 1B68     		ldr	r3, [r3]
 2815 0030 22F08002 		bic	r2, r2, #128
 2816 0034 5A61     		str	r2, [r3, #20]
1881:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1882:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1883:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2817              		.loc 1 1883 0
 2818 0036 7B68     		ldr	r3, [r7, #4]
 2819 0038 1B6B     		ldr	r3, [r3, #48]
 2820 003a 002B     		cmp	r3, #0
 2821 003c 13D0     		beq	.L119
1884:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1885:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1886:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1887:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 2822              		.loc 1 1887 0
 2823 003e 7B68     		ldr	r3, [r7, #4]
 2824 0040 1B6B     		ldr	r3, [r3, #48]
 2825 0042 164A     		ldr	r2, .L124
 2826 0044 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccRTMmaY.s 			page 83


1888:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1889:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1890:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2827              		.loc 1 1890 0
 2828 0046 7B68     		ldr	r3, [r7, #4]
 2829 0048 1B6B     		ldr	r3, [r3, #48]
 2830 004a 1846     		mov	r0, r3
 2831 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2832 0050 0346     		mov	r3, r0
 2833 0052 002B     		cmp	r3, #0
 2834 0054 1CD0     		beq	.L122
1891:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1892:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1893:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 2835              		.loc 1 1893 0
 2836 0056 7B68     		ldr	r3, [r7, #4]
 2837 0058 1B6B     		ldr	r3, [r3, #48]
 2838 005a 1B6D     		ldr	r3, [r3, #80]
 2839 005c 7A68     		ldr	r2, [r7, #4]
 2840 005e 126B     		ldr	r2, [r2, #48]
 2841 0060 1046     		mov	r0, r2
 2842 0062 9847     		blx	r3
 2843              	.LVL0:
 2844 0064 14E0     		b	.L122
 2845              	.L119:
1894:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1895:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1896:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1897:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1898:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1899:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 2846              		.loc 1 1899 0
 2847 0066 7B68     		ldr	r3, [r7, #4]
 2848 0068 0022     		movs	r2, #0
 2849 006a DA84     		strh	r2, [r3, #38]	@ movhi
1900:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1902:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 2850              		.loc 1 1902 0
 2851 006c 7B68     		ldr	r3, [r7, #4]
 2852 006e 2022     		movs	r2, #32
 2853 0070 83F83920 		strb	r2, [r3, #57]
1903:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1904:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1905:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1906:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1907:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1908:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1909:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1910:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 2854              		.loc 1 1910 0
 2855 0074 7868     		ldr	r0, [r7, #4]
 2856 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2857 007a 09E0     		b	.L122
 2858              	.L118:
1911:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1912:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccRTMmaY.s 			page 84


1913:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1914:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1915:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1916:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1917:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2859              		.loc 1 1917 0
 2860 007c 7B68     		ldr	r3, [r7, #4]
 2861 007e 0022     		movs	r2, #0
 2862 0080 DA84     		strh	r2, [r3, #38]	@ movhi
1918:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1919:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1920:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 2863              		.loc 1 1920 0
 2864 0082 7B68     		ldr	r3, [r7, #4]
 2865 0084 2022     		movs	r2, #32
 2866 0086 83F83920 		strb	r2, [r3, #57]
1921:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1922:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1923:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1924:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1925:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1926:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1927:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1928:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 2867              		.loc 1 1928 0
 2868 008a 7868     		ldr	r0, [r7, #4]
 2869 008c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2870              	.L122:
1929:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1930:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1931:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1932:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2871              		.loc 1 1932 0
 2872 0090 0023     		movs	r3, #0
1933:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2873              		.loc 1 1933 0
 2874 0092 1846     		mov	r0, r3
 2875 0094 0837     		adds	r7, r7, #8
 2876              	.LCFI109:
 2877              		.cfi_def_cfa_offset 8
 2878 0096 BD46     		mov	sp, r7
 2879              	.LCFI110:
 2880              		.cfi_def_cfa_register 13
 2881              		@ sp needed
 2882 0098 80BD     		pop	{r7, pc}
 2883              	.L125:
 2884 009a 00BF     		.align	2
 2885              	.L124:
 2886 009c 00000000 		.word	UART_DMATxOnlyAbortCallback
 2887              		.cfi_endproc
 2888              	.LFE150:
 2890              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2891              		.align	1
 2892              		.global	HAL_UART_AbortReceive_IT
 2893              		.syntax unified
 2894              		.thumb
 2895              		.thumb_func
ARM GAS  /tmp/ccRTMmaY.s 			page 85


 2896              		.fpu fpv4-sp-d16
 2898              	HAL_UART_AbortReceive_IT:
 2899              	.LFB151:
1934:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1937:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1938:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1939:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1940:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1941:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1942:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1943:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1944:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1945:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1946:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1947:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1948:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1949:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1950:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2900              		.loc 1 1950 0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 8
 2903              		@ frame_needed = 1, uses_anonymous_args = 0
 2904 0000 80B5     		push	{r7, lr}
 2905              	.LCFI111:
 2906              		.cfi_def_cfa_offset 8
 2907              		.cfi_offset 7, -8
 2908              		.cfi_offset 14, -4
 2909 0002 82B0     		sub	sp, sp, #8
 2910              	.LCFI112:
 2911              		.cfi_def_cfa_offset 16
 2912 0004 00AF     		add	r7, sp, #0
 2913              	.LCFI113:
 2914              		.cfi_def_cfa_register 7
 2915 0006 7860     		str	r0, [r7, #4]
1951:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1952:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2916              		.loc 1 1952 0
 2917 0008 7B68     		ldr	r3, [r7, #4]
 2918 000a 1B68     		ldr	r3, [r3]
 2919 000c DA68     		ldr	r2, [r3, #12]
 2920 000e 7B68     		ldr	r3, [r7, #4]
 2921 0010 1B68     		ldr	r3, [r3]
 2922 0012 22F49072 		bic	r2, r2, #288
 2923 0016 DA60     		str	r2, [r3, #12]
1953:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2924              		.loc 1 1953 0
 2925 0018 7B68     		ldr	r3, [r7, #4]
 2926 001a 1B68     		ldr	r3, [r3]
 2927 001c 5A69     		ldr	r2, [r3, #20]
 2928 001e 7B68     		ldr	r3, [r7, #4]
 2929 0020 1B68     		ldr	r3, [r3]
 2930 0022 22F00102 		bic	r2, r2, #1
 2931 0026 5A61     		str	r2, [r3, #20]
1954:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1955:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
ARM GAS  /tmp/ccRTMmaY.s 			page 86


1956:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2932              		.loc 1 1956 0
 2933 0028 7B68     		ldr	r3, [r7, #4]
 2934 002a 1B68     		ldr	r3, [r3]
 2935 002c 5B69     		ldr	r3, [r3, #20]
 2936 002e 03F04003 		and	r3, r3, #64
 2937 0032 402B     		cmp	r3, #64
 2938 0034 2AD1     		bne	.L127
1957:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1958:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2939              		.loc 1 1958 0
 2940 0036 7B68     		ldr	r3, [r7, #4]
 2941 0038 1B68     		ldr	r3, [r3]
 2942 003a 5A69     		ldr	r2, [r3, #20]
 2943 003c 7B68     		ldr	r3, [r7, #4]
 2944 003e 1B68     		ldr	r3, [r3]
 2945 0040 22F04002 		bic	r2, r2, #64
 2946 0044 5A61     		str	r2, [r3, #20]
1959:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1960:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1961:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2947              		.loc 1 1961 0
 2948 0046 7B68     		ldr	r3, [r7, #4]
 2949 0048 5B6B     		ldr	r3, [r3, #52]
 2950 004a 002B     		cmp	r3, #0
 2951 004c 13D0     		beq	.L128
1962:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1963:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1964:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1965:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 2952              		.loc 1 1965 0
 2953 004e 7B68     		ldr	r3, [r7, #4]
 2954 0050 5B6B     		ldr	r3, [r3, #52]
 2955 0052 164A     		ldr	r2, .L133
 2956 0054 1A65     		str	r2, [r3, #80]
1966:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1967:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1968:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2957              		.loc 1 1968 0
 2958 0056 7B68     		ldr	r3, [r7, #4]
 2959 0058 5B6B     		ldr	r3, [r3, #52]
 2960 005a 1846     		mov	r0, r3
 2961 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2962 0060 0346     		mov	r3, r0
 2963 0062 002B     		cmp	r3, #0
 2964 0064 1CD0     		beq	.L131
1969:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1970:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1971:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2965              		.loc 1 1971 0
 2966 0066 7B68     		ldr	r3, [r7, #4]
 2967 0068 5B6B     		ldr	r3, [r3, #52]
 2968 006a 1B6D     		ldr	r3, [r3, #80]
 2969 006c 7A68     		ldr	r2, [r7, #4]
 2970 006e 526B     		ldr	r2, [r2, #52]
 2971 0070 1046     		mov	r0, r2
 2972 0072 9847     		blx	r3
ARM GAS  /tmp/ccRTMmaY.s 			page 87


 2973              	.LVL1:
 2974 0074 14E0     		b	.L131
 2975              	.L128:
1972:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1973:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1974:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1975:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1976:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1977:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 2976              		.loc 1 1977 0
 2977 0076 7B68     		ldr	r3, [r7, #4]
 2978 0078 0022     		movs	r2, #0
 2979 007a DA85     		strh	r2, [r3, #46]	@ movhi
1978:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1979:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1980:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 2980              		.loc 1 1980 0
 2981 007c 7B68     		ldr	r3, [r7, #4]
 2982 007e 2022     		movs	r2, #32
 2983 0080 83F83A20 		strb	r2, [r3, #58]
1981:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1983:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1984:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
1985:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
1986:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1987:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
1988:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 2984              		.loc 1 1988 0
 2985 0084 7868     		ldr	r0, [r7, #4]
 2986 0086 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2987 008a 09E0     		b	.L131
 2988              	.L127:
1989:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1990:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1991:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1992:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1993:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1994:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1995:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 2989              		.loc 1 1995 0
 2990 008c 7B68     		ldr	r3, [r7, #4]
 2991 008e 0022     		movs	r2, #0
 2992 0090 DA85     		strh	r2, [r3, #46]	@ movhi
1996:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1998:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2993              		.loc 1 1998 0
 2994 0092 7B68     		ldr	r3, [r7, #4]
 2995 0094 2022     		movs	r2, #32
 2996 0096 83F83A20 		strb	r2, [r3, #58]
1999:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2001:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2002:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2003:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2004:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccRTMmaY.s 			page 88


2005:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2006:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 2997              		.loc 1 2006 0
 2998 009a 7868     		ldr	r0, [r7, #4]
 2999 009c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3000              	.L131:
2007:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2008:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2009:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2010:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3001              		.loc 1 2010 0
 3002 00a0 0023     		movs	r3, #0
2011:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3003              		.loc 1 2011 0
 3004 00a2 1846     		mov	r0, r3
 3005 00a4 0837     		adds	r7, r7, #8
 3006              	.LCFI114:
 3007              		.cfi_def_cfa_offset 8
 3008 00a6 BD46     		mov	sp, r7
 3009              	.LCFI115:
 3010              		.cfi_def_cfa_register 13
 3011              		@ sp needed
 3012 00a8 80BD     		pop	{r7, pc}
 3013              	.L134:
 3014 00aa 00BF     		.align	2
 3015              	.L133:
 3016 00ac 00000000 		.word	UART_DMARxOnlyAbortCallback
 3017              		.cfi_endproc
 3018              	.LFE151:
 3020              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3021              		.align	1
 3022              		.global	HAL_UART_IRQHandler
 3023              		.syntax unified
 3024              		.thumb
 3025              		.thumb_func
 3026              		.fpu fpv4-sp-d16
 3028              	HAL_UART_IRQHandler:
 3029              	.LFB152:
2012:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2013:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2014:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2015:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2016:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2017:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2018:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2019:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2020:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3030              		.loc 1 2020 0
 3031              		.cfi_startproc
 3032              		@ args = 0, pretend = 0, frame = 32
 3033              		@ frame_needed = 1, uses_anonymous_args = 0
 3034 0000 80B5     		push	{r7, lr}
 3035              	.LCFI116:
 3036              		.cfi_def_cfa_offset 8
 3037              		.cfi_offset 7, -8
 3038              		.cfi_offset 14, -4
 3039 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/ccRTMmaY.s 			page 89


 3040              	.LCFI117:
 3041              		.cfi_def_cfa_offset 40
 3042 0004 00AF     		add	r7, sp, #0
 3043              	.LCFI118:
 3044              		.cfi_def_cfa_register 7
 3045 0006 7860     		str	r0, [r7, #4]
2021:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 3046              		.loc 1 2021 0
 3047 0008 7B68     		ldr	r3, [r7, #4]
 3048 000a 1B68     		ldr	r3, [r3]
 3049 000c 1B68     		ldr	r3, [r3]
 3050 000e FB61     		str	r3, [r7, #28]
2022:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3051              		.loc 1 2022 0
 3052 0010 7B68     		ldr	r3, [r7, #4]
 3053 0012 1B68     		ldr	r3, [r3]
 3054 0014 DB68     		ldr	r3, [r3, #12]
 3055 0016 BB61     		str	r3, [r7, #24]
2023:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3056              		.loc 1 2023 0
 3057 0018 7B68     		ldr	r3, [r7, #4]
 3058 001a 1B68     		ldr	r3, [r3]
 3059 001c 5B69     		ldr	r3, [r3, #20]
 3060 001e 7B61     		str	r3, [r7, #20]
2024:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 3061              		.loc 1 2024 0
 3062 0020 0023     		movs	r3, #0
 3063 0022 3B61     		str	r3, [r7, #16]
2025:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3064              		.loc 1 2025 0
 3065 0024 0023     		movs	r3, #0
 3066 0026 FB60     		str	r3, [r7, #12]
2026:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2028:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 3067              		.loc 1 2028 0
 3068 0028 FB69     		ldr	r3, [r7, #28]
 3069 002a 03F00F03 		and	r3, r3, #15
 3070 002e 3B61     		str	r3, [r7, #16]
2029:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 3071              		.loc 1 2029 0
 3072 0030 3B69     		ldr	r3, [r7, #16]
 3073 0032 002B     		cmp	r3, #0
 3074 0034 0DD1     		bne	.L136
2030:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2031:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2032:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3075              		.loc 1 2032 0
 3076 0036 FB69     		ldr	r3, [r7, #28]
 3077 0038 03F02003 		and	r3, r3, #32
 3078 003c 002B     		cmp	r3, #0
 3079 003e 08D0     		beq	.L136
 3080              		.loc 1 2032 0 is_stmt 0 discriminator 1
 3081 0040 BB69     		ldr	r3, [r7, #24]
 3082 0042 03F02003 		and	r3, r3, #32
 3083 0046 002B     		cmp	r3, #0
 3084 0048 03D0     		beq	.L136
ARM GAS  /tmp/ccRTMmaY.s 			page 90


2033:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2034:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 3085              		.loc 1 2034 0 is_stmt 1
 3086 004a 7868     		ldr	r0, [r7, #4]
 3087 004c FFF7FEFF 		bl	UART_Receive_IT
2035:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3088              		.loc 1 2035 0
 3089 0050 D1E0     		b	.L135
 3090              	.L136:
2036:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2037:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2038:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2039:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2040:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
 3091              		.loc 1 2040 0
 3092 0052 3B69     		ldr	r3, [r7, #16]
 3093 0054 002B     		cmp	r3, #0
 3094 0056 00F0B080 		beq	.L138
 3095              		.loc 1 2040 0 is_stmt 0 discriminator 1
 3096 005a 7B69     		ldr	r3, [r7, #20]
 3097 005c 03F00103 		and	r3, r3, #1
 3098 0060 002B     		cmp	r3, #0
 3099 0062 05D1     		bne	.L139
 3100              		.loc 1 2040 0 discriminator 2
 3101 0064 BB69     		ldr	r3, [r7, #24]
 3102 0066 03F49073 		and	r3, r3, #288
 3103 006a 002B     		cmp	r3, #0
 3104 006c 00F0A580 		beq	.L138
 3105              	.L139:
2041:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2042:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2043:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3106              		.loc 1 2043 0 is_stmt 1
 3107 0070 FB69     		ldr	r3, [r7, #28]
 3108 0072 03F00103 		and	r3, r3, #1
 3109 0076 002B     		cmp	r3, #0
 3110 0078 0AD0     		beq	.L140
 3111              		.loc 1 2043 0 is_stmt 0 discriminator 1
 3112 007a BB69     		ldr	r3, [r7, #24]
 3113 007c 03F48073 		and	r3, r3, #256
 3114 0080 002B     		cmp	r3, #0
 3115 0082 05D0     		beq	.L140
2044:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2045:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3116              		.loc 1 2045 0 is_stmt 1
 3117 0084 7B68     		ldr	r3, [r7, #4]
 3118 0086 DB6B     		ldr	r3, [r3, #60]
 3119 0088 43F00102 		orr	r2, r3, #1
 3120 008c 7B68     		ldr	r3, [r7, #4]
 3121 008e DA63     		str	r2, [r3, #60]
 3122              	.L140:
2046:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2047:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2048:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2049:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3123              		.loc 1 2049 0
 3124 0090 FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccRTMmaY.s 			page 91


 3125 0092 03F00403 		and	r3, r3, #4
 3126 0096 002B     		cmp	r3, #0
 3127 0098 0AD0     		beq	.L141
 3128              		.loc 1 2049 0 is_stmt 0 discriminator 1
 3129 009a 7B69     		ldr	r3, [r7, #20]
 3130 009c 03F00103 		and	r3, r3, #1
 3131 00a0 002B     		cmp	r3, #0
 3132 00a2 05D0     		beq	.L141
2050:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2051:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3133              		.loc 1 2051 0 is_stmt 1
 3134 00a4 7B68     		ldr	r3, [r7, #4]
 3135 00a6 DB6B     		ldr	r3, [r3, #60]
 3136 00a8 43F00202 		orr	r2, r3, #2
 3137 00ac 7B68     		ldr	r3, [r7, #4]
 3138 00ae DA63     		str	r2, [r3, #60]
 3139              	.L141:
2052:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2053:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2054:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2055:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3140              		.loc 1 2055 0
 3141 00b0 FB69     		ldr	r3, [r7, #28]
 3142 00b2 03F00203 		and	r3, r3, #2
 3143 00b6 002B     		cmp	r3, #0
 3144 00b8 0AD0     		beq	.L142
 3145              		.loc 1 2055 0 is_stmt 0 discriminator 1
 3146 00ba 7B69     		ldr	r3, [r7, #20]
 3147 00bc 03F00103 		and	r3, r3, #1
 3148 00c0 002B     		cmp	r3, #0
 3149 00c2 05D0     		beq	.L142
2056:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2057:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3150              		.loc 1 2057 0 is_stmt 1
 3151 00c4 7B68     		ldr	r3, [r7, #4]
 3152 00c6 DB6B     		ldr	r3, [r3, #60]
 3153 00c8 43F00402 		orr	r2, r3, #4
 3154 00cc 7B68     		ldr	r3, [r7, #4]
 3155 00ce DA63     		str	r2, [r3, #60]
 3156              	.L142:
2058:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2059:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2060:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2061:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its
 3157              		.loc 1 2061 0
 3158 00d0 FB69     		ldr	r3, [r7, #28]
 3159 00d2 03F00803 		and	r3, r3, #8
 3160 00d6 002B     		cmp	r3, #0
 3161 00d8 0FD0     		beq	.L143
 3162              		.loc 1 2061 0 is_stmt 0 discriminator 1
 3163 00da BB69     		ldr	r3, [r7, #24]
 3164 00dc 03F02003 		and	r3, r3, #32
 3165 00e0 002B     		cmp	r3, #0
 3166 00e2 04D1     		bne	.L144
 3167              		.loc 1 2061 0 discriminator 2
 3168 00e4 7B69     		ldr	r3, [r7, #20]
 3169 00e6 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccRTMmaY.s 			page 92


 3170 00ea 002B     		cmp	r3, #0
 3171 00ec 05D0     		beq	.L143
 3172              	.L144:
2062:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2063:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3173              		.loc 1 2063 0 is_stmt 1
 3174 00ee 7B68     		ldr	r3, [r7, #4]
 3175 00f0 DB6B     		ldr	r3, [r3, #60]
 3176 00f2 43F00802 		orr	r2, r3, #8
 3177 00f6 7B68     		ldr	r3, [r7, #4]
 3178 00f8 DA63     		str	r2, [r3, #60]
 3179              	.L143:
2064:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2065:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2066:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2067:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3180              		.loc 1 2067 0
 3181 00fa 7B68     		ldr	r3, [r7, #4]
 3182 00fc DB6B     		ldr	r3, [r3, #60]
 3183 00fe 002B     		cmp	r3, #0
 3184 0100 78D0     		beq	.L155
2068:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2069:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2070:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3185              		.loc 1 2070 0
 3186 0102 FB69     		ldr	r3, [r7, #28]
 3187 0104 03F02003 		and	r3, r3, #32
 3188 0108 002B     		cmp	r3, #0
 3189 010a 07D0     		beq	.L146
 3190              		.loc 1 2070 0 is_stmt 0 discriminator 1
 3191 010c BB69     		ldr	r3, [r7, #24]
 3192 010e 03F02003 		and	r3, r3, #32
 3193 0112 002B     		cmp	r3, #0
 3194 0114 02D0     		beq	.L146
2071:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2072:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 3195              		.loc 1 2072 0 is_stmt 1
 3196 0116 7868     		ldr	r0, [r7, #4]
 3197 0118 FFF7FEFF 		bl	UART_Receive_IT
 3198              	.L146:
2073:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2074:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2075:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2076:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2077:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 3199              		.loc 1 2077 0
 3200 011c 7B68     		ldr	r3, [r7, #4]
 3201 011e 1B68     		ldr	r3, [r3]
 3202 0120 5B69     		ldr	r3, [r3, #20]
 3203 0122 03F04003 		and	r3, r3, #64
 3204 0126 402B     		cmp	r3, #64
 3205 0128 0CBF     		ite	eq
 3206 012a 0123     		moveq	r3, #1
 3207 012c 0023     		movne	r3, #0
 3208 012e DBB2     		uxtb	r3, r3
 3209 0130 FB60     		str	r3, [r7, #12]
2078:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
ARM GAS  /tmp/ccRTMmaY.s 			page 93


 3210              		.loc 1 2078 0
 3211 0132 7B68     		ldr	r3, [r7, #4]
 3212 0134 DB6B     		ldr	r3, [r3, #60]
 3213 0136 03F00803 		and	r3, r3, #8
 3214 013a 002B     		cmp	r3, #0
 3215 013c 02D1     		bne	.L147
 3216              		.loc 1 2078 0 is_stmt 0 discriminator 1
 3217 013e FB68     		ldr	r3, [r7, #12]
 3218 0140 002B     		cmp	r3, #0
 3219 0142 31D0     		beq	.L148
 3220              	.L147:
2079:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2080:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2081:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2082:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2083:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3221              		.loc 1 2083 0 is_stmt 1
 3222 0144 7868     		ldr	r0, [r7, #4]
 3223 0146 FFF7FEFF 		bl	UART_EndRxTransfer
2084:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2085:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2086:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3224              		.loc 1 2086 0
 3225 014a 7B68     		ldr	r3, [r7, #4]
 3226 014c 1B68     		ldr	r3, [r3]
 3227 014e 5B69     		ldr	r3, [r3, #20]
 3228 0150 03F04003 		and	r3, r3, #64
 3229 0154 402B     		cmp	r3, #64
 3230 0156 23D1     		bne	.L149
2087:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2088:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3231              		.loc 1 2088 0
 3232 0158 7B68     		ldr	r3, [r7, #4]
 3233 015a 1B68     		ldr	r3, [r3]
 3234 015c 5A69     		ldr	r2, [r3, #20]
 3235 015e 7B68     		ldr	r3, [r7, #4]
 3236 0160 1B68     		ldr	r3, [r3]
 3237 0162 22F04002 		bic	r2, r2, #64
 3238 0166 5A61     		str	r2, [r3, #20]
2089:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2090:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2091:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3239              		.loc 1 2091 0
 3240 0168 7B68     		ldr	r3, [r7, #4]
 3241 016a 5B6B     		ldr	r3, [r3, #52]
 3242 016c 002B     		cmp	r3, #0
 3243 016e 13D0     		beq	.L150
2092:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2093:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2094:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2095:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3244              		.loc 1 2095 0
 3245 0170 7B68     		ldr	r3, [r7, #4]
 3246 0172 5B6B     		ldr	r3, [r3, #52]
 3247 0174 214A     		ldr	r2, .L157
 3248 0176 1A65     		str	r2, [r3, #80]
2096:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
ARM GAS  /tmp/ccRTMmaY.s 			page 94


 3249              		.loc 1 2096 0
 3250 0178 7B68     		ldr	r3, [r7, #4]
 3251 017a 5B6B     		ldr	r3, [r3, #52]
 3252 017c 1846     		mov	r0, r3
 3253 017e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3254 0182 0346     		mov	r3, r0
 3255 0184 002B     		cmp	r3, #0
 3256 0186 16D0     		beq	.L156
2097:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2098:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2099:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3257              		.loc 1 2099 0
 3258 0188 7B68     		ldr	r3, [r7, #4]
 3259 018a 5B6B     		ldr	r3, [r3, #52]
 3260 018c 1B6D     		ldr	r3, [r3, #80]
 3261 018e 7A68     		ldr	r2, [r7, #4]
 3262 0190 526B     		ldr	r2, [r2, #52]
 3263 0192 1046     		mov	r0, r2
 3264 0194 9847     		blx	r3
 3265              	.LVL2:
2086:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3266              		.loc 1 2086 0
 3267 0196 0EE0     		b	.L156
 3268              	.L150:
2100:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2101:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2102:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2103:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2104:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2105:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2107:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2108:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2109:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2110:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3269              		.loc 1 2110 0
 3270 0198 7868     		ldr	r0, [r7, #4]
 3271 019a FFF7FEFF 		bl	HAL_UART_ErrorCallback
2086:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3272              		.loc 1 2086 0
 3273 019e 0AE0     		b	.L156
 3274              	.L149:
2111:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2113:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2114:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2115:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2116:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2117:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2118:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2119:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2120:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2121:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2122:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3275              		.loc 1 2122 0
 3276 01a0 7868     		ldr	r0, [r7, #4]
 3277 01a2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /tmp/ccRTMmaY.s 			page 95


2086:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3278              		.loc 1 2086 0
 3279 01a6 06E0     		b	.L156
 3280              	.L148:
2123:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2124:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2125:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2126:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2127:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2128:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2129:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2130:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2131:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2132:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2133:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2134:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2135:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3281              		.loc 1 2135 0
 3282 01a8 7868     		ldr	r0, [r7, #4]
 3283 01aa FFF7FEFF 		bl	HAL_UART_ErrorCallback
2136:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2137:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2138:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3284              		.loc 1 2138 0
 3285 01ae 7B68     		ldr	r3, [r7, #4]
 3286 01b0 0022     		movs	r2, #0
 3287 01b2 DA63     		str	r2, [r3, #60]
2139:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2140:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2141:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3288              		.loc 1 2141 0
 3289 01b4 1EE0     		b	.L155
 3290              	.L156:
2086:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3291              		.loc 1 2086 0
 3292 01b6 00BF     		nop
 3293              		.loc 1 2141 0
 3294 01b8 1CE0     		b	.L155
 3295              	.L138:
2142:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2143:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2145:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3296              		.loc 1 2145 0
 3297 01ba FB69     		ldr	r3, [r7, #28]
 3298 01bc 03F08003 		and	r3, r3, #128
 3299 01c0 002B     		cmp	r3, #0
 3300 01c2 08D0     		beq	.L154
 3301              		.loc 1 2145 0 is_stmt 0 discriminator 1
 3302 01c4 BB69     		ldr	r3, [r7, #24]
 3303 01c6 03F08003 		and	r3, r3, #128
 3304 01ca 002B     		cmp	r3, #0
 3305 01cc 03D0     		beq	.L154
2146:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2147:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3306              		.loc 1 2147 0 is_stmt 1
 3307 01ce 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccRTMmaY.s 			page 96


 3308 01d0 FFF7FEFF 		bl	UART_Transmit_IT
2148:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3309              		.loc 1 2148 0
 3310 01d4 0FE0     		b	.L135
 3311              	.L154:
2149:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2150:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2151:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2152:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3312              		.loc 1 2152 0
 3313 01d6 FB69     		ldr	r3, [r7, #28]
 3314 01d8 03F04003 		and	r3, r3, #64
 3315 01dc 002B     		cmp	r3, #0
 3316 01de 0AD0     		beq	.L135
 3317              		.loc 1 2152 0 is_stmt 0 discriminator 1
 3318 01e0 BB69     		ldr	r3, [r7, #24]
 3319 01e2 03F04003 		and	r3, r3, #64
 3320 01e6 002B     		cmp	r3, #0
 3321 01e8 05D0     		beq	.L135
2153:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2154:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3322              		.loc 1 2154 0 is_stmt 1
 3323 01ea 7868     		ldr	r0, [r7, #4]
 3324 01ec FFF7FEFF 		bl	UART_EndTransmit_IT
2155:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3325              		.loc 1 2155 0
 3326 01f0 00BF     		nop
 3327 01f2 00E0     		b	.L135
 3328              	.L155:
2141:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 3329              		.loc 1 2141 0
 3330 01f4 00BF     		nop
 3331              	.L135:
2156:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2157:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3332              		.loc 1 2157 0
 3333 01f6 2037     		adds	r7, r7, #32
 3334              	.LCFI119:
 3335              		.cfi_def_cfa_offset 8
 3336 01f8 BD46     		mov	sp, r7
 3337              	.LCFI120:
 3338              		.cfi_def_cfa_register 13
 3339              		@ sp needed
 3340 01fa 80BD     		pop	{r7, pc}
 3341              	.L158:
 3342              		.align	2
 3343              	.L157:
 3344 01fc 00000000 		.word	UART_DMAAbortOnError
 3345              		.cfi_endproc
 3346              	.LFE152:
 3348              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3349              		.align	1
 3350              		.weak	HAL_UART_TxCpltCallback
 3351              		.syntax unified
 3352              		.thumb
 3353              		.thumb_func
 3354              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccRTMmaY.s 			page 97


 3356              	HAL_UART_TxCpltCallback:
 3357              	.LFB153:
2158:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2159:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2160:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2161:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2162:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2163:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2164:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2165:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2166:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3358              		.loc 1 2166 0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 8
 3361              		@ frame_needed = 1, uses_anonymous_args = 0
 3362              		@ link register save eliminated.
 3363 0000 80B4     		push	{r7}
 3364              	.LCFI121:
 3365              		.cfi_def_cfa_offset 4
 3366              		.cfi_offset 7, -4
 3367 0002 83B0     		sub	sp, sp, #12
 3368              	.LCFI122:
 3369              		.cfi_def_cfa_offset 16
 3370 0004 00AF     		add	r7, sp, #0
 3371              	.LCFI123:
 3372              		.cfi_def_cfa_register 7
 3373 0006 7860     		str	r0, [r7, #4]
2167:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2168:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2169:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2170:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2171:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2172:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3374              		.loc 1 2172 0
 3375 0008 00BF     		nop
 3376 000a 0C37     		adds	r7, r7, #12
 3377              	.LCFI124:
 3378              		.cfi_def_cfa_offset 4
 3379 000c BD46     		mov	sp, r7
 3380              	.LCFI125:
 3381              		.cfi_def_cfa_register 13
 3382              		@ sp needed
 3383 000e 5DF8047B 		ldr	r7, [sp], #4
 3384              	.LCFI126:
 3385              		.cfi_restore 7
 3386              		.cfi_def_cfa_offset 0
 3387 0012 7047     		bx	lr
 3388              		.cfi_endproc
 3389              	.LFE153:
 3391              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3392              		.align	1
 3393              		.weak	HAL_UART_TxHalfCpltCallback
 3394              		.syntax unified
 3395              		.thumb
 3396              		.thumb_func
 3397              		.fpu fpv4-sp-d16
 3399              	HAL_UART_TxHalfCpltCallback:
ARM GAS  /tmp/ccRTMmaY.s 			page 98


 3400              	.LFB154:
2173:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2174:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2175:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2176:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2177:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2178:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2179:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2180:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2181:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3401              		.loc 1 2181 0
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 8
 3404              		@ frame_needed = 1, uses_anonymous_args = 0
 3405              		@ link register save eliminated.
 3406 0000 80B4     		push	{r7}
 3407              	.LCFI127:
 3408              		.cfi_def_cfa_offset 4
 3409              		.cfi_offset 7, -4
 3410 0002 83B0     		sub	sp, sp, #12
 3411              	.LCFI128:
 3412              		.cfi_def_cfa_offset 16
 3413 0004 00AF     		add	r7, sp, #0
 3414              	.LCFI129:
 3415              		.cfi_def_cfa_register 7
 3416 0006 7860     		str	r0, [r7, #4]
2182:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2183:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2184:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2185:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2186:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2187:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3417              		.loc 1 2187 0
 3418 0008 00BF     		nop
 3419 000a 0C37     		adds	r7, r7, #12
 3420              	.LCFI130:
 3421              		.cfi_def_cfa_offset 4
 3422 000c BD46     		mov	sp, r7
 3423              	.LCFI131:
 3424              		.cfi_def_cfa_register 13
 3425              		@ sp needed
 3426 000e 5DF8047B 		ldr	r7, [sp], #4
 3427              	.LCFI132:
 3428              		.cfi_restore 7
 3429              		.cfi_def_cfa_offset 0
 3430 0012 7047     		bx	lr
 3431              		.cfi_endproc
 3432              	.LFE154:
 3434              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3435              		.align	1
 3436              		.weak	HAL_UART_RxCpltCallback
 3437              		.syntax unified
 3438              		.thumb
 3439              		.thumb_func
 3440              		.fpu fpv4-sp-d16
 3442              	HAL_UART_RxCpltCallback:
 3443              	.LFB155:
ARM GAS  /tmp/ccRTMmaY.s 			page 99


2188:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2189:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2190:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2191:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2192:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2193:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2194:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2195:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2196:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3444              		.loc 1 2196 0
 3445              		.cfi_startproc
 3446              		@ args = 0, pretend = 0, frame = 8
 3447              		@ frame_needed = 1, uses_anonymous_args = 0
 3448              		@ link register save eliminated.
 3449 0000 80B4     		push	{r7}
 3450              	.LCFI133:
 3451              		.cfi_def_cfa_offset 4
 3452              		.cfi_offset 7, -4
 3453 0002 83B0     		sub	sp, sp, #12
 3454              	.LCFI134:
 3455              		.cfi_def_cfa_offset 16
 3456 0004 00AF     		add	r7, sp, #0
 3457              	.LCFI135:
 3458              		.cfi_def_cfa_register 7
 3459 0006 7860     		str	r0, [r7, #4]
2197:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2198:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2199:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2200:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2201:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2202:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3460              		.loc 1 2202 0
 3461 0008 00BF     		nop
 3462 000a 0C37     		adds	r7, r7, #12
 3463              	.LCFI136:
 3464              		.cfi_def_cfa_offset 4
 3465 000c BD46     		mov	sp, r7
 3466              	.LCFI137:
 3467              		.cfi_def_cfa_register 13
 3468              		@ sp needed
 3469 000e 5DF8047B 		ldr	r7, [sp], #4
 3470              	.LCFI138:
 3471              		.cfi_restore 7
 3472              		.cfi_def_cfa_offset 0
 3473 0012 7047     		bx	lr
 3474              		.cfi_endproc
 3475              	.LFE155:
 3477              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3478              		.align	1
 3479              		.weak	HAL_UART_RxHalfCpltCallback
 3480              		.syntax unified
 3481              		.thumb
 3482              		.thumb_func
 3483              		.fpu fpv4-sp-d16
 3485              	HAL_UART_RxHalfCpltCallback:
 3486              	.LFB156:
2203:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 100


2204:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2205:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2206:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2207:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2208:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2209:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2210:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2211:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3487              		.loc 1 2211 0
 3488              		.cfi_startproc
 3489              		@ args = 0, pretend = 0, frame = 8
 3490              		@ frame_needed = 1, uses_anonymous_args = 0
 3491              		@ link register save eliminated.
 3492 0000 80B4     		push	{r7}
 3493              	.LCFI139:
 3494              		.cfi_def_cfa_offset 4
 3495              		.cfi_offset 7, -4
 3496 0002 83B0     		sub	sp, sp, #12
 3497              	.LCFI140:
 3498              		.cfi_def_cfa_offset 16
 3499 0004 00AF     		add	r7, sp, #0
 3500              	.LCFI141:
 3501              		.cfi_def_cfa_register 7
 3502 0006 7860     		str	r0, [r7, #4]
2212:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2213:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2214:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2215:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2216:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2217:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3503              		.loc 1 2217 0
 3504 0008 00BF     		nop
 3505 000a 0C37     		adds	r7, r7, #12
 3506              	.LCFI142:
 3507              		.cfi_def_cfa_offset 4
 3508 000c BD46     		mov	sp, r7
 3509              	.LCFI143:
 3510              		.cfi_def_cfa_register 13
 3511              		@ sp needed
 3512 000e 5DF8047B 		ldr	r7, [sp], #4
 3513              	.LCFI144:
 3514              		.cfi_restore 7
 3515              		.cfi_def_cfa_offset 0
 3516 0012 7047     		bx	lr
 3517              		.cfi_endproc
 3518              	.LFE156:
 3520              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3521              		.align	1
 3522              		.weak	HAL_UART_ErrorCallback
 3523              		.syntax unified
 3524              		.thumb
 3525              		.thumb_func
 3526              		.fpu fpv4-sp-d16
 3528              	HAL_UART_ErrorCallback:
 3529              	.LFB157:
2218:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2219:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccRTMmaY.s 			page 101


2220:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2221:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2222:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2223:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2224:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2225:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2226:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3530              		.loc 1 2226 0
 3531              		.cfi_startproc
 3532              		@ args = 0, pretend = 0, frame = 8
 3533              		@ frame_needed = 1, uses_anonymous_args = 0
 3534              		@ link register save eliminated.
 3535 0000 80B4     		push	{r7}
 3536              	.LCFI145:
 3537              		.cfi_def_cfa_offset 4
 3538              		.cfi_offset 7, -4
 3539 0002 83B0     		sub	sp, sp, #12
 3540              	.LCFI146:
 3541              		.cfi_def_cfa_offset 16
 3542 0004 00AF     		add	r7, sp, #0
 3543              	.LCFI147:
 3544              		.cfi_def_cfa_register 7
 3545 0006 7860     		str	r0, [r7, #4]
2227:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2228:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2229:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2230:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2231:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2232:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3546              		.loc 1 2232 0
 3547 0008 00BF     		nop
 3548 000a 0C37     		adds	r7, r7, #12
 3549              	.LCFI148:
 3550              		.cfi_def_cfa_offset 4
 3551 000c BD46     		mov	sp, r7
 3552              	.LCFI149:
 3553              		.cfi_def_cfa_register 13
 3554              		@ sp needed
 3555 000e 5DF8047B 		ldr	r7, [sp], #4
 3556              	.LCFI150:
 3557              		.cfi_restore 7
 3558              		.cfi_def_cfa_offset 0
 3559 0012 7047     		bx	lr
 3560              		.cfi_endproc
 3561              	.LFE157:
 3563              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3564              		.align	1
 3565              		.weak	HAL_UART_AbortCpltCallback
 3566              		.syntax unified
 3567              		.thumb
 3568              		.thumb_func
 3569              		.fpu fpv4-sp-d16
 3571              	HAL_UART_AbortCpltCallback:
 3572              	.LFB158:
2233:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2234:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2235:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
ARM GAS  /tmp/ccRTMmaY.s 			page 102


2236:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2237:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2238:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2239:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2240:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3573              		.loc 1 2240 0
 3574              		.cfi_startproc
 3575              		@ args = 0, pretend = 0, frame = 8
 3576              		@ frame_needed = 1, uses_anonymous_args = 0
 3577              		@ link register save eliminated.
 3578 0000 80B4     		push	{r7}
 3579              	.LCFI151:
 3580              		.cfi_def_cfa_offset 4
 3581              		.cfi_offset 7, -4
 3582 0002 83B0     		sub	sp, sp, #12
 3583              	.LCFI152:
 3584              		.cfi_def_cfa_offset 16
 3585 0004 00AF     		add	r7, sp, #0
 3586              	.LCFI153:
 3587              		.cfi_def_cfa_register 7
 3588 0006 7860     		str	r0, [r7, #4]
2241:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2242:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2243:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2244:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2245:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2246:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2247:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3589              		.loc 1 2247 0
 3590 0008 00BF     		nop
 3591 000a 0C37     		adds	r7, r7, #12
 3592              	.LCFI154:
 3593              		.cfi_def_cfa_offset 4
 3594 000c BD46     		mov	sp, r7
 3595              	.LCFI155:
 3596              		.cfi_def_cfa_register 13
 3597              		@ sp needed
 3598 000e 5DF8047B 		ldr	r7, [sp], #4
 3599              	.LCFI156:
 3600              		.cfi_restore 7
 3601              		.cfi_def_cfa_offset 0
 3602 0012 7047     		bx	lr
 3603              		.cfi_endproc
 3604              	.LFE158:
 3606              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3607              		.align	1
 3608              		.weak	HAL_UART_AbortTransmitCpltCallback
 3609              		.syntax unified
 3610              		.thumb
 3611              		.thumb_func
 3612              		.fpu fpv4-sp-d16
 3614              	HAL_UART_AbortTransmitCpltCallback:
 3615              	.LFB159:
2248:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2249:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2250:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2251:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccRTMmaY.s 			page 103


2252:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2253:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2254:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2255:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3616              		.loc 1 2255 0
 3617              		.cfi_startproc
 3618              		@ args = 0, pretend = 0, frame = 8
 3619              		@ frame_needed = 1, uses_anonymous_args = 0
 3620              		@ link register save eliminated.
 3621 0000 80B4     		push	{r7}
 3622              	.LCFI157:
 3623              		.cfi_def_cfa_offset 4
 3624              		.cfi_offset 7, -4
 3625 0002 83B0     		sub	sp, sp, #12
 3626              	.LCFI158:
 3627              		.cfi_def_cfa_offset 16
 3628 0004 00AF     		add	r7, sp, #0
 3629              	.LCFI159:
 3630              		.cfi_def_cfa_register 7
 3631 0006 7860     		str	r0, [r7, #4]
2256:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2257:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2258:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2259:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2260:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2261:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2262:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3632              		.loc 1 2262 0
 3633 0008 00BF     		nop
 3634 000a 0C37     		adds	r7, r7, #12
 3635              	.LCFI160:
 3636              		.cfi_def_cfa_offset 4
 3637 000c BD46     		mov	sp, r7
 3638              	.LCFI161:
 3639              		.cfi_def_cfa_register 13
 3640              		@ sp needed
 3641 000e 5DF8047B 		ldr	r7, [sp], #4
 3642              	.LCFI162:
 3643              		.cfi_restore 7
 3644              		.cfi_def_cfa_offset 0
 3645 0012 7047     		bx	lr
 3646              		.cfi_endproc
 3647              	.LFE159:
 3649              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3650              		.align	1
 3651              		.weak	HAL_UART_AbortReceiveCpltCallback
 3652              		.syntax unified
 3653              		.thumb
 3654              		.thumb_func
 3655              		.fpu fpv4-sp-d16
 3657              	HAL_UART_AbortReceiveCpltCallback:
 3658              	.LFB160:
2263:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2264:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2265:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2266:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2267:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccRTMmaY.s 			page 104


2268:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2269:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2270:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3659              		.loc 1 2270 0
 3660              		.cfi_startproc
 3661              		@ args = 0, pretend = 0, frame = 8
 3662              		@ frame_needed = 1, uses_anonymous_args = 0
 3663              		@ link register save eliminated.
 3664 0000 80B4     		push	{r7}
 3665              	.LCFI163:
 3666              		.cfi_def_cfa_offset 4
 3667              		.cfi_offset 7, -4
 3668 0002 83B0     		sub	sp, sp, #12
 3669              	.LCFI164:
 3670              		.cfi_def_cfa_offset 16
 3671 0004 00AF     		add	r7, sp, #0
 3672              	.LCFI165:
 3673              		.cfi_def_cfa_register 7
 3674 0006 7860     		str	r0, [r7, #4]
2271:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2272:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2273:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2274:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2275:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2276:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2277:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3675              		.loc 1 2277 0
 3676 0008 00BF     		nop
 3677 000a 0C37     		adds	r7, r7, #12
 3678              	.LCFI166:
 3679              		.cfi_def_cfa_offset 4
 3680 000c BD46     		mov	sp, r7
 3681              	.LCFI167:
 3682              		.cfi_def_cfa_register 13
 3683              		@ sp needed
 3684 000e 5DF8047B 		ldr	r7, [sp], #4
 3685              	.LCFI168:
 3686              		.cfi_restore 7
 3687              		.cfi_def_cfa_offset 0
 3688 0012 7047     		bx	lr
 3689              		.cfi_endproc
 3690              	.LFE160:
 3692              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3693              		.align	1
 3694              		.global	HAL_LIN_SendBreak
 3695              		.syntax unified
 3696              		.thumb
 3697              		.thumb_func
 3698              		.fpu fpv4-sp-d16
 3700              	HAL_LIN_SendBreak:
 3701              	.LFB161:
2278:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2279:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2280:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2281:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2282:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2283:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
ARM GAS  /tmp/ccRTMmaY.s 			page 105


2284:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2285:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2286:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2287:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2288:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2289:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2290:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2291:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2292:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2293:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2294:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2295:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2296:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2297:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2299:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2300:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2301:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2302:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2303:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2304:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2305:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2306:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2307:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2308:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2309:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3702              		.loc 1 2309 0
 3703              		.cfi_startproc
 3704              		@ args = 0, pretend = 0, frame = 8
 3705              		@ frame_needed = 1, uses_anonymous_args = 0
 3706              		@ link register save eliminated.
 3707 0000 80B4     		push	{r7}
 3708              	.LCFI169:
 3709              		.cfi_def_cfa_offset 4
 3710              		.cfi_offset 7, -4
 3711 0002 83B0     		sub	sp, sp, #12
 3712              	.LCFI170:
 3713              		.cfi_def_cfa_offset 16
 3714 0004 00AF     		add	r7, sp, #0
 3715              	.LCFI171:
 3716              		.cfi_def_cfa_register 7
 3717 0006 7860     		str	r0, [r7, #4]
2310:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2311:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2312:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2313:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2314:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3718              		.loc 1 2314 0
 3719 0008 7B68     		ldr	r3, [r7, #4]
 3720 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3721 000e 012B     		cmp	r3, #1
 3722 0010 01D1     		bne	.L168
 3723              		.loc 1 2314 0 is_stmt 0 discriminator 1
 3724 0012 0223     		movs	r3, #2
 3725 0014 18E0     		b	.L169
 3726              	.L168:
 3727              		.loc 1 2314 0 discriminator 2
ARM GAS  /tmp/ccRTMmaY.s 			page 106


 3728 0016 7B68     		ldr	r3, [r7, #4]
 3729 0018 0122     		movs	r2, #1
 3730 001a 83F83820 		strb	r2, [r3, #56]
2315:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2316:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3731              		.loc 1 2316 0 is_stmt 1 discriminator 2
 3732 001e 7B68     		ldr	r3, [r7, #4]
 3733 0020 2422     		movs	r2, #36
 3734 0022 83F83920 		strb	r2, [r3, #57]
2317:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2319:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 3735              		.loc 1 2319 0 discriminator 2
 3736 0026 7B68     		ldr	r3, [r7, #4]
 3737 0028 1B68     		ldr	r3, [r3]
 3738 002a DA68     		ldr	r2, [r3, #12]
 3739 002c 7B68     		ldr	r3, [r7, #4]
 3740 002e 1B68     		ldr	r3, [r3]
 3741 0030 42F00102 		orr	r2, r2, #1
 3742 0034 DA60     		str	r2, [r3, #12]
2320:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2321:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3743              		.loc 1 2321 0 discriminator 2
 3744 0036 7B68     		ldr	r3, [r7, #4]
 3745 0038 2022     		movs	r2, #32
 3746 003a 83F83920 		strb	r2, [r3, #57]
2322:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2323:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2324:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3747              		.loc 1 2324 0 discriminator 2
 3748 003e 7B68     		ldr	r3, [r7, #4]
 3749 0040 0022     		movs	r2, #0
 3750 0042 83F83820 		strb	r2, [r3, #56]
2325:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2326:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3751              		.loc 1 2326 0 discriminator 2
 3752 0046 0023     		movs	r3, #0
 3753              	.L169:
2327:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3754              		.loc 1 2327 0
 3755 0048 1846     		mov	r0, r3
 3756 004a 0C37     		adds	r7, r7, #12
 3757              	.LCFI172:
 3758              		.cfi_def_cfa_offset 4
 3759 004c BD46     		mov	sp, r7
 3760              	.LCFI173:
 3761              		.cfi_def_cfa_register 13
 3762              		@ sp needed
 3763 004e 5DF8047B 		ldr	r7, [sp], #4
 3764              	.LCFI174:
 3765              		.cfi_restore 7
 3766              		.cfi_def_cfa_offset 0
 3767 0052 7047     		bx	lr
 3768              		.cfi_endproc
 3769              	.LFE161:
 3771              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3772              		.align	1
ARM GAS  /tmp/ccRTMmaY.s 			page 107


 3773              		.global	HAL_MultiProcessor_EnterMuteMode
 3774              		.syntax unified
 3775              		.thumb
 3776              		.thumb_func
 3777              		.fpu fpv4-sp-d16
 3779              	HAL_MultiProcessor_EnterMuteMode:
 3780              	.LFB162:
2328:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2330:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2331:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2332:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2333:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2334:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2335:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2336:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3781              		.loc 1 2336 0
 3782              		.cfi_startproc
 3783              		@ args = 0, pretend = 0, frame = 8
 3784              		@ frame_needed = 1, uses_anonymous_args = 0
 3785              		@ link register save eliminated.
 3786 0000 80B4     		push	{r7}
 3787              	.LCFI175:
 3788              		.cfi_def_cfa_offset 4
 3789              		.cfi_offset 7, -4
 3790 0002 83B0     		sub	sp, sp, #12
 3791              	.LCFI176:
 3792              		.cfi_def_cfa_offset 16
 3793 0004 00AF     		add	r7, sp, #0
 3794              	.LCFI177:
 3795              		.cfi_def_cfa_register 7
 3796 0006 7860     		str	r0, [r7, #4]
2337:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2338:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2339:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2340:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2341:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3797              		.loc 1 2341 0
 3798 0008 7B68     		ldr	r3, [r7, #4]
 3799 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3800 000e 012B     		cmp	r3, #1
 3801 0010 01D1     		bne	.L171
 3802              		.loc 1 2341 0 is_stmt 0 discriminator 1
 3803 0012 0223     		movs	r3, #2
 3804 0014 18E0     		b	.L172
 3805              	.L171:
 3806              		.loc 1 2341 0 discriminator 2
 3807 0016 7B68     		ldr	r3, [r7, #4]
 3808 0018 0122     		movs	r2, #1
 3809 001a 83F83820 		strb	r2, [r3, #56]
2342:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2343:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3810              		.loc 1 2343 0 is_stmt 1 discriminator 2
 3811 001e 7B68     		ldr	r3, [r7, #4]
 3812 0020 2422     		movs	r2, #36
 3813 0022 83F83920 		strb	r2, [r3, #57]
2344:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 108


2345:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2346:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3814              		.loc 1 2346 0 discriminator 2
 3815 0026 7B68     		ldr	r3, [r7, #4]
 3816 0028 1B68     		ldr	r3, [r3]
 3817 002a DA68     		ldr	r2, [r3, #12]
 3818 002c 7B68     		ldr	r3, [r7, #4]
 3819 002e 1B68     		ldr	r3, [r3]
 3820 0030 42F00202 		orr	r2, r2, #2
 3821 0034 DA60     		str	r2, [r3, #12]
2347:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2348:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3822              		.loc 1 2348 0 discriminator 2
 3823 0036 7B68     		ldr	r3, [r7, #4]
 3824 0038 2022     		movs	r2, #32
 3825 003a 83F83920 		strb	r2, [r3, #57]
2349:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2350:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2351:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3826              		.loc 1 2351 0 discriminator 2
 3827 003e 7B68     		ldr	r3, [r7, #4]
 3828 0040 0022     		movs	r2, #0
 3829 0042 83F83820 		strb	r2, [r3, #56]
2352:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2353:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3830              		.loc 1 2353 0 discriminator 2
 3831 0046 0023     		movs	r3, #0
 3832              	.L172:
2354:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3833              		.loc 1 2354 0
 3834 0048 1846     		mov	r0, r3
 3835 004a 0C37     		adds	r7, r7, #12
 3836              	.LCFI178:
 3837              		.cfi_def_cfa_offset 4
 3838 004c BD46     		mov	sp, r7
 3839              	.LCFI179:
 3840              		.cfi_def_cfa_register 13
 3841              		@ sp needed
 3842 004e 5DF8047B 		ldr	r7, [sp], #4
 3843              	.LCFI180:
 3844              		.cfi_restore 7
 3845              		.cfi_def_cfa_offset 0
 3846 0052 7047     		bx	lr
 3847              		.cfi_endproc
 3848              	.LFE162:
 3850              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3851              		.align	1
 3852              		.global	HAL_MultiProcessor_ExitMuteMode
 3853              		.syntax unified
 3854              		.thumb
 3855              		.thumb_func
 3856              		.fpu fpv4-sp-d16
 3858              	HAL_MultiProcessor_ExitMuteMode:
 3859              	.LFB163:
2355:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2356:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2357:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
ARM GAS  /tmp/ccRTMmaY.s 			page 109


2358:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2359:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2360:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2361:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2362:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2363:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3860              		.loc 1 2363 0
 3861              		.cfi_startproc
 3862              		@ args = 0, pretend = 0, frame = 8
 3863              		@ frame_needed = 1, uses_anonymous_args = 0
 3864              		@ link register save eliminated.
 3865 0000 80B4     		push	{r7}
 3866              	.LCFI181:
 3867              		.cfi_def_cfa_offset 4
 3868              		.cfi_offset 7, -4
 3869 0002 83B0     		sub	sp, sp, #12
 3870              	.LCFI182:
 3871              		.cfi_def_cfa_offset 16
 3872 0004 00AF     		add	r7, sp, #0
 3873              	.LCFI183:
 3874              		.cfi_def_cfa_register 7
 3875 0006 7860     		str	r0, [r7, #4]
2364:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2365:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2366:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2367:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2368:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3876              		.loc 1 2368 0
 3877 0008 7B68     		ldr	r3, [r7, #4]
 3878 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3879 000e 012B     		cmp	r3, #1
 3880 0010 01D1     		bne	.L174
 3881              		.loc 1 2368 0 is_stmt 0 discriminator 1
 3882 0012 0223     		movs	r3, #2
 3883 0014 18E0     		b	.L175
 3884              	.L174:
 3885              		.loc 1 2368 0 discriminator 2
 3886 0016 7B68     		ldr	r3, [r7, #4]
 3887 0018 0122     		movs	r2, #1
 3888 001a 83F83820 		strb	r2, [r3, #56]
2369:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2370:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3889              		.loc 1 2370 0 is_stmt 1 discriminator 2
 3890 001e 7B68     		ldr	r3, [r7, #4]
 3891 0020 2422     		movs	r2, #36
 3892 0022 83F83920 		strb	r2, [r3, #57]
2371:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2372:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2373:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3893              		.loc 1 2373 0 discriminator 2
 3894 0026 7B68     		ldr	r3, [r7, #4]
 3895 0028 1B68     		ldr	r3, [r3]
 3896 002a DA68     		ldr	r2, [r3, #12]
 3897 002c 7B68     		ldr	r3, [r7, #4]
 3898 002e 1B68     		ldr	r3, [r3]
 3899 0030 22F00202 		bic	r2, r2, #2
 3900 0034 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccRTMmaY.s 			page 110


2374:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2375:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3901              		.loc 1 2375 0 discriminator 2
 3902 0036 7B68     		ldr	r3, [r7, #4]
 3903 0038 2022     		movs	r2, #32
 3904 003a 83F83920 		strb	r2, [r3, #57]
2376:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2377:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2378:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3905              		.loc 1 2378 0 discriminator 2
 3906 003e 7B68     		ldr	r3, [r7, #4]
 3907 0040 0022     		movs	r2, #0
 3908 0042 83F83820 		strb	r2, [r3, #56]
2379:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3909              		.loc 1 2380 0 discriminator 2
 3910 0046 0023     		movs	r3, #0
 3911              	.L175:
2381:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3912              		.loc 1 2381 0
 3913 0048 1846     		mov	r0, r3
 3914 004a 0C37     		adds	r7, r7, #12
 3915              	.LCFI184:
 3916              		.cfi_def_cfa_offset 4
 3917 004c BD46     		mov	sp, r7
 3918              	.LCFI185:
 3919              		.cfi_def_cfa_register 13
 3920              		@ sp needed
 3921 004e 5DF8047B 		ldr	r7, [sp], #4
 3922              	.LCFI186:
 3923              		.cfi_restore 7
 3924              		.cfi_def_cfa_offset 0
 3925 0052 7047     		bx	lr
 3926              		.cfi_endproc
 3927              	.LFE163:
 3929              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3930              		.align	1
 3931              		.global	HAL_HalfDuplex_EnableTransmitter
 3932              		.syntax unified
 3933              		.thumb
 3934              		.thumb_func
 3935              		.fpu fpv4-sp-d16
 3937              	HAL_HalfDuplex_EnableTransmitter:
 3938              	.LFB164:
2382:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2383:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2384:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2385:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2386:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2387:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2388:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2389:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2390:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3939              		.loc 1 2390 0
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 16
 3942              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccRTMmaY.s 			page 111


 3943              		@ link register save eliminated.
 3944 0000 80B4     		push	{r7}
 3945              	.LCFI187:
 3946              		.cfi_def_cfa_offset 4
 3947              		.cfi_offset 7, -4
 3948 0002 85B0     		sub	sp, sp, #20
 3949              	.LCFI188:
 3950              		.cfi_def_cfa_offset 24
 3951 0004 00AF     		add	r7, sp, #0
 3952              	.LCFI189:
 3953              		.cfi_def_cfa_register 7
 3954 0006 7860     		str	r0, [r7, #4]
2391:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3955              		.loc 1 2391 0
 3956 0008 0023     		movs	r3, #0
 3957 000a FB60     		str	r3, [r7, #12]
2392:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2393:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2394:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3958              		.loc 1 2394 0
 3959 000c 7B68     		ldr	r3, [r7, #4]
 3960 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3961 0012 012B     		cmp	r3, #1
 3962 0014 01D1     		bne	.L177
 3963              		.loc 1 2394 0 is_stmt 0 discriminator 1
 3964 0016 0223     		movs	r3, #2
 3965 0018 20E0     		b	.L178
 3966              	.L177:
 3967              		.loc 1 2394 0 discriminator 2
 3968 001a 7B68     		ldr	r3, [r7, #4]
 3969 001c 0122     		movs	r2, #1
 3970 001e 83F83820 		strb	r2, [r3, #56]
2395:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2396:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3971              		.loc 1 2396 0 is_stmt 1 discriminator 2
 3972 0022 7B68     		ldr	r3, [r7, #4]
 3973 0024 2422     		movs	r2, #36
 3974 0026 83F83920 		strb	r2, [r3, #57]
2397:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2398:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2399:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 3975              		.loc 1 2399 0 discriminator 2
 3976 002a 7B68     		ldr	r3, [r7, #4]
 3977 002c 1B68     		ldr	r3, [r3]
 3978 002e DB68     		ldr	r3, [r3, #12]
 3979 0030 FB60     		str	r3, [r7, #12]
2400:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2401:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2402:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 3980              		.loc 1 2402 0 discriminator 2
 3981 0032 FB68     		ldr	r3, [r7, #12]
 3982 0034 23F00C03 		bic	r3, r3, #12
 3983 0038 FB60     		str	r3, [r7, #12]
2403:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2404:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2405:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 3984              		.loc 1 2405 0 discriminator 2
ARM GAS  /tmp/ccRTMmaY.s 			page 112


 3985 003a FB68     		ldr	r3, [r7, #12]
 3986 003c 43F00803 		orr	r3, r3, #8
 3987 0040 FB60     		str	r3, [r7, #12]
2406:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2408:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 3988              		.loc 1 2408 0 discriminator 2
 3989 0042 7B68     		ldr	r3, [r7, #4]
 3990 0044 1B68     		ldr	r3, [r3]
 3991 0046 FA68     		ldr	r2, [r7, #12]
 3992 0048 DA60     		str	r2, [r3, #12]
2409:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3993              		.loc 1 2410 0 discriminator 2
 3994 004a 7B68     		ldr	r3, [r7, #4]
 3995 004c 2022     		movs	r2, #32
 3996 004e 83F83920 		strb	r2, [r3, #57]
2411:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2412:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2413:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3997              		.loc 1 2413 0 discriminator 2
 3998 0052 7B68     		ldr	r3, [r7, #4]
 3999 0054 0022     		movs	r2, #0
 4000 0056 83F83820 		strb	r2, [r3, #56]
2414:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4001              		.loc 1 2415 0 discriminator 2
 4002 005a 0023     		movs	r3, #0
 4003              	.L178:
2416:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4004              		.loc 1 2416 0
 4005 005c 1846     		mov	r0, r3
 4006 005e 1437     		adds	r7, r7, #20
 4007              	.LCFI190:
 4008              		.cfi_def_cfa_offset 4
 4009 0060 BD46     		mov	sp, r7
 4010              	.LCFI191:
 4011              		.cfi_def_cfa_register 13
 4012              		@ sp needed
 4013 0062 5DF8047B 		ldr	r7, [sp], #4
 4014              	.LCFI192:
 4015              		.cfi_restore 7
 4016              		.cfi_def_cfa_offset 0
 4017 0066 7047     		bx	lr
 4018              		.cfi_endproc
 4019              	.LFE164:
 4021              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4022              		.align	1
 4023              		.global	HAL_HalfDuplex_EnableReceiver
 4024              		.syntax unified
 4025              		.thumb
 4026              		.thumb_func
 4027              		.fpu fpv4-sp-d16
 4029              	HAL_HalfDuplex_EnableReceiver:
 4030              	.LFB165:
2417:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccRTMmaY.s 			page 113


2419:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2420:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2421:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2422:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2423:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2424:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2425:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4031              		.loc 1 2425 0
 4032              		.cfi_startproc
 4033              		@ args = 0, pretend = 0, frame = 16
 4034              		@ frame_needed = 1, uses_anonymous_args = 0
 4035              		@ link register save eliminated.
 4036 0000 80B4     		push	{r7}
 4037              	.LCFI193:
 4038              		.cfi_def_cfa_offset 4
 4039              		.cfi_offset 7, -4
 4040 0002 85B0     		sub	sp, sp, #20
 4041              	.LCFI194:
 4042              		.cfi_def_cfa_offset 24
 4043 0004 00AF     		add	r7, sp, #0
 4044              	.LCFI195:
 4045              		.cfi_def_cfa_register 7
 4046 0006 7860     		str	r0, [r7, #4]
2426:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4047              		.loc 1 2426 0
 4048 0008 0023     		movs	r3, #0
 4049 000a FB60     		str	r3, [r7, #12]
2427:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2429:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4050              		.loc 1 2429 0
 4051 000c 7B68     		ldr	r3, [r7, #4]
 4052 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4053 0012 012B     		cmp	r3, #1
 4054 0014 01D1     		bne	.L180
 4055              		.loc 1 2429 0 is_stmt 0 discriminator 1
 4056 0016 0223     		movs	r3, #2
 4057 0018 20E0     		b	.L181
 4058              	.L180:
 4059              		.loc 1 2429 0 discriminator 2
 4060 001a 7B68     		ldr	r3, [r7, #4]
 4061 001c 0122     		movs	r2, #1
 4062 001e 83F83820 		strb	r2, [r3, #56]
2430:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2431:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4063              		.loc 1 2431 0 is_stmt 1 discriminator 2
 4064 0022 7B68     		ldr	r3, [r7, #4]
 4065 0024 2422     		movs	r2, #36
 4066 0026 83F83920 		strb	r2, [r3, #57]
2432:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2434:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4067              		.loc 1 2434 0 discriminator 2
 4068 002a 7B68     		ldr	r3, [r7, #4]
 4069 002c 1B68     		ldr	r3, [r3]
 4070 002e DB68     		ldr	r3, [r3, #12]
 4071 0030 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccRTMmaY.s 			page 114


2435:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2436:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2437:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4072              		.loc 1 2437 0 discriminator 2
 4073 0032 FB68     		ldr	r3, [r7, #12]
 4074 0034 23F00C03 		bic	r3, r3, #12
 4075 0038 FB60     		str	r3, [r7, #12]
2438:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2439:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2440:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 4076              		.loc 1 2440 0 discriminator 2
 4077 003a FB68     		ldr	r3, [r7, #12]
 4078 003c 43F00403 		orr	r3, r3, #4
 4079 0040 FB60     		str	r3, [r7, #12]
2441:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2443:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4080              		.loc 1 2443 0 discriminator 2
 4081 0042 7B68     		ldr	r3, [r7, #4]
 4082 0044 1B68     		ldr	r3, [r3]
 4083 0046 FA68     		ldr	r2, [r7, #12]
 4084 0048 DA60     		str	r2, [r3, #12]
2444:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4085              		.loc 1 2445 0 discriminator 2
 4086 004a 7B68     		ldr	r3, [r7, #4]
 4087 004c 2022     		movs	r2, #32
 4088 004e 83F83920 		strb	r2, [r3, #57]
2446:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2448:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4089              		.loc 1 2448 0 discriminator 2
 4090 0052 7B68     		ldr	r3, [r7, #4]
 4091 0054 0022     		movs	r2, #0
 4092 0056 83F83820 		strb	r2, [r3, #56]
2449:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2450:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4093              		.loc 1 2450 0 discriminator 2
 4094 005a 0023     		movs	r3, #0
 4095              	.L181:
2451:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4096              		.loc 1 2451 0
 4097 005c 1846     		mov	r0, r3
 4098 005e 1437     		adds	r7, r7, #20
 4099              	.LCFI196:
 4100              		.cfi_def_cfa_offset 4
 4101 0060 BD46     		mov	sp, r7
 4102              	.LCFI197:
 4103              		.cfi_def_cfa_register 13
 4104              		@ sp needed
 4105 0062 5DF8047B 		ldr	r7, [sp], #4
 4106              	.LCFI198:
 4107              		.cfi_restore 7
 4108              		.cfi_def_cfa_offset 0
 4109 0066 7047     		bx	lr
 4110              		.cfi_endproc
 4111              	.LFE165:
ARM GAS  /tmp/ccRTMmaY.s 			page 115


 4113              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4114              		.align	1
 4115              		.global	HAL_UART_GetState
 4116              		.syntax unified
 4117              		.thumb
 4118              		.thumb_func
 4119              		.fpu fpv4-sp-d16
 4121              	HAL_UART_GetState:
 4122              	.LFB166:
2452:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2453:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2454:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2455:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2456:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2458:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2459:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2460:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2461:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2462:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2463:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2464:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2465:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2466:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2467:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2468:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2469:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2470:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2471:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2472:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2473:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2474:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2475:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2476:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2477:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2478:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2479:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2480:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2481:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2482:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4123              		.loc 1 2482 0
 4124              		.cfi_startproc
 4125              		@ args = 0, pretend = 0, frame = 16
 4126              		@ frame_needed = 1, uses_anonymous_args = 0
 4127              		@ link register save eliminated.
 4128 0000 80B4     		push	{r7}
 4129              	.LCFI199:
 4130              		.cfi_def_cfa_offset 4
 4131              		.cfi_offset 7, -4
 4132 0002 85B0     		sub	sp, sp, #20
 4133              	.LCFI200:
 4134              		.cfi_def_cfa_offset 24
 4135 0004 00AF     		add	r7, sp, #0
 4136              	.LCFI201:
 4137              		.cfi_def_cfa_register 7
 4138 0006 7860     		str	r0, [r7, #4]
2483:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
ARM GAS  /tmp/ccRTMmaY.s 			page 116


 4139              		.loc 1 2483 0
 4140 0008 0023     		movs	r3, #0
 4141 000a FB60     		str	r3, [r7, #12]
 4142 000c 0023     		movs	r3, #0
 4143 000e BB60     		str	r3, [r7, #8]
2484:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 4144              		.loc 1 2484 0
 4145 0010 7B68     		ldr	r3, [r7, #4]
 4146 0012 93F83930 		ldrb	r3, [r3, #57]
 4147 0016 DBB2     		uxtb	r3, r3
 4148 0018 FB60     		str	r3, [r7, #12]
2485:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4149              		.loc 1 2485 0
 4150 001a 7B68     		ldr	r3, [r7, #4]
 4151 001c 93F83A30 		ldrb	r3, [r3, #58]
 4152 0020 DBB2     		uxtb	r3, r3
 4153 0022 BB60     		str	r3, [r7, #8]
2486:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4154              		.loc 1 2487 0
 4155 0024 FB68     		ldr	r3, [r7, #12]
 4156 0026 DAB2     		uxtb	r2, r3
 4157 0028 BB68     		ldr	r3, [r7, #8]
 4158 002a DBB2     		uxtb	r3, r3
 4159 002c 1343     		orrs	r3, r3, r2
 4160 002e DBB2     		uxtb	r3, r3
2488:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4161              		.loc 1 2488 0
 4162 0030 1846     		mov	r0, r3
 4163 0032 1437     		adds	r7, r7, #20
 4164              	.LCFI202:
 4165              		.cfi_def_cfa_offset 4
 4166 0034 BD46     		mov	sp, r7
 4167              	.LCFI203:
 4168              		.cfi_def_cfa_register 13
 4169              		@ sp needed
 4170 0036 5DF8047B 		ldr	r7, [sp], #4
 4171              	.LCFI204:
 4172              		.cfi_restore 7
 4173              		.cfi_def_cfa_offset 0
 4174 003a 7047     		bx	lr
 4175              		.cfi_endproc
 4176              	.LFE166:
 4178              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4179              		.align	1
 4180              		.global	HAL_UART_GetError
 4181              		.syntax unified
 4182              		.thumb
 4183              		.thumb_func
 4184              		.fpu fpv4-sp-d16
 4186              	HAL_UART_GetError:
 4187              	.LFB167:
2489:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2490:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2491:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2492:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2493:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
ARM GAS  /tmp/ccRTMmaY.s 			page 117


2494:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2495:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2496:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2497:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4188              		.loc 1 2497 0
 4189              		.cfi_startproc
 4190              		@ args = 0, pretend = 0, frame = 8
 4191              		@ frame_needed = 1, uses_anonymous_args = 0
 4192              		@ link register save eliminated.
 4193 0000 80B4     		push	{r7}
 4194              	.LCFI205:
 4195              		.cfi_def_cfa_offset 4
 4196              		.cfi_offset 7, -4
 4197 0002 83B0     		sub	sp, sp, #12
 4198              	.LCFI206:
 4199              		.cfi_def_cfa_offset 16
 4200 0004 00AF     		add	r7, sp, #0
 4201              	.LCFI207:
 4202              		.cfi_def_cfa_register 7
 4203 0006 7860     		str	r0, [r7, #4]
2498:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4204              		.loc 1 2498 0
 4205 0008 7B68     		ldr	r3, [r7, #4]
 4206 000a DB6B     		ldr	r3, [r3, #60]
2499:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4207              		.loc 1 2499 0
 4208 000c 1846     		mov	r0, r3
 4209 000e 0C37     		adds	r7, r7, #12
 4210              	.LCFI208:
 4211              		.cfi_def_cfa_offset 4
 4212 0010 BD46     		mov	sp, r7
 4213              	.LCFI209:
 4214              		.cfi_def_cfa_register 13
 4215              		@ sp needed
 4216 0012 5DF8047B 		ldr	r7, [sp], #4
 4217              	.LCFI210:
 4218              		.cfi_restore 7
 4219              		.cfi_def_cfa_offset 0
 4220 0016 7047     		bx	lr
 4221              		.cfi_endproc
 4222              	.LFE167:
 4224              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4225              		.align	1
 4226              		.syntax unified
 4227              		.thumb
 4228              		.thumb_func
 4229              		.fpu fpv4-sp-d16
 4231              	UART_DMATransmitCplt:
 4232              	.LFB168:
2500:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2501:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2502:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2503:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2504:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2505:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2506:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2507:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccRTMmaY.s 			page 118


2508:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2510:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2511:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2512:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2513:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2514:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2515:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2516:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2517:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2518:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2519:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2520:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2521:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2522:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2523:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2524:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2525:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2526:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2527:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2528:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2529:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2530:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2531:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2532:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2533:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2534:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2535:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2536:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2537:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2538:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2539:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2540:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2541:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4233              		.loc 1 2541 0
 4234              		.cfi_startproc
 4235              		@ args = 0, pretend = 0, frame = 16
 4236              		@ frame_needed = 1, uses_anonymous_args = 0
 4237 0000 80B5     		push	{r7, lr}
 4238              	.LCFI211:
 4239              		.cfi_def_cfa_offset 8
 4240              		.cfi_offset 7, -8
 4241              		.cfi_offset 14, -4
 4242 0002 84B0     		sub	sp, sp, #16
 4243              	.LCFI212:
 4244              		.cfi_def_cfa_offset 24
 4245 0004 00AF     		add	r7, sp, #0
 4246              	.LCFI213:
 4247              		.cfi_def_cfa_register 7
 4248 0006 7860     		str	r0, [r7, #4]
2542:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4249              		.loc 1 2542 0
 4250 0008 7B68     		ldr	r3, [r7, #4]
 4251 000a 9B6B     		ldr	r3, [r3, #56]
 4252 000c FB60     		str	r3, [r7, #12]
2543:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2544:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
ARM GAS  /tmp/ccRTMmaY.s 			page 119


 4253              		.loc 1 2544 0
 4254 000e 7B68     		ldr	r3, [r7, #4]
 4255 0010 1B68     		ldr	r3, [r3]
 4256 0012 1B68     		ldr	r3, [r3]
 4257 0014 03F48073 		and	r3, r3, #256
 4258 0018 002B     		cmp	r3, #0
 4259 001a 13D1     		bne	.L187
2545:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2546:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4260              		.loc 1 2546 0
 4261 001c FB68     		ldr	r3, [r7, #12]
 4262 001e 0022     		movs	r2, #0
 4263 0020 DA84     		strh	r2, [r3, #38]	@ movhi
2547:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2548:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2549:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2550:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4264              		.loc 1 2550 0
 4265 0022 FB68     		ldr	r3, [r7, #12]
 4266 0024 1B68     		ldr	r3, [r3]
 4267 0026 5A69     		ldr	r2, [r3, #20]
 4268 0028 FB68     		ldr	r3, [r7, #12]
 4269 002a 1B68     		ldr	r3, [r3]
 4270 002c 22F08002 		bic	r2, r2, #128
 4271 0030 5A61     		str	r2, [r3, #20]
2551:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2552:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2553:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4272              		.loc 1 2553 0
 4273 0032 FB68     		ldr	r3, [r7, #12]
 4274 0034 1B68     		ldr	r3, [r3]
 4275 0036 DA68     		ldr	r2, [r3, #12]
 4276 0038 FB68     		ldr	r3, [r7, #12]
 4277 003a 1B68     		ldr	r3, [r3]
 4278 003c 42F04002 		orr	r2, r2, #64
 4279 0040 DA60     		str	r2, [r3, #12]
2554:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2555:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2556:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2557:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2558:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2559:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
2561:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
2562:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
2564:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2565:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2567:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4280              		.loc 1 2567 0
 4281 0042 02E0     		b	.L189
 4282              	.L187:
2564:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4283              		.loc 1 2564 0
 4284 0044 F868     		ldr	r0, [r7, #12]
 4285 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
ARM GAS  /tmp/ccRTMmaY.s 			page 120


 4286              	.L189:
 4287              		.loc 1 2567 0
 4288 004a 00BF     		nop
 4289 004c 1037     		adds	r7, r7, #16
 4290              	.LCFI214:
 4291              		.cfi_def_cfa_offset 8
 4292 004e BD46     		mov	sp, r7
 4293              	.LCFI215:
 4294              		.cfi_def_cfa_register 13
 4295              		@ sp needed
 4296 0050 80BD     		pop	{r7, pc}
 4297              		.cfi_endproc
 4298              	.LFE168:
 4300              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 4301              		.align	1
 4302              		.syntax unified
 4303              		.thumb
 4304              		.thumb_func
 4305              		.fpu fpv4-sp-d16
 4307              	UART_DMATxHalfCplt:
 4308              	.LFB169:
2568:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2569:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2570:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
2571:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2572:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2573:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2574:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2575:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2576:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4309              		.loc 1 2576 0
 4310              		.cfi_startproc
 4311              		@ args = 0, pretend = 0, frame = 16
 4312              		@ frame_needed = 1, uses_anonymous_args = 0
 4313 0000 80B5     		push	{r7, lr}
 4314              	.LCFI216:
 4315              		.cfi_def_cfa_offset 8
 4316              		.cfi_offset 7, -8
 4317              		.cfi_offset 14, -4
 4318 0002 84B0     		sub	sp, sp, #16
 4319              	.LCFI217:
 4320              		.cfi_def_cfa_offset 24
 4321 0004 00AF     		add	r7, sp, #0
 4322              	.LCFI218:
 4323              		.cfi_def_cfa_register 7
 4324 0006 7860     		str	r0, [r7, #4]
2577:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4325              		.loc 1 2577 0
 4326 0008 7B68     		ldr	r3, [r7, #4]
 4327 000a 9B6B     		ldr	r3, [r3, #56]
 4328 000c FB60     		str	r3, [r7, #12]
2578:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2579:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2580:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2581:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
2582:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2583:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
ARM GAS  /tmp/ccRTMmaY.s 			page 121


2584:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 4329              		.loc 1 2584 0
 4330 000e F868     		ldr	r0, [r7, #12]
 4331 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2585:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2586:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4332              		.loc 1 2586 0
 4333 0014 00BF     		nop
 4334 0016 1037     		adds	r7, r7, #16
 4335              	.LCFI219:
 4336              		.cfi_def_cfa_offset 8
 4337 0018 BD46     		mov	sp, r7
 4338              	.LCFI220:
 4339              		.cfi_def_cfa_register 13
 4340              		@ sp needed
 4341 001a 80BD     		pop	{r7, pc}
 4342              		.cfi_endproc
 4343              	.LFE169:
 4345              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 4346              		.align	1
 4347              		.syntax unified
 4348              		.thumb
 4349              		.thumb_func
 4350              		.fpu fpv4-sp-d16
 4352              	UART_DMAReceiveCplt:
 4353              	.LFB170:
2587:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2588:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2589:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
2590:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2591:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2592:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2593:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2594:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2595:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4354              		.loc 1 2595 0
 4355              		.cfi_startproc
 4356              		@ args = 0, pretend = 0, frame = 16
 4357              		@ frame_needed = 1, uses_anonymous_args = 0
 4358 0000 80B5     		push	{r7, lr}
 4359              	.LCFI221:
 4360              		.cfi_def_cfa_offset 8
 4361              		.cfi_offset 7, -8
 4362              		.cfi_offset 14, -4
 4363 0002 84B0     		sub	sp, sp, #16
 4364              	.LCFI222:
 4365              		.cfi_def_cfa_offset 24
 4366 0004 00AF     		add	r7, sp, #0
 4367              	.LCFI223:
 4368              		.cfi_def_cfa_register 7
 4369 0006 7860     		str	r0, [r7, #4]
2596:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4370              		.loc 1 2596 0
 4371 0008 7B68     		ldr	r3, [r7, #4]
 4372 000a 9B6B     		ldr	r3, [r3, #56]
 4373 000c FB60     		str	r3, [r7, #12]
2597:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
ARM GAS  /tmp/ccRTMmaY.s 			page 122


2598:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 4374              		.loc 1 2598 0
 4375 000e 7B68     		ldr	r3, [r7, #4]
 4376 0010 1B68     		ldr	r3, [r3]
 4377 0012 1B68     		ldr	r3, [r3]
 4378 0014 03F48073 		and	r3, r3, #256
 4379 0018 002B     		cmp	r3, #0
 4380 001a 1ED1     		bne	.L192
2599:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2600:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4381              		.loc 1 2600 0
 4382 001c FB68     		ldr	r3, [r7, #12]
 4383 001e 0022     		movs	r2, #0
 4384 0020 DA85     		strh	r2, [r3, #46]	@ movhi
2601:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2602:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2603:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 4385              		.loc 1 2603 0
 4386 0022 FB68     		ldr	r3, [r7, #12]
 4387 0024 1B68     		ldr	r3, [r3]
 4388 0026 DA68     		ldr	r2, [r3, #12]
 4389 0028 FB68     		ldr	r3, [r7, #12]
 4390 002a 1B68     		ldr	r3, [r3]
 4391 002c 22F48072 		bic	r2, r2, #256
 4392 0030 DA60     		str	r2, [r3, #12]
2604:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4393              		.loc 1 2604 0
 4394 0032 FB68     		ldr	r3, [r7, #12]
 4395 0034 1B68     		ldr	r3, [r3]
 4396 0036 5A69     		ldr	r2, [r3, #20]
 4397 0038 FB68     		ldr	r3, [r7, #12]
 4398 003a 1B68     		ldr	r3, [r3]
 4399 003c 22F00102 		bic	r2, r2, #1
 4400 0040 5A61     		str	r2, [r3, #20]
2605:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2606:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
2607:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2608:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4401              		.loc 1 2608 0
 4402 0042 FB68     		ldr	r3, [r7, #12]
 4403 0044 1B68     		ldr	r3, [r3]
 4404 0046 5A69     		ldr	r2, [r3, #20]
 4405 0048 FB68     		ldr	r3, [r7, #12]
 4406 004a 1B68     		ldr	r3, [r3]
 4407 004c 22F04002 		bic	r2, r2, #64
 4408 0050 5A61     		str	r2, [r3, #20]
2609:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2610:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2611:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4409              		.loc 1 2611 0
 4410 0052 FB68     		ldr	r3, [r7, #12]
 4411 0054 2022     		movs	r2, #32
 4412 0056 83F83A20 		strb	r2, [r3, #58]
 4413              	.L192:
2612:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2613:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2614:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
ARM GAS  /tmp/ccRTMmaY.s 			page 123


2615:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
2616:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2617:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
2618:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 4414              		.loc 1 2618 0
 4415 005a F868     		ldr	r0, [r7, #12]
 4416 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2619:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2620:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4417              		.loc 1 2620 0
 4418 0060 00BF     		nop
 4419 0062 1037     		adds	r7, r7, #16
 4420              	.LCFI224:
 4421              		.cfi_def_cfa_offset 8
 4422 0064 BD46     		mov	sp, r7
 4423              	.LCFI225:
 4424              		.cfi_def_cfa_register 13
 4425              		@ sp needed
 4426 0066 80BD     		pop	{r7, pc}
 4427              		.cfi_endproc
 4428              	.LFE170:
 4430              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 4431              		.align	1
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
 4435              		.fpu fpv4-sp-d16
 4437              	UART_DMARxHalfCplt:
 4438              	.LFB171:
2621:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2622:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2623:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
2624:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2625:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2626:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2627:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2628:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2629:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4439              		.loc 1 2629 0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 16
 4442              		@ frame_needed = 1, uses_anonymous_args = 0
 4443 0000 80B5     		push	{r7, lr}
 4444              	.LCFI226:
 4445              		.cfi_def_cfa_offset 8
 4446              		.cfi_offset 7, -8
 4447              		.cfi_offset 14, -4
 4448 0002 84B0     		sub	sp, sp, #16
 4449              	.LCFI227:
 4450              		.cfi_def_cfa_offset 24
 4451 0004 00AF     		add	r7, sp, #0
 4452              	.LCFI228:
 4453              		.cfi_def_cfa_register 7
 4454 0006 7860     		str	r0, [r7, #4]
2630:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4455              		.loc 1 2630 0
 4456 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRTMmaY.s 			page 124


 4457 000a 9B6B     		ldr	r3, [r3, #56]
 4458 000c FB60     		str	r3, [r7, #12]
2631:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2632:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2633:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
2634:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
2635:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2636:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
2637:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 4459              		.loc 1 2637 0
 4460 000e F868     		ldr	r0, [r7, #12]
 4461 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2638:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2639:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4462              		.loc 1 2639 0
 4463 0014 00BF     		nop
 4464 0016 1037     		adds	r7, r7, #16
 4465              	.LCFI229:
 4466              		.cfi_def_cfa_offset 8
 4467 0018 BD46     		mov	sp, r7
 4468              	.LCFI230:
 4469              		.cfi_def_cfa_register 13
 4470              		@ sp needed
 4471 001a 80BD     		pop	{r7, pc}
 4472              		.cfi_endproc
 4473              	.LFE171:
 4475              		.section	.text.UART_DMAError,"ax",%progbits
 4476              		.align	1
 4477              		.syntax unified
 4478              		.thumb
 4479              		.thumb_func
 4480              		.fpu fpv4-sp-d16
 4482              	UART_DMAError:
 4483              	.LFB172:
2640:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2641:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2642:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2643:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2644:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2645:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2646:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2647:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2648:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4484              		.loc 1 2648 0
 4485              		.cfi_startproc
 4486              		@ args = 0, pretend = 0, frame = 16
 4487              		@ frame_needed = 1, uses_anonymous_args = 0
 4488 0000 80B5     		push	{r7, lr}
 4489              	.LCFI231:
 4490              		.cfi_def_cfa_offset 8
 4491              		.cfi_offset 7, -8
 4492              		.cfi_offset 14, -4
 4493 0002 84B0     		sub	sp, sp, #16
 4494              	.LCFI232:
 4495              		.cfi_def_cfa_offset 24
 4496 0004 00AF     		add	r7, sp, #0
 4497              	.LCFI233:
ARM GAS  /tmp/ccRTMmaY.s 			page 125


 4498              		.cfi_def_cfa_register 7
 4499 0006 7860     		str	r0, [r7, #4]
2649:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 4500              		.loc 1 2649 0
 4501 0008 0023     		movs	r3, #0
 4502 000a FB60     		str	r3, [r7, #12]
2650:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4503              		.loc 1 2650 0
 4504 000c 7B68     		ldr	r3, [r7, #4]
 4505 000e 9B6B     		ldr	r3, [r3, #56]
 4506 0010 BB60     		str	r3, [r7, #8]
2651:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2652:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2653:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 4507              		.loc 1 2653 0
 4508 0012 BB68     		ldr	r3, [r7, #8]
 4509 0014 1B68     		ldr	r3, [r3]
 4510 0016 5B69     		ldr	r3, [r3, #20]
 4511 0018 03F08003 		and	r3, r3, #128
 4512 001c 802B     		cmp	r3, #128
 4513 001e 0CBF     		ite	eq
 4514 0020 0123     		moveq	r3, #1
 4515 0022 0023     		movne	r3, #0
 4516 0024 DBB2     		uxtb	r3, r3
 4517 0026 FB60     		str	r3, [r7, #12]
2654:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 4518              		.loc 1 2654 0
 4519 0028 BB68     		ldr	r3, [r7, #8]
 4520 002a 93F83930 		ldrb	r3, [r3, #57]
 4521 002e DBB2     		uxtb	r3, r3
 4522 0030 212B     		cmp	r3, #33
 4523 0032 08D1     		bne	.L195
 4524              		.loc 1 2654 0 is_stmt 0 discriminator 1
 4525 0034 FB68     		ldr	r3, [r7, #12]
 4526 0036 002B     		cmp	r3, #0
 4527 0038 05D0     		beq	.L195
2655:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2656:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4528              		.loc 1 2656 0 is_stmt 1
 4529 003a BB68     		ldr	r3, [r7, #8]
 4530 003c 0022     		movs	r2, #0
 4531 003e DA84     		strh	r2, [r3, #38]	@ movhi
2657:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 4532              		.loc 1 2657 0
 4533 0040 B868     		ldr	r0, [r7, #8]
 4534 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 4535              	.L195:
2658:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2659:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2660:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2661:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 4536              		.loc 1 2661 0
 4537 0046 BB68     		ldr	r3, [r7, #8]
 4538 0048 1B68     		ldr	r3, [r3]
 4539 004a 5B69     		ldr	r3, [r3, #20]
 4540 004c 03F04003 		and	r3, r3, #64
 4541 0050 402B     		cmp	r3, #64
ARM GAS  /tmp/ccRTMmaY.s 			page 126


 4542 0052 0CBF     		ite	eq
 4543 0054 0123     		moveq	r3, #1
 4544 0056 0023     		movne	r3, #0
 4545 0058 DBB2     		uxtb	r3, r3
 4546 005a FB60     		str	r3, [r7, #12]
2662:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 4547              		.loc 1 2662 0
 4548 005c BB68     		ldr	r3, [r7, #8]
 4549 005e 93F83A30 		ldrb	r3, [r3, #58]
 4550 0062 DBB2     		uxtb	r3, r3
 4551 0064 222B     		cmp	r3, #34
 4552 0066 08D1     		bne	.L196
 4553              		.loc 1 2662 0 is_stmt 0 discriminator 1
 4554 0068 FB68     		ldr	r3, [r7, #12]
 4555 006a 002B     		cmp	r3, #0
 4556 006c 05D0     		beq	.L196
2663:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2664:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4557              		.loc 1 2664 0 is_stmt 1
 4558 006e BB68     		ldr	r3, [r7, #8]
 4559 0070 0022     		movs	r2, #0
 4560 0072 DA85     		strh	r2, [r3, #46]	@ movhi
2665:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 4561              		.loc 1 2665 0
 4562 0074 B868     		ldr	r0, [r7, #8]
 4563 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 4564              	.L196:
2666:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2667:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2668:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 4565              		.loc 1 2668 0
 4566 007a BB68     		ldr	r3, [r7, #8]
 4567 007c DB6B     		ldr	r3, [r3, #60]
 4568 007e 43F01002 		orr	r2, r3, #16
 4569 0082 BB68     		ldr	r3, [r7, #8]
 4570 0084 DA63     		str	r2, [r3, #60]
2669:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2670:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2671:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2672:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2673:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2674:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4571              		.loc 1 2674 0
 4572 0086 B868     		ldr	r0, [r7, #8]
 4573 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2675:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2676:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4574              		.loc 1 2676 0
 4575 008c 00BF     		nop
 4576 008e 1037     		adds	r7, r7, #16
 4577              	.LCFI234:
 4578              		.cfi_def_cfa_offset 8
 4579 0090 BD46     		mov	sp, r7
 4580              	.LCFI235:
 4581              		.cfi_def_cfa_register 13
 4582              		@ sp needed
 4583 0092 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccRTMmaY.s 			page 127


 4584              		.cfi_endproc
 4585              	.LFE172:
 4587              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4588              		.align	1
 4589              		.syntax unified
 4590              		.thumb
 4591              		.thumb_func
 4592              		.fpu fpv4-sp-d16
 4594              	UART_WaitOnFlagUntilTimeout:
 4595              	.LFB173:
2677:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2678:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2679:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2680:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2681:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2682:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2683:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2684:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2685:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2686:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2687:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2688:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2689:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4596              		.loc 1 2689 0
 4597              		.cfi_startproc
 4598              		@ args = 4, pretend = 0, frame = 16
 4599              		@ frame_needed = 1, uses_anonymous_args = 0
 4600 0000 80B5     		push	{r7, lr}
 4601              	.LCFI236:
 4602              		.cfi_def_cfa_offset 8
 4603              		.cfi_offset 7, -8
 4604              		.cfi_offset 14, -4
 4605 0002 84B0     		sub	sp, sp, #16
 4606              	.LCFI237:
 4607              		.cfi_def_cfa_offset 24
 4608 0004 00AF     		add	r7, sp, #0
 4609              	.LCFI238:
 4610              		.cfi_def_cfa_register 7
 4611 0006 F860     		str	r0, [r7, #12]
 4612 0008 B960     		str	r1, [r7, #8]
 4613 000a 3B60     		str	r3, [r7]
 4614 000c 1346     		mov	r3, r2
 4615 000e FB71     		strb	r3, [r7, #7]
2690:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2691:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 4616              		.loc 1 2691 0
 4617 0010 2CE0     		b	.L198
 4618              	.L201:
2692:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2693:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2694:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 4619              		.loc 1 2694 0
 4620 0012 BB69     		ldr	r3, [r7, #24]
 4621 0014 B3F1FF3F 		cmp	r3, #-1
 4622 0018 28D0     		beq	.L198
2695:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2696:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
ARM GAS  /tmp/ccRTMmaY.s 			page 128


 4623              		.loc 1 2696 0
 4624 001a BB69     		ldr	r3, [r7, #24]
 4625 001c 002B     		cmp	r3, #0
 4626 001e 07D0     		beq	.L199
 4627              		.loc 1 2696 0 is_stmt 0 discriminator 1
 4628 0020 FFF7FEFF 		bl	HAL_GetTick
 4629 0024 0246     		mov	r2, r0
 4630 0026 3B68     		ldr	r3, [r7]
 4631 0028 D31A     		subs	r3, r2, r3
 4632 002a BA69     		ldr	r2, [r7, #24]
 4633 002c 9A42     		cmp	r2, r3
 4634 002e 1DD2     		bcs	.L198
 4635              	.L199:
2697:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2698:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2699:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 4636              		.loc 1 2699 0 is_stmt 1
 4637 0030 FB68     		ldr	r3, [r7, #12]
 4638 0032 1B68     		ldr	r3, [r3]
 4639 0034 DA68     		ldr	r2, [r3, #12]
 4640 0036 FB68     		ldr	r3, [r7, #12]
 4641 0038 1B68     		ldr	r3, [r3]
 4642 003a 22F4D072 		bic	r2, r2, #416
 4643 003e DA60     		str	r2, [r3, #12]
2700:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4644              		.loc 1 2700 0
 4645 0040 FB68     		ldr	r3, [r7, #12]
 4646 0042 1B68     		ldr	r3, [r3]
 4647 0044 5A69     		ldr	r2, [r3, #20]
 4648 0046 FB68     		ldr	r3, [r7, #12]
 4649 0048 1B68     		ldr	r3, [r3]
 4650 004a 22F00102 		bic	r2, r2, #1
 4651 004e 5A61     		str	r2, [r3, #20]
2701:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2702:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 4652              		.loc 1 2702 0
 4653 0050 FB68     		ldr	r3, [r7, #12]
 4654 0052 2022     		movs	r2, #32
 4655 0054 83F83920 		strb	r2, [r3, #57]
2703:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4656              		.loc 1 2703 0
 4657 0058 FB68     		ldr	r3, [r7, #12]
 4658 005a 2022     		movs	r2, #32
 4659 005c 83F83A20 		strb	r2, [r3, #58]
2704:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2705:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2706:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 4660              		.loc 1 2706 0
 4661 0060 FB68     		ldr	r3, [r7, #12]
 4662 0062 0022     		movs	r2, #0
 4663 0064 83F83820 		strb	r2, [r3, #56]
2707:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2708:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 4664              		.loc 1 2708 0
 4665 0068 0323     		movs	r3, #3
 4666 006a 0FE0     		b	.L200
 4667              	.L198:
ARM GAS  /tmp/ccRTMmaY.s 			page 129


2691:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4668              		.loc 1 2691 0
 4669 006c FB68     		ldr	r3, [r7, #12]
 4670 006e 1B68     		ldr	r3, [r3]
 4671 0070 1A68     		ldr	r2, [r3]
 4672 0072 BB68     		ldr	r3, [r7, #8]
 4673 0074 1340     		ands	r3, r3, r2
 4674 0076 BA68     		ldr	r2, [r7, #8]
 4675 0078 9A42     		cmp	r2, r3
 4676 007a 0CBF     		ite	eq
 4677 007c 0123     		moveq	r3, #1
 4678 007e 0023     		movne	r3, #0
 4679 0080 DBB2     		uxtb	r3, r3
 4680 0082 1A46     		mov	r2, r3
 4681 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4682 0086 9A42     		cmp	r2, r3
 4683 0088 C3D0     		beq	.L201
2709:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2710:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2711:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2712:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4684              		.loc 1 2712 0
 4685 008a 0023     		movs	r3, #0
 4686              	.L200:
2713:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4687              		.loc 1 2713 0
 4688 008c 1846     		mov	r0, r3
 4689 008e 1037     		adds	r7, r7, #16
 4690              	.LCFI239:
 4691              		.cfi_def_cfa_offset 8
 4692 0090 BD46     		mov	sp, r7
 4693              	.LCFI240:
 4694              		.cfi_def_cfa_register 13
 4695              		@ sp needed
 4696 0092 80BD     		pop	{r7, pc}
 4697              		.cfi_endproc
 4698              	.LFE173:
 4700              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 4701              		.align	1
 4702              		.syntax unified
 4703              		.thumb
 4704              		.thumb_func
 4705              		.fpu fpv4-sp-d16
 4707              	UART_EndTxTransfer:
 4708              	.LFB174:
2714:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2715:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2716:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2717:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2718:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2719:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2720:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2721:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4709              		.loc 1 2721 0
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 8
 4712              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccRTMmaY.s 			page 130


 4713              		@ link register save eliminated.
 4714 0000 80B4     		push	{r7}
 4715              	.LCFI241:
 4716              		.cfi_def_cfa_offset 4
 4717              		.cfi_offset 7, -4
 4718 0002 83B0     		sub	sp, sp, #12
 4719              	.LCFI242:
 4720              		.cfi_def_cfa_offset 16
 4721 0004 00AF     		add	r7, sp, #0
 4722              	.LCFI243:
 4723              		.cfi_def_cfa_register 7
 4724 0006 7860     		str	r0, [r7, #4]
2722:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2723:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4725              		.loc 1 2723 0
 4726 0008 7B68     		ldr	r3, [r7, #4]
 4727 000a 1B68     		ldr	r3, [r3]
 4728 000c DA68     		ldr	r2, [r3, #12]
 4729 000e 7B68     		ldr	r3, [r7, #4]
 4730 0010 1B68     		ldr	r3, [r3]
 4731 0012 22F0C002 		bic	r2, r2, #192
 4732 0016 DA60     		str	r2, [r3, #12]
2724:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2725:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2726:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4733              		.loc 1 2726 0
 4734 0018 7B68     		ldr	r3, [r7, #4]
 4735 001a 2022     		movs	r2, #32
 4736 001c 83F83920 		strb	r2, [r3, #57]
2727:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4737              		.loc 1 2727 0
 4738 0020 00BF     		nop
 4739 0022 0C37     		adds	r7, r7, #12
 4740              	.LCFI244:
 4741              		.cfi_def_cfa_offset 4
 4742 0024 BD46     		mov	sp, r7
 4743              	.LCFI245:
 4744              		.cfi_def_cfa_register 13
 4745              		@ sp needed
 4746 0026 5DF8047B 		ldr	r7, [sp], #4
 4747              	.LCFI246:
 4748              		.cfi_restore 7
 4749              		.cfi_def_cfa_offset 0
 4750 002a 7047     		bx	lr
 4751              		.cfi_endproc
 4752              	.LFE174:
 4754              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 4755              		.align	1
 4756              		.syntax unified
 4757              		.thumb
 4758              		.thumb_func
 4759              		.fpu fpv4-sp-d16
 4761              	UART_EndRxTransfer:
 4762              	.LFB175:
2728:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2729:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2730:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
ARM GAS  /tmp/ccRTMmaY.s 			page 131


2731:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2732:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2733:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2734:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2735:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4763              		.loc 1 2735 0
 4764              		.cfi_startproc
 4765              		@ args = 0, pretend = 0, frame = 8
 4766              		@ frame_needed = 1, uses_anonymous_args = 0
 4767              		@ link register save eliminated.
 4768 0000 80B4     		push	{r7}
 4769              	.LCFI247:
 4770              		.cfi_def_cfa_offset 4
 4771              		.cfi_offset 7, -4
 4772 0002 83B0     		sub	sp, sp, #12
 4773              	.LCFI248:
 4774              		.cfi_def_cfa_offset 16
 4775 0004 00AF     		add	r7, sp, #0
 4776              	.LCFI249:
 4777              		.cfi_def_cfa_register 7
 4778 0006 7860     		str	r0, [r7, #4]
2736:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2737:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4779              		.loc 1 2737 0
 4780 0008 7B68     		ldr	r3, [r7, #4]
 4781 000a 1B68     		ldr	r3, [r3]
 4782 000c DA68     		ldr	r2, [r3, #12]
 4783 000e 7B68     		ldr	r3, [r7, #4]
 4784 0010 1B68     		ldr	r3, [r3]
 4785 0012 22F49072 		bic	r2, r2, #288
 4786 0016 DA60     		str	r2, [r3, #12]
2738:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4787              		.loc 1 2738 0
 4788 0018 7B68     		ldr	r3, [r7, #4]
 4789 001a 1B68     		ldr	r3, [r3]
 4790 001c 5A69     		ldr	r2, [r3, #20]
 4791 001e 7B68     		ldr	r3, [r7, #4]
 4792 0020 1B68     		ldr	r3, [r3]
 4793 0022 22F00102 		bic	r2, r2, #1
 4794 0026 5A61     		str	r2, [r3, #20]
2739:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2740:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2741:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4795              		.loc 1 2741 0
 4796 0028 7B68     		ldr	r3, [r7, #4]
 4797 002a 2022     		movs	r2, #32
 4798 002c 83F83A20 		strb	r2, [r3, #58]
2742:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4799              		.loc 1 2742 0
 4800 0030 00BF     		nop
 4801 0032 0C37     		adds	r7, r7, #12
 4802              	.LCFI250:
 4803              		.cfi_def_cfa_offset 4
 4804 0034 BD46     		mov	sp, r7
 4805              	.LCFI251:
 4806              		.cfi_def_cfa_register 13
 4807              		@ sp needed
ARM GAS  /tmp/ccRTMmaY.s 			page 132


 4808 0036 5DF8047B 		ldr	r7, [sp], #4
 4809              	.LCFI252:
 4810              		.cfi_restore 7
 4811              		.cfi_def_cfa_offset 0
 4812 003a 7047     		bx	lr
 4813              		.cfi_endproc
 4814              	.LFE175:
 4816              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 4817              		.align	1
 4818              		.syntax unified
 4819              		.thumb
 4820              		.thumb_func
 4821              		.fpu fpv4-sp-d16
 4823              	UART_DMAAbortOnError:
 4824              	.LFB176:
2743:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2744:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2745:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2746:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2747:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2748:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2749:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2750:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2751:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2752:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4825              		.loc 1 2752 0
 4826              		.cfi_startproc
 4827              		@ args = 0, pretend = 0, frame = 16
 4828              		@ frame_needed = 1, uses_anonymous_args = 0
 4829 0000 80B5     		push	{r7, lr}
 4830              	.LCFI253:
 4831              		.cfi_def_cfa_offset 8
 4832              		.cfi_offset 7, -8
 4833              		.cfi_offset 14, -4
 4834 0002 84B0     		sub	sp, sp, #16
 4835              	.LCFI254:
 4836              		.cfi_def_cfa_offset 24
 4837 0004 00AF     		add	r7, sp, #0
 4838              	.LCFI255:
 4839              		.cfi_def_cfa_register 7
 4840 0006 7860     		str	r0, [r7, #4]
2753:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4841              		.loc 1 2753 0
 4842 0008 7B68     		ldr	r3, [r7, #4]
 4843 000a 9B6B     		ldr	r3, [r3, #56]
 4844 000c FB60     		str	r3, [r7, #12]
2754:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4845              		.loc 1 2754 0
 4846 000e FB68     		ldr	r3, [r7, #12]
 4847 0010 0022     		movs	r2, #0
 4848 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2755:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4849              		.loc 1 2755 0
 4850 0014 FB68     		ldr	r3, [r7, #12]
 4851 0016 0022     		movs	r2, #0
 4852 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2756:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 133


2757:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2758:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2759:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2760:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2761:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2762:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4853              		.loc 1 2762 0
 4854 001a F868     		ldr	r0, [r7, #12]
 4855 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2763:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2764:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4856              		.loc 1 2764 0
 4857 0020 00BF     		nop
 4858 0022 1037     		adds	r7, r7, #16
 4859              	.LCFI256:
 4860              		.cfi_def_cfa_offset 8
 4861 0024 BD46     		mov	sp, r7
 4862              	.LCFI257:
 4863              		.cfi_def_cfa_register 13
 4864              		@ sp needed
 4865 0026 80BD     		pop	{r7, pc}
 4866              		.cfi_endproc
 4867              	.LFE176:
 4869              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 4870              		.align	1
 4871              		.syntax unified
 4872              		.thumb
 4873              		.thumb_func
 4874              		.fpu fpv4-sp-d16
 4876              	UART_DMATxAbortCallback:
 4877              	.LFB177:
2765:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2767:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2768:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2769:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2770:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2771:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2772:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2773:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2774:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2775:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2776:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4878              		.loc 1 2776 0
 4879              		.cfi_startproc
 4880              		@ args = 0, pretend = 0, frame = 16
 4881              		@ frame_needed = 1, uses_anonymous_args = 0
 4882 0000 80B5     		push	{r7, lr}
 4883              	.LCFI258:
 4884              		.cfi_def_cfa_offset 8
 4885              		.cfi_offset 7, -8
 4886              		.cfi_offset 14, -4
 4887 0002 84B0     		sub	sp, sp, #16
 4888              	.LCFI259:
 4889              		.cfi_def_cfa_offset 24
 4890 0004 00AF     		add	r7, sp, #0
 4891              	.LCFI260:
ARM GAS  /tmp/ccRTMmaY.s 			page 134


 4892              		.cfi_def_cfa_register 7
 4893 0006 7860     		str	r0, [r7, #4]
2777:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4894              		.loc 1 2777 0
 4895 0008 7B68     		ldr	r3, [r7, #4]
 4896 000a 9B6B     		ldr	r3, [r3, #56]
 4897 000c FB60     		str	r3, [r7, #12]
2778:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2779:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 4898              		.loc 1 2779 0
 4899 000e FB68     		ldr	r3, [r7, #12]
 4900 0010 1B6B     		ldr	r3, [r3, #48]
 4901 0012 0022     		movs	r2, #0
 4902 0014 1A65     		str	r2, [r3, #80]
2780:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2781:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2782:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4903              		.loc 1 2782 0
 4904 0016 FB68     		ldr	r3, [r7, #12]
 4905 0018 5B6B     		ldr	r3, [r3, #52]
 4906 001a 002B     		cmp	r3, #0
 4907 001c 04D0     		beq	.L206
2783:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2784:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 4908              		.loc 1 2784 0
 4909 001e FB68     		ldr	r3, [r7, #12]
 4910 0020 5B6B     		ldr	r3, [r3, #52]
 4911 0022 1B6D     		ldr	r3, [r3, #80]
 4912 0024 002B     		cmp	r3, #0
 4913 0026 14D1     		bne	.L208
 4914              	.L206:
2785:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2786:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2787:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2788:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2789:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2791:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4915              		.loc 1 2791 0
 4916 0028 FB68     		ldr	r3, [r7, #12]
 4917 002a 0022     		movs	r2, #0
 4918 002c DA84     		strh	r2, [r3, #38]	@ movhi
2792:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4919              		.loc 1 2792 0
 4920 002e FB68     		ldr	r3, [r7, #12]
 4921 0030 0022     		movs	r2, #0
 4922 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2793:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2794:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2795:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 4923              		.loc 1 2795 0
 4924 0034 FB68     		ldr	r3, [r7, #12]
 4925 0036 0022     		movs	r2, #0
 4926 0038 DA63     		str	r2, [r3, #60]
2796:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2797:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2798:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccRTMmaY.s 			page 135


 4927              		.loc 1 2798 0
 4928 003a FB68     		ldr	r3, [r7, #12]
 4929 003c 2022     		movs	r2, #32
 4930 003e 83F83920 		strb	r2, [r3, #57]
2799:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4931              		.loc 1 2799 0
 4932 0042 FB68     		ldr	r3, [r7, #12]
 4933 0044 2022     		movs	r2, #32
 4934 0046 83F83A20 		strb	r2, [r3, #58]
2800:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2802:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2803:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2804:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2805:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2806:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2807:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 4935              		.loc 1 2807 0
 4936 004a F868     		ldr	r0, [r7, #12]
 4937 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4938 0050 00E0     		b	.L205
 4939              	.L208:
2786:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4940              		.loc 1 2786 0
 4941 0052 00BF     		nop
 4942              	.L205:
2808:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2809:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4943              		.loc 1 2809 0
 4944 0054 1037     		adds	r7, r7, #16
 4945              	.LCFI261:
 4946              		.cfi_def_cfa_offset 8
 4947 0056 BD46     		mov	sp, r7
 4948              	.LCFI262:
 4949              		.cfi_def_cfa_register 13
 4950              		@ sp needed
 4951 0058 80BD     		pop	{r7, pc}
 4952              		.cfi_endproc
 4953              	.LFE177:
 4955              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 4956              		.align	1
 4957              		.syntax unified
 4958              		.thumb
 4959              		.thumb_func
 4960              		.fpu fpv4-sp-d16
 4962              	UART_DMARxAbortCallback:
 4963              	.LFB178:
2810:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2811:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2812:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2813:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2814:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2815:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2816:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2817:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2818:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2819:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccRTMmaY.s 			page 136


2820:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2821:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4964              		.loc 1 2821 0
 4965              		.cfi_startproc
 4966              		@ args = 0, pretend = 0, frame = 16
 4967              		@ frame_needed = 1, uses_anonymous_args = 0
 4968 0000 80B5     		push	{r7, lr}
 4969              	.LCFI263:
 4970              		.cfi_def_cfa_offset 8
 4971              		.cfi_offset 7, -8
 4972              		.cfi_offset 14, -4
 4973 0002 84B0     		sub	sp, sp, #16
 4974              	.LCFI264:
 4975              		.cfi_def_cfa_offset 24
 4976 0004 00AF     		add	r7, sp, #0
 4977              	.LCFI265:
 4978              		.cfi_def_cfa_register 7
 4979 0006 7860     		str	r0, [r7, #4]
2822:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4980              		.loc 1 2822 0
 4981 0008 7B68     		ldr	r3, [r7, #4]
 4982 000a 9B6B     		ldr	r3, [r3, #56]
 4983 000c FB60     		str	r3, [r7, #12]
2823:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2824:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 4984              		.loc 1 2824 0
 4985 000e FB68     		ldr	r3, [r7, #12]
 4986 0010 5B6B     		ldr	r3, [r3, #52]
 4987 0012 0022     		movs	r2, #0
 4988 0014 1A65     		str	r2, [r3, #80]
2825:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2826:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2827:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4989              		.loc 1 2827 0
 4990 0016 FB68     		ldr	r3, [r7, #12]
 4991 0018 1B6B     		ldr	r3, [r3, #48]
 4992 001a 002B     		cmp	r3, #0
 4993 001c 04D0     		beq	.L210
2828:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2829:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 4994              		.loc 1 2829 0
 4995 001e FB68     		ldr	r3, [r7, #12]
 4996 0020 1B6B     		ldr	r3, [r3, #48]
 4997 0022 1B6D     		ldr	r3, [r3, #80]
 4998 0024 002B     		cmp	r3, #0
 4999 0026 14D1     		bne	.L212
 5000              	.L210:
2830:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2831:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2832:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2833:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2834:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2835:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2836:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5001              		.loc 1 2836 0
 5002 0028 FB68     		ldr	r3, [r7, #12]
 5003 002a 0022     		movs	r2, #0
ARM GAS  /tmp/ccRTMmaY.s 			page 137


 5004 002c DA84     		strh	r2, [r3, #38]	@ movhi
2837:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5005              		.loc 1 2837 0
 5006 002e FB68     		ldr	r3, [r7, #12]
 5007 0030 0022     		movs	r2, #0
 5008 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2838:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2839:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2840:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5009              		.loc 1 2840 0
 5010 0034 FB68     		ldr	r3, [r7, #12]
 5011 0036 0022     		movs	r2, #0
 5012 0038 DA63     		str	r2, [r3, #60]
2841:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2842:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2843:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5013              		.loc 1 2843 0
 5014 003a FB68     		ldr	r3, [r7, #12]
 5015 003c 2022     		movs	r2, #32
 5016 003e 83F83920 		strb	r2, [r3, #57]
2844:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5017              		.loc 1 2844 0
 5018 0042 FB68     		ldr	r3, [r7, #12]
 5019 0044 2022     		movs	r2, #32
 5020 0046 83F83A20 		strb	r2, [r3, #58]
2845:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2847:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2848:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2849:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2850:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2851:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2852:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5021              		.loc 1 2852 0
 5022 004a F868     		ldr	r0, [r7, #12]
 5023 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5024 0050 00E0     		b	.L209
 5025              	.L212:
2831:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5026              		.loc 1 2831 0
 5027 0052 00BF     		nop
 5028              	.L209:
2853:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2854:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5029              		.loc 1 2854 0
 5030 0054 1037     		adds	r7, r7, #16
 5031              	.LCFI266:
 5032              		.cfi_def_cfa_offset 8
 5033 0056 BD46     		mov	sp, r7
 5034              	.LCFI267:
 5035              		.cfi_def_cfa_register 13
 5036              		@ sp needed
 5037 0058 80BD     		pop	{r7, pc}
 5038              		.cfi_endproc
 5039              	.LFE178:
 5041              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 5042              		.align	1
ARM GAS  /tmp/ccRTMmaY.s 			page 138


 5043              		.syntax unified
 5044              		.thumb
 5045              		.thumb_func
 5046              		.fpu fpv4-sp-d16
 5048              	UART_DMATxOnlyAbortCallback:
 5049              	.LFB179:
2855:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2856:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2857:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2858:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2859:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2860:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2861:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2862:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2863:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2864:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2865:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2866:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5050              		.loc 1 2866 0
 5051              		.cfi_startproc
 5052              		@ args = 0, pretend = 0, frame = 16
 5053              		@ frame_needed = 1, uses_anonymous_args = 0
 5054 0000 80B5     		push	{r7, lr}
 5055              	.LCFI268:
 5056              		.cfi_def_cfa_offset 8
 5057              		.cfi_offset 7, -8
 5058              		.cfi_offset 14, -4
 5059 0002 84B0     		sub	sp, sp, #16
 5060              	.LCFI269:
 5061              		.cfi_def_cfa_offset 24
 5062 0004 00AF     		add	r7, sp, #0
 5063              	.LCFI270:
 5064              		.cfi_def_cfa_register 7
 5065 0006 7860     		str	r0, [r7, #4]
2867:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5066              		.loc 1 2867 0
 5067 0008 7B68     		ldr	r3, [r7, #4]
 5068 000a 9B6B     		ldr	r3, [r3, #56]
 5069 000c FB60     		str	r3, [r7, #12]
2868:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2869:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5070              		.loc 1 2869 0
 5071 000e FB68     		ldr	r3, [r7, #12]
 5072 0010 0022     		movs	r2, #0
 5073 0012 DA84     		strh	r2, [r3, #38]	@ movhi
2870:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2871:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2872:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5074              		.loc 1 2872 0
 5075 0014 FB68     		ldr	r3, [r7, #12]
 5076 0016 2022     		movs	r2, #32
 5077 0018 83F83920 		strb	r2, [r3, #57]
2873:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2874:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2875:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2876:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
2877:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
ARM GAS  /tmp/ccRTMmaY.s 			page 139


2878:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2879:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2880:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 5078              		.loc 1 2880 0
 5079 001c F868     		ldr	r0, [r7, #12]
 5080 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2881:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2882:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5081              		.loc 1 2882 0
 5082 0022 00BF     		nop
 5083 0024 1037     		adds	r7, r7, #16
 5084              	.LCFI271:
 5085              		.cfi_def_cfa_offset 8
 5086 0026 BD46     		mov	sp, r7
 5087              	.LCFI272:
 5088              		.cfi_def_cfa_register 13
 5089              		@ sp needed
 5090 0028 80BD     		pop	{r7, pc}
 5091              		.cfi_endproc
 5092              	.LFE179:
 5094              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 5095              		.align	1
 5096              		.syntax unified
 5097              		.thumb
 5098              		.thumb_func
 5099              		.fpu fpv4-sp-d16
 5101              	UART_DMARxOnlyAbortCallback:
 5102              	.LFB180:
2883:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2885:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2886:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2887:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2888:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2889:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2890:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2891:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2892:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2893:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2894:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5103              		.loc 1 2894 0
 5104              		.cfi_startproc
 5105              		@ args = 0, pretend = 0, frame = 16
 5106              		@ frame_needed = 1, uses_anonymous_args = 0
 5107 0000 80B5     		push	{r7, lr}
 5108              	.LCFI273:
 5109              		.cfi_def_cfa_offset 8
 5110              		.cfi_offset 7, -8
 5111              		.cfi_offset 14, -4
 5112 0002 84B0     		sub	sp, sp, #16
 5113              	.LCFI274:
 5114              		.cfi_def_cfa_offset 24
 5115 0004 00AF     		add	r7, sp, #0
 5116              	.LCFI275:
 5117              		.cfi_def_cfa_register 7
 5118 0006 7860     		str	r0, [r7, #4]
2895:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
ARM GAS  /tmp/ccRTMmaY.s 			page 140


 5119              		.loc 1 2895 0
 5120 0008 7B68     		ldr	r3, [r7, #4]
 5121 000a 9B6B     		ldr	r3, [r3, #56]
 5122 000c FB60     		str	r3, [r7, #12]
2896:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2897:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5123              		.loc 1 2897 0
 5124 000e FB68     		ldr	r3, [r7, #12]
 5125 0010 0022     		movs	r2, #0
 5126 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2898:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2899:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2900:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5127              		.loc 1 2900 0
 5128 0014 FB68     		ldr	r3, [r7, #12]
 5129 0016 2022     		movs	r2, #32
 5130 0018 83F83A20 		strb	r2, [r3, #58]
2901:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2903:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2904:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
2905:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
2906:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2907:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
2908:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 5131              		.loc 1 2908 0
 5132 001c F868     		ldr	r0, [r7, #12]
 5133 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2909:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2910:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5134              		.loc 1 2910 0
 5135 0022 00BF     		nop
 5136 0024 1037     		adds	r7, r7, #16
 5137              	.LCFI276:
 5138              		.cfi_def_cfa_offset 8
 5139 0026 BD46     		mov	sp, r7
 5140              	.LCFI277:
 5141              		.cfi_def_cfa_register 13
 5142              		@ sp needed
 5143 0028 80BD     		pop	{r7, pc}
 5144              		.cfi_endproc
 5145              	.LFE180:
 5147              		.section	.text.UART_Transmit_IT,"ax",%progbits
 5148              		.align	1
 5149              		.syntax unified
 5150              		.thumb
 5151              		.thumb_func
 5152              		.fpu fpv4-sp-d16
 5154              	UART_Transmit_IT:
 5155              	.LFB181:
2911:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2912:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2913:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2914:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2915:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2916:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2917:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccRTMmaY.s 			page 141


2918:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2919:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5156              		.loc 1 2919 0
 5157              		.cfi_startproc
 5158              		@ args = 0, pretend = 0, frame = 16
 5159              		@ frame_needed = 1, uses_anonymous_args = 0
 5160              		@ link register save eliminated.
 5161 0000 80B4     		push	{r7}
 5162              	.LCFI278:
 5163              		.cfi_def_cfa_offset 4
 5164              		.cfi_offset 7, -4
 5165 0002 85B0     		sub	sp, sp, #20
 5166              	.LCFI279:
 5167              		.cfi_def_cfa_offset 24
 5168 0004 00AF     		add	r7, sp, #0
 5169              	.LCFI280:
 5170              		.cfi_def_cfa_register 7
 5171 0006 7860     		str	r0, [r7, #4]
2920:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2921:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2922:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2923:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 5172              		.loc 1 2923 0
 5173 0008 7B68     		ldr	r3, [r7, #4]
 5174 000a 93F83930 		ldrb	r3, [r3, #57]
 5175 000e DBB2     		uxtb	r3, r3
 5176 0010 212B     		cmp	r3, #33
 5177 0012 44D1     		bne	.L216
2924:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2925:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 5178              		.loc 1 2925 0
 5179 0014 7B68     		ldr	r3, [r7, #4]
 5180 0016 9B68     		ldr	r3, [r3, #8]
 5181 0018 B3F5805F 		cmp	r3, #4096
 5182 001c 1AD1     		bne	.L217
2926:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2927:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 5183              		.loc 1 2927 0
 5184 001e 7B68     		ldr	r3, [r7, #4]
 5185 0020 1B6A     		ldr	r3, [r3, #32]
 5186 0022 FB60     		str	r3, [r7, #12]
2928:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 5187              		.loc 1 2928 0
 5188 0024 FB68     		ldr	r3, [r7, #12]
 5189 0026 1B88     		ldrh	r3, [r3]
 5190 0028 1A46     		mov	r2, r3
 5191 002a 7B68     		ldr	r3, [r7, #4]
 5192 002c 1B68     		ldr	r3, [r3]
 5193 002e C2F30802 		ubfx	r2, r2, #0, #9
 5194 0032 5A60     		str	r2, [r3, #4]
2929:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5195              		.loc 1 2929 0
 5196 0034 7B68     		ldr	r3, [r7, #4]
 5197 0036 1B69     		ldr	r3, [r3, #16]
 5198 0038 002B     		cmp	r3, #0
 5199 003a 05D1     		bne	.L218
2930:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccRTMmaY.s 			page 142


2931:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 5200              		.loc 1 2931 0
 5201 003c 7B68     		ldr	r3, [r7, #4]
 5202 003e 1B6A     		ldr	r3, [r3, #32]
 5203 0040 9A1C     		adds	r2, r3, #2
 5204 0042 7B68     		ldr	r3, [r7, #4]
 5205 0044 1A62     		str	r2, [r3, #32]
 5206 0046 0EE0     		b	.L220
 5207              	.L218:
2932:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2933:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2934:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2935:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 5208              		.loc 1 2935 0
 5209 0048 7B68     		ldr	r3, [r7, #4]
 5210 004a 1B6A     		ldr	r3, [r3, #32]
 5211 004c 5A1C     		adds	r2, r3, #1
 5212 004e 7B68     		ldr	r3, [r7, #4]
 5213 0050 1A62     		str	r2, [r3, #32]
 5214 0052 08E0     		b	.L220
 5215              	.L217:
2936:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2937:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2938:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2939:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2940:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 5216              		.loc 1 2940 0
 5217 0054 7B68     		ldr	r3, [r7, #4]
 5218 0056 1B6A     		ldr	r3, [r3, #32]
 5219 0058 591C     		adds	r1, r3, #1
 5220 005a 7A68     		ldr	r2, [r7, #4]
 5221 005c 1162     		str	r1, [r2, #32]
 5222 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5223 0060 7B68     		ldr	r3, [r7, #4]
 5224 0062 1B68     		ldr	r3, [r3]
 5225 0064 5A60     		str	r2, [r3, #4]
 5226              	.L220:
2941:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2942:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2943:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 5227              		.loc 1 2943 0
 5228 0066 7B68     		ldr	r3, [r7, #4]
 5229 0068 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 5230 006a 9BB2     		uxth	r3, r3
 5231 006c 013B     		subs	r3, r3, #1
 5232 006e 9BB2     		uxth	r3, r3
 5233 0070 7A68     		ldr	r2, [r7, #4]
 5234 0072 1946     		mov	r1, r3	@ movhi
 5235 0074 D184     		strh	r1, [r2, #38]	@ movhi
 5236 0076 002B     		cmp	r3, #0
 5237 0078 0FD1     		bne	.L221
2944:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2945:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2946:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 5238              		.loc 1 2946 0
 5239 007a 7B68     		ldr	r3, [r7, #4]
 5240 007c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccRTMmaY.s 			page 143


 5241 007e DA68     		ldr	r2, [r3, #12]
 5242 0080 7B68     		ldr	r3, [r7, #4]
 5243 0082 1B68     		ldr	r3, [r3]
 5244 0084 22F08002 		bic	r2, r2, #128
 5245 0088 DA60     		str	r2, [r3, #12]
2947:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2948:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2949:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 5246              		.loc 1 2949 0
 5247 008a 7B68     		ldr	r3, [r7, #4]
 5248 008c 1B68     		ldr	r3, [r3]
 5249 008e DA68     		ldr	r2, [r3, #12]
 5250 0090 7B68     		ldr	r3, [r7, #4]
 5251 0092 1B68     		ldr	r3, [r3]
 5252 0094 42F04002 		orr	r2, r2, #64
 5253 0098 DA60     		str	r2, [r3, #12]
 5254              	.L221:
2950:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2951:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5255              		.loc 1 2951 0
 5256 009a 0023     		movs	r3, #0
 5257 009c 00E0     		b	.L222
 5258              	.L216:
2952:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2953:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2954:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2955:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5259              		.loc 1 2955 0
 5260 009e 0223     		movs	r3, #2
 5261              	.L222:
2956:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2957:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5262              		.loc 1 2957 0
 5263 00a0 1846     		mov	r0, r3
 5264 00a2 1437     		adds	r7, r7, #20
 5265              	.LCFI281:
 5266              		.cfi_def_cfa_offset 4
 5267 00a4 BD46     		mov	sp, r7
 5268              	.LCFI282:
 5269              		.cfi_def_cfa_register 13
 5270              		@ sp needed
 5271 00a6 5DF8047B 		ldr	r7, [sp], #4
 5272              	.LCFI283:
 5273              		.cfi_restore 7
 5274              		.cfi_def_cfa_offset 0
 5275 00aa 7047     		bx	lr
 5276              		.cfi_endproc
 5277              	.LFE181:
 5279              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 5280              		.align	1
 5281              		.syntax unified
 5282              		.thumb
 5283              		.thumb_func
 5284              		.fpu fpv4-sp-d16
 5286              	UART_EndTransmit_IT:
 5287              	.LFB182:
2958:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccRTMmaY.s 			page 144


2959:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2960:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2961:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2962:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2963:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2964:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2965:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2966:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5288              		.loc 1 2966 0
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 8
 5291              		@ frame_needed = 1, uses_anonymous_args = 0
 5292 0000 80B5     		push	{r7, lr}
 5293              	.LCFI284:
 5294              		.cfi_def_cfa_offset 8
 5295              		.cfi_offset 7, -8
 5296              		.cfi_offset 14, -4
 5297 0002 82B0     		sub	sp, sp, #8
 5298              	.LCFI285:
 5299              		.cfi_def_cfa_offset 16
 5300 0004 00AF     		add	r7, sp, #0
 5301              	.LCFI286:
 5302              		.cfi_def_cfa_register 7
 5303 0006 7860     		str	r0, [r7, #4]
2967:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2968:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 5304              		.loc 1 2968 0
 5305 0008 7B68     		ldr	r3, [r7, #4]
 5306 000a 1B68     		ldr	r3, [r3]
 5307 000c DA68     		ldr	r2, [r3, #12]
 5308 000e 7B68     		ldr	r3, [r7, #4]
 5309 0010 1B68     		ldr	r3, [r3]
 5310 0012 22F04002 		bic	r2, r2, #64
 5311 0016 DA60     		str	r2, [r3, #12]
2969:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2970:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2971:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5312              		.loc 1 2971 0
 5313 0018 7B68     		ldr	r3, [r7, #4]
 5314 001a 2022     		movs	r2, #32
 5315 001c 83F83920 		strb	r2, [r3, #57]
2972:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2973:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2974:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2975:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
2976:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2977:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2978:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 5316              		.loc 1 2978 0
 5317 0020 7868     		ldr	r0, [r7, #4]
 5318 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2979:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2980:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2981:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5319              		.loc 1 2981 0
 5320 0026 0023     		movs	r3, #0
2982:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccRTMmaY.s 			page 145


 5321              		.loc 1 2982 0
 5322 0028 1846     		mov	r0, r3
 5323 002a 0837     		adds	r7, r7, #8
 5324              	.LCFI287:
 5325              		.cfi_def_cfa_offset 8
 5326 002c BD46     		mov	sp, r7
 5327              	.LCFI288:
 5328              		.cfi_def_cfa_register 13
 5329              		@ sp needed
 5330 002e 80BD     		pop	{r7, pc}
 5331              		.cfi_endproc
 5332              	.LFE182:
 5334              		.section	.text.UART_Receive_IT,"ax",%progbits
 5335              		.align	1
 5336              		.syntax unified
 5337              		.thumb
 5338              		.thumb_func
 5339              		.fpu fpv4-sp-d16
 5341              	UART_Receive_IT:
 5342              	.LFB183:
2983:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2984:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2985:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
2986:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2987:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2988:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2989:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2990:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2991:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5343              		.loc 1 2991 0
 5344              		.cfi_startproc
 5345              		@ args = 0, pretend = 0, frame = 16
 5346              		@ frame_needed = 1, uses_anonymous_args = 0
 5347 0000 80B5     		push	{r7, lr}
 5348              	.LCFI289:
 5349              		.cfi_def_cfa_offset 8
 5350              		.cfi_offset 7, -8
 5351              		.cfi_offset 14, -4
 5352 0002 84B0     		sub	sp, sp, #16
 5353              	.LCFI290:
 5354              		.cfi_def_cfa_offset 24
 5355 0004 00AF     		add	r7, sp, #0
 5356              	.LCFI291:
 5357              		.cfi_def_cfa_register 7
 5358 0006 7860     		str	r0, [r7, #4]
2992:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2993:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2995:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5359              		.loc 1 2995 0
 5360 0008 7B68     		ldr	r3, [r7, #4]
 5361 000a 93F83A30 		ldrb	r3, [r3, #58]
 5362 000e DBB2     		uxtb	r3, r3
 5363 0010 222B     		cmp	r3, #34
 5364 0012 71D1     		bne	.L226
2996:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2997:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
ARM GAS  /tmp/ccRTMmaY.s 			page 146


 5365              		.loc 1 2997 0
 5366 0014 7B68     		ldr	r3, [r7, #4]
 5367 0016 9B68     		ldr	r3, [r3, #8]
 5368 0018 B3F5805F 		cmp	r3, #4096
 5369 001c 23D1     		bne	.L227
2998:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2999:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr;
 5370              		.loc 1 2999 0
 5371 001e 7B68     		ldr	r3, [r7, #4]
 5372 0020 9B6A     		ldr	r3, [r3, #40]
 5373 0022 FB60     		str	r3, [r7, #12]
3000:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5374              		.loc 1 3000 0
 5375 0024 7B68     		ldr	r3, [r7, #4]
 5376 0026 1B69     		ldr	r3, [r3, #16]
 5377 0028 002B     		cmp	r3, #0
 5378 002a 0ED1     		bne	.L228
3001:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3002:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 5379              		.loc 1 3002 0
 5380 002c 7B68     		ldr	r3, [r7, #4]
 5381 002e 1B68     		ldr	r3, [r3]
 5382 0030 5B68     		ldr	r3, [r3, #4]
 5383 0032 9BB2     		uxth	r3, r3
 5384 0034 C3F30803 		ubfx	r3, r3, #0, #9
 5385 0038 9AB2     		uxth	r2, r3
 5386 003a FB68     		ldr	r3, [r7, #12]
 5387 003c 1A80     		strh	r2, [r3]	@ movhi
3003:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 5388              		.loc 1 3003 0
 5389 003e 7B68     		ldr	r3, [r7, #4]
 5390 0040 9B6A     		ldr	r3, [r3, #40]
 5391 0042 9A1C     		adds	r2, r3, #2
 5392 0044 7B68     		ldr	r3, [r7, #4]
 5393 0046 9A62     		str	r2, [r3, #40]
 5394 0048 29E0     		b	.L230
 5395              	.L228:
3004:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3005:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3006:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3007:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 5396              		.loc 1 3007 0
 5397 004a 7B68     		ldr	r3, [r7, #4]
 5398 004c 1B68     		ldr	r3, [r3]
 5399 004e 5B68     		ldr	r3, [r3, #4]
 5400 0050 9BB2     		uxth	r3, r3
 5401 0052 DBB2     		uxtb	r3, r3
 5402 0054 9AB2     		uxth	r2, r3
 5403 0056 FB68     		ldr	r3, [r7, #12]
 5404 0058 1A80     		strh	r2, [r3]	@ movhi
3008:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 5405              		.loc 1 3008 0
 5406 005a 7B68     		ldr	r3, [r7, #4]
 5407 005c 9B6A     		ldr	r3, [r3, #40]
 5408 005e 5A1C     		adds	r2, r3, #1
 5409 0060 7B68     		ldr	r3, [r7, #4]
 5410 0062 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccRTMmaY.s 			page 147


 5411 0064 1BE0     		b	.L230
 5412              	.L227:
3009:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3010:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3011:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3012:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3013:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5413              		.loc 1 3013 0
 5414 0066 7B68     		ldr	r3, [r7, #4]
 5415 0068 1B69     		ldr	r3, [r3, #16]
 5416 006a 002B     		cmp	r3, #0
 5417 006c 0AD1     		bne	.L231
3014:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3015:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 5418              		.loc 1 3015 0
 5419 006e 7B68     		ldr	r3, [r7, #4]
 5420 0070 1B68     		ldr	r3, [r3]
 5421 0072 5868     		ldr	r0, [r3, #4]
 5422 0074 7B68     		ldr	r3, [r7, #4]
 5423 0076 9B6A     		ldr	r3, [r3, #40]
 5424 0078 591C     		adds	r1, r3, #1
 5425 007a 7A68     		ldr	r2, [r7, #4]
 5426 007c 9162     		str	r1, [r2, #40]
 5427 007e C2B2     		uxtb	r2, r0
 5428 0080 1A70     		strb	r2, [r3]
 5429 0082 0CE0     		b	.L230
 5430              	.L231:
3016:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3017:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3018:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3019:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 5431              		.loc 1 3019 0
 5432 0084 7B68     		ldr	r3, [r7, #4]
 5433 0086 1B68     		ldr	r3, [r3]
 5434 0088 5B68     		ldr	r3, [r3, #4]
 5435 008a DAB2     		uxtb	r2, r3
 5436 008c 7B68     		ldr	r3, [r7, #4]
 5437 008e 9B6A     		ldr	r3, [r3, #40]
 5438 0090 581C     		adds	r0, r3, #1
 5439 0092 7968     		ldr	r1, [r7, #4]
 5440 0094 8862     		str	r0, [r1, #40]
 5441 0096 02F07F02 		and	r2, r2, #127
 5442 009a D2B2     		uxtb	r2, r2
 5443 009c 1A70     		strb	r2, [r3]
 5444              	.L230:
3020:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3021:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3022:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3023:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 5445              		.loc 1 3023 0
 5446 009e 7B68     		ldr	r3, [r7, #4]
 5447 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5448 00a2 9BB2     		uxth	r3, r3
 5449 00a4 013B     		subs	r3, r3, #1
 5450 00a6 9BB2     		uxth	r3, r3
 5451 00a8 7A68     		ldr	r2, [r7, #4]
 5452 00aa 1946     		mov	r1, r3	@ movhi
ARM GAS  /tmp/ccRTMmaY.s 			page 148


 5453 00ac D185     		strh	r1, [r2, #46]	@ movhi
 5454 00ae 002B     		cmp	r3, #0
 5455 00b0 20D1     		bne	.L232
3024:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3025:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3026:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 5456              		.loc 1 3026 0
 5457 00b2 7B68     		ldr	r3, [r7, #4]
 5458 00b4 1B68     		ldr	r3, [r3]
 5459 00b6 DA68     		ldr	r2, [r3, #12]
 5460 00b8 7B68     		ldr	r3, [r7, #4]
 5461 00ba 1B68     		ldr	r3, [r3]
 5462 00bc 22F02002 		bic	r2, r2, #32
 5463 00c0 DA60     		str	r2, [r3, #12]
3027:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3028:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3029:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 5464              		.loc 1 3029 0
 5465 00c2 7B68     		ldr	r3, [r7, #4]
 5466 00c4 1B68     		ldr	r3, [r3]
 5467 00c6 DA68     		ldr	r2, [r3, #12]
 5468 00c8 7B68     		ldr	r3, [r7, #4]
 5469 00ca 1B68     		ldr	r3, [r3]
 5470 00cc 22F48072 		bic	r2, r2, #256
 5471 00d0 DA60     		str	r2, [r3, #12]
3030:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3031:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3032:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 5472              		.loc 1 3032 0
 5473 00d2 7B68     		ldr	r3, [r7, #4]
 5474 00d4 1B68     		ldr	r3, [r3]
 5475 00d6 5A69     		ldr	r2, [r3, #20]
 5476 00d8 7B68     		ldr	r3, [r7, #4]
 5477 00da 1B68     		ldr	r3, [r3]
 5478 00dc 22F00102 		bic	r2, r2, #1
 5479 00e0 5A61     		str	r2, [r3, #20]
3033:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3035:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5480              		.loc 1 3035 0
 5481 00e2 7B68     		ldr	r3, [r7, #4]
 5482 00e4 2022     		movs	r2, #32
 5483 00e6 83F83A20 		strb	r2, [r3, #58]
3036:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3037:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3038:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3039:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3040:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3041:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3042:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 5484              		.loc 1 3042 0
 5485 00ea 7868     		ldr	r0, [r7, #4]
 5486 00ec FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3043:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3044:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3045:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 5487              		.loc 1 3045 0
ARM GAS  /tmp/ccRTMmaY.s 			page 149


 5488 00f0 0023     		movs	r3, #0
 5489 00f2 02E0     		b	.L233
 5490              	.L232:
3046:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3047:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5491              		.loc 1 3047 0
 5492 00f4 0023     		movs	r3, #0
 5493 00f6 00E0     		b	.L233
 5494              	.L226:
3048:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3049:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3050:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3051:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5495              		.loc 1 3051 0
 5496 00f8 0223     		movs	r3, #2
 5497              	.L233:
3052:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3053:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5498              		.loc 1 3053 0
 5499 00fa 1846     		mov	r0, r3
 5500 00fc 1037     		adds	r7, r7, #16
 5501              	.LCFI292:
 5502              		.cfi_def_cfa_offset 8
 5503 00fe BD46     		mov	sp, r7
 5504              	.LCFI293:
 5505              		.cfi_def_cfa_register 13
 5506              		@ sp needed
 5507 0100 80BD     		pop	{r7, pc}
 5508              		.cfi_endproc
 5509              	.LFE183:
 5511              		.global	__aeabi_uldivmod
 5512              		.section	.text.UART_SetConfig,"ax",%progbits
 5513              		.align	1
 5514              		.syntax unified
 5515              		.thumb
 5516              		.thumb_func
 5517              		.fpu fpv4-sp-d16
 5519              	UART_SetConfig:
 5520              	.LFB184:
3054:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3056:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3057:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3058:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3059:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3060:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3061:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3062:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5521              		.loc 1 3062 0
 5522              		.cfi_startproc
 5523              		@ args = 0, pretend = 0, frame = 16
 5524              		@ frame_needed = 1, uses_anonymous_args = 0
 5525 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5526              	.LCFI294:
 5527              		.cfi_def_cfa_offset 36
 5528              		.cfi_offset 4, -36
 5529              		.cfi_offset 5, -32
ARM GAS  /tmp/ccRTMmaY.s 			page 150


 5530              		.cfi_offset 6, -28
 5531              		.cfi_offset 7, -24
 5532              		.cfi_offset 8, -20
 5533              		.cfi_offset 9, -16
 5534              		.cfi_offset 10, -12
 5535              		.cfi_offset 11, -8
 5536              		.cfi_offset 14, -4
 5537 0004 85B0     		sub	sp, sp, #20
 5538              	.LCFI295:
 5539              		.cfi_def_cfa_offset 56
 5540 0006 00AF     		add	r7, sp, #0
 5541              	.LCFI296:
 5542              		.cfi_def_cfa_register 7
 5543 0008 7860     		str	r0, [r7, #4]
3063:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3064:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3065:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3067:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3068:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3069:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3070:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3071:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3072:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3073:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3074:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3075:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5544              		.loc 1 3075 0
 5545 000a 7B68     		ldr	r3, [r7, #4]
 5546 000c 1B68     		ldr	r3, [r3]
 5547 000e 1B69     		ldr	r3, [r3, #16]
 5548 0010 23F44051 		bic	r1, r3, #12288
 5549 0014 7B68     		ldr	r3, [r7, #4]
 5550 0016 DA68     		ldr	r2, [r3, #12]
 5551 0018 7B68     		ldr	r3, [r7, #4]
 5552 001a 1B68     		ldr	r3, [r3]
 5553 001c 0A43     		orrs	r2, r2, r1
 5554 001e 1A61     		str	r2, [r3, #16]
3076:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3077:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3078:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3079:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3080:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3081:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3082:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3083:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3084:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 5555              		.loc 1 3084 0
 5556 0020 7B68     		ldr	r3, [r7, #4]
 5557 0022 9A68     		ldr	r2, [r3, #8]
 5558 0024 7B68     		ldr	r3, [r7, #4]
 5559 0026 1B69     		ldr	r3, [r3, #16]
 5560 0028 1A43     		orrs	r2, r2, r3
 5561 002a 7B68     		ldr	r3, [r7, #4]
 5562 002c 5B69     		ldr	r3, [r3, #20]
 5563 002e 1A43     		orrs	r2, r2, r3
 5564 0030 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRTMmaY.s 			page 151


 5565 0032 DB69     		ldr	r3, [r3, #28]
 5566 0034 1343     		orrs	r3, r3, r2
 5567 0036 FB60     		str	r3, [r7, #12]
3085:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 5568              		.loc 1 3085 0
 5569 0038 7B68     		ldr	r3, [r7, #4]
 5570 003a 1B68     		ldr	r3, [r3]
 5571 003c DB68     		ldr	r3, [r3, #12]
 5572 003e 23F41643 		bic	r3, r3, #38400
 5573 0042 23F00C03 		bic	r3, r3, #12
 5574 0046 7A68     		ldr	r2, [r7, #4]
 5575 0048 1268     		ldr	r2, [r2]
 5576 004a F968     		ldr	r1, [r7, #12]
 5577 004c 0B43     		orrs	r3, r3, r1
 5578 004e D360     		str	r3, [r2, #12]
3086:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3087:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3088:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3089:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3090:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3091:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 5579              		.loc 1 3091 0
 5580 0050 7B68     		ldr	r3, [r7, #4]
 5581 0052 1B68     		ldr	r3, [r3]
 5582 0054 5B69     		ldr	r3, [r3, #20]
 5583 0056 23F44071 		bic	r1, r3, #768
 5584 005a 7B68     		ldr	r3, [r7, #4]
 5585 005c 9A69     		ldr	r2, [r3, #24]
 5586 005e 7B68     		ldr	r3, [r7, #4]
 5587 0060 1B68     		ldr	r3, [r3]
 5588 0062 0A43     		orrs	r2, r2, r1
 5589 0064 5A61     		str	r2, [r3, #20]
3092:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3093:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
3094:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5590              		.loc 1 3094 0
 5591 0066 7B68     		ldr	r3, [r7, #4]
 5592 0068 DB69     		ldr	r3, [r3, #28]
 5593 006a B3F5004F 		cmp	r3, #32768
 5594 006e 40F08B81 		bne	.L235
3095:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3096:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3097:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3098:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3099:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3100:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3101:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3102:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3103:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3104:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 5595              		.loc 1 3104 0
 5596 0072 7B68     		ldr	r3, [r7, #4]
 5597 0074 1B68     		ldr	r3, [r3]
 5598 0076 C14A     		ldr	r2, .L243
 5599 0078 9342     		cmp	r3, r2
 5600 007a 05D0     		beq	.L236
 5601              		.loc 1 3104 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccRTMmaY.s 			page 152


 5602 007c 7B68     		ldr	r3, [r7, #4]
 5603 007e 1B68     		ldr	r3, [r3]
 5604 0080 BF4A     		ldr	r2, .L243+4
 5605 0082 9342     		cmp	r3, r2
 5606 0084 40F0BD80 		bne	.L237
 5607              	.L236:
3105:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3106:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 5608              		.loc 1 3106 0 is_stmt 1
 5609 0088 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5610 008c B860     		str	r0, [r7, #8]
3107:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 5611              		.loc 1 3107 0
 5612 008e BB68     		ldr	r3, [r7, #8]
 5613 0090 1D46     		mov	r5, r3
 5614 0092 4FF00006 		mov	r6, #0
 5615 0096 A846     		mov	r8, r5
 5616 0098 B146     		mov	r9, r6
 5617 009a 18EB0803 		adds	r3, r8, r8
 5618 009e 49EB0904 		adc	r4, r9, r9
 5619 00a2 9846     		mov	r8, r3
 5620 00a4 A146     		mov	r9, r4
 5621 00a6 18EB0508 		adds	r8, r8, r5
 5622 00aa 49EB0609 		adc	r9, r9, r6
 5623 00ae 4FF00001 		mov	r1, #0
 5624 00b2 4FF00002 		mov	r2, #0
 5625 00b6 4FEAC902 		lsl	r2, r9, #3
 5626 00ba 42EA5872 		orr	r2, r2, r8, lsr #29
 5627 00be 4FEAC801 		lsl	r1, r8, #3
 5628 00c2 8846     		mov	r8, r1
 5629 00c4 9146     		mov	r9, r2
 5630 00c6 18EB0500 		adds	r0, r8, r5
 5631 00ca 49EB0601 		adc	r1, r9, r6
 5632 00ce 7B68     		ldr	r3, [r7, #4]
 5633 00d0 5B68     		ldr	r3, [r3, #4]
 5634 00d2 1D46     		mov	r5, r3
 5635 00d4 4FF00006 		mov	r6, #0
 5636 00d8 6B19     		adds	r3, r5, r5
 5637 00da 46EB0604 		adc	r4, r6, r6
 5638 00de 1A46     		mov	r2, r3
 5639 00e0 2346     		mov	r3, r4
 5640 00e2 FFF7FEFF 		bl	__aeabi_uldivmod
 5641              	.LVL3:
 5642 00e6 0346     		mov	r3, r0
 5643 00e8 0C46     		mov	r4, r1
 5644 00ea 1A46     		mov	r2, r3
 5645 00ec A54B     		ldr	r3, .L243+8
 5646 00ee A3FB0223 		umull	r2, r3, r3, r2
 5647 00f2 5B09     		lsrs	r3, r3, #5
 5648 00f4 4FEA0318 		lsl	r8, r3, #4
 5649 00f8 BB68     		ldr	r3, [r7, #8]
 5650 00fa 1D46     		mov	r5, r3
 5651 00fc 4FF00006 		mov	r6, #0
 5652 0100 A946     		mov	r9, r5
 5653 0102 B246     		mov	r10, r6
 5654 0104 19EB0903 		adds	r3, r9, r9
 5655 0108 4AEB0A04 		adc	r4, r10, r10
ARM GAS  /tmp/ccRTMmaY.s 			page 153


 5656 010c 9946     		mov	r9, r3
 5657 010e A246     		mov	r10, r4
 5658 0110 19EB0509 		adds	r9, r9, r5
 5659 0114 4AEB060A 		adc	r10, r10, r6
 5660 0118 4FF00001 		mov	r1, #0
 5661 011c 4FF00002 		mov	r2, #0
 5662 0120 4FEACA02 		lsl	r2, r10, #3
 5663 0124 42EA5972 		orr	r2, r2, r9, lsr #29
 5664 0128 4FEAC901 		lsl	r1, r9, #3
 5665 012c 8946     		mov	r9, r1
 5666 012e 9246     		mov	r10, r2
 5667 0130 19EB0500 		adds	r0, r9, r5
 5668 0134 4AEB0601 		adc	r1, r10, r6
 5669 0138 7B68     		ldr	r3, [r7, #4]
 5670 013a 5B68     		ldr	r3, [r3, #4]
 5671 013c 1D46     		mov	r5, r3
 5672 013e 4FF00006 		mov	r6, #0
 5673 0142 6B19     		adds	r3, r5, r5
 5674 0144 46EB0604 		adc	r4, r6, r6
 5675 0148 1A46     		mov	r2, r3
 5676 014a 2346     		mov	r3, r4
 5677 014c FFF7FEFF 		bl	__aeabi_uldivmod
 5678              	.LVL4:
 5679 0150 0346     		mov	r3, r0
 5680 0152 0C46     		mov	r4, r1
 5681 0154 1A46     		mov	r2, r3
 5682 0156 8B4B     		ldr	r3, .L243+8
 5683 0158 A3FB0213 		umull	r1, r3, r3, r2
 5684 015c 5B09     		lsrs	r3, r3, #5
 5685 015e 6421     		movs	r1, #100
 5686 0160 01FB03F3 		mul	r3, r1, r3
 5687 0164 D31A     		subs	r3, r2, r3
 5688 0166 DB00     		lsls	r3, r3, #3
 5689 0168 3233     		adds	r3, r3, #50
 5690 016a 864A     		ldr	r2, .L243+8
 5691 016c A2FB0323 		umull	r2, r3, r2, r3
 5692 0170 5B09     		lsrs	r3, r3, #5
 5693 0172 5B00     		lsls	r3, r3, #1
 5694 0174 03F4F873 		and	r3, r3, #496
 5695 0178 9844     		add	r8, r8, r3
 5696 017a BB68     		ldr	r3, [r7, #8]
 5697 017c 1D46     		mov	r5, r3
 5698 017e 4FF00006 		mov	r6, #0
 5699 0182 A946     		mov	r9, r5
 5700 0184 B246     		mov	r10, r6
 5701 0186 19EB0903 		adds	r3, r9, r9
 5702 018a 4AEB0A04 		adc	r4, r10, r10
 5703 018e 9946     		mov	r9, r3
 5704 0190 A246     		mov	r10, r4
 5705 0192 19EB0509 		adds	r9, r9, r5
 5706 0196 4AEB060A 		adc	r10, r10, r6
 5707 019a 4FF00001 		mov	r1, #0
 5708 019e 4FF00002 		mov	r2, #0
 5709 01a2 4FEACA02 		lsl	r2, r10, #3
 5710 01a6 42EA5972 		orr	r2, r2, r9, lsr #29
 5711 01aa 4FEAC901 		lsl	r1, r9, #3
 5712 01ae 8946     		mov	r9, r1
ARM GAS  /tmp/ccRTMmaY.s 			page 154


 5713 01b0 9246     		mov	r10, r2
 5714 01b2 19EB0500 		adds	r0, r9, r5
 5715 01b6 4AEB0601 		adc	r1, r10, r6
 5716 01ba 7B68     		ldr	r3, [r7, #4]
 5717 01bc 5B68     		ldr	r3, [r3, #4]
 5718 01be 1D46     		mov	r5, r3
 5719 01c0 4FF00006 		mov	r6, #0
 5720 01c4 6B19     		adds	r3, r5, r5
 5721 01c6 46EB0604 		adc	r4, r6, r6
 5722 01ca 1A46     		mov	r2, r3
 5723 01cc 2346     		mov	r3, r4
 5724 01ce FFF7FEFF 		bl	__aeabi_uldivmod
 5725              	.LVL5:
 5726 01d2 0346     		mov	r3, r0
 5727 01d4 0C46     		mov	r4, r1
 5728 01d6 1A46     		mov	r2, r3
 5729 01d8 6A4B     		ldr	r3, .L243+8
 5730 01da A3FB0213 		umull	r1, r3, r3, r2
 5731 01de 5B09     		lsrs	r3, r3, #5
 5732 01e0 6421     		movs	r1, #100
 5733 01e2 01FB03F3 		mul	r3, r1, r3
 5734 01e6 D31A     		subs	r3, r2, r3
 5735 01e8 DB00     		lsls	r3, r3, #3
 5736 01ea 3233     		adds	r3, r3, #50
 5737 01ec 654A     		ldr	r2, .L243+8
 5738 01ee A2FB0323 		umull	r2, r3, r2, r3
 5739 01f2 5B09     		lsrs	r3, r3, #5
 5740 01f4 03F00702 		and	r2, r3, #7
 5741 01f8 7B68     		ldr	r3, [r7, #4]
 5742 01fa 1B68     		ldr	r3, [r3]
 5743 01fc 4244     		add	r2, r2, r8
 5744 01fe 9A60     		str	r2, [r3, #8]
 5745 0200 6FE2     		b	.L239
 5746              	.L237:
3108:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3109:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3110:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3111:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3112:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3113:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3114:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3115:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3116:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3117:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3118:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 5747              		.loc 1 3118 0
 5748 0202 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5749 0206 B860     		str	r0, [r7, #8]
3119:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 5750              		.loc 1 3119 0
 5751 0208 BB68     		ldr	r3, [r7, #8]
 5752 020a 1D46     		mov	r5, r3
 5753 020c 4FF00006 		mov	r6, #0
 5754 0210 A846     		mov	r8, r5
 5755 0212 B146     		mov	r9, r6
 5756 0214 18EB0803 		adds	r3, r8, r8
 5757 0218 49EB0904 		adc	r4, r9, r9
ARM GAS  /tmp/ccRTMmaY.s 			page 155


 5758 021c 9846     		mov	r8, r3
 5759 021e A146     		mov	r9, r4
 5760 0220 18EB0508 		adds	r8, r8, r5
 5761 0224 49EB0609 		adc	r9, r9, r6
 5762 0228 4FF00001 		mov	r1, #0
 5763 022c 4FF00002 		mov	r2, #0
 5764 0230 4FEAC902 		lsl	r2, r9, #3
 5765 0234 42EA5872 		orr	r2, r2, r8, lsr #29
 5766 0238 4FEAC801 		lsl	r1, r8, #3
 5767 023c 8846     		mov	r8, r1
 5768 023e 9146     		mov	r9, r2
 5769 0240 18EB0500 		adds	r0, r8, r5
 5770 0244 49EB0601 		adc	r1, r9, r6
 5771 0248 7B68     		ldr	r3, [r7, #4]
 5772 024a 5B68     		ldr	r3, [r3, #4]
 5773 024c 1D46     		mov	r5, r3
 5774 024e 4FF00006 		mov	r6, #0
 5775 0252 6B19     		adds	r3, r5, r5
 5776 0254 46EB0604 		adc	r4, r6, r6
 5777 0258 1A46     		mov	r2, r3
 5778 025a 2346     		mov	r3, r4
 5779 025c FFF7FEFF 		bl	__aeabi_uldivmod
 5780              	.LVL6:
 5781 0260 0346     		mov	r3, r0
 5782 0262 0C46     		mov	r4, r1
 5783 0264 1A46     		mov	r2, r3
 5784 0266 474B     		ldr	r3, .L243+8
 5785 0268 A3FB0223 		umull	r2, r3, r3, r2
 5786 026c 5B09     		lsrs	r3, r3, #5
 5787 026e 4FEA0318 		lsl	r8, r3, #4
 5788 0272 BB68     		ldr	r3, [r7, #8]
 5789 0274 1D46     		mov	r5, r3
 5790 0276 4FF00006 		mov	r6, #0
 5791 027a A946     		mov	r9, r5
 5792 027c B246     		mov	r10, r6
 5793 027e 19EB0903 		adds	r3, r9, r9
 5794 0282 4AEB0A04 		adc	r4, r10, r10
 5795 0286 9946     		mov	r9, r3
 5796 0288 A246     		mov	r10, r4
 5797 028a 19EB0509 		adds	r9, r9, r5
 5798 028e 4AEB060A 		adc	r10, r10, r6
 5799 0292 4FF00001 		mov	r1, #0
 5800 0296 4FF00002 		mov	r2, #0
 5801 029a 4FEACA02 		lsl	r2, r10, #3
 5802 029e 42EA5972 		orr	r2, r2, r9, lsr #29
 5803 02a2 4FEAC901 		lsl	r1, r9, #3
 5804 02a6 8946     		mov	r9, r1
 5805 02a8 9246     		mov	r10, r2
 5806 02aa 19EB0500 		adds	r0, r9, r5
 5807 02ae 4AEB0601 		adc	r1, r10, r6
 5808 02b2 7B68     		ldr	r3, [r7, #4]
 5809 02b4 5B68     		ldr	r3, [r3, #4]
 5810 02b6 1D46     		mov	r5, r3
 5811 02b8 4FF00006 		mov	r6, #0
 5812 02bc 6B19     		adds	r3, r5, r5
 5813 02be 46EB0604 		adc	r4, r6, r6
 5814 02c2 1A46     		mov	r2, r3
ARM GAS  /tmp/ccRTMmaY.s 			page 156


 5815 02c4 2346     		mov	r3, r4
 5816 02c6 FFF7FEFF 		bl	__aeabi_uldivmod
 5817              	.LVL7:
 5818 02ca 0346     		mov	r3, r0
 5819 02cc 0C46     		mov	r4, r1
 5820 02ce 1A46     		mov	r2, r3
 5821 02d0 2C4B     		ldr	r3, .L243+8
 5822 02d2 A3FB0213 		umull	r1, r3, r3, r2
 5823 02d6 5B09     		lsrs	r3, r3, #5
 5824 02d8 6421     		movs	r1, #100
 5825 02da 01FB03F3 		mul	r3, r1, r3
 5826 02de D31A     		subs	r3, r2, r3
 5827 02e0 DB00     		lsls	r3, r3, #3
 5828 02e2 3233     		adds	r3, r3, #50
 5829 02e4 274A     		ldr	r2, .L243+8
 5830 02e6 A2FB0323 		umull	r2, r3, r2, r3
 5831 02ea 5B09     		lsrs	r3, r3, #5
 5832 02ec 5B00     		lsls	r3, r3, #1
 5833 02ee 03F4F873 		and	r3, r3, #496
 5834 02f2 9844     		add	r8, r8, r3
 5835 02f4 BB68     		ldr	r3, [r7, #8]
 5836 02f6 1D46     		mov	r5, r3
 5837 02f8 4FF00006 		mov	r6, #0
 5838 02fc A946     		mov	r9, r5
 5839 02fe B246     		mov	r10, r6
 5840 0300 19EB0903 		adds	r3, r9, r9
 5841 0304 4AEB0A04 		adc	r4, r10, r10
 5842 0308 9946     		mov	r9, r3
 5843 030a A246     		mov	r10, r4
 5844 030c 19EB0509 		adds	r9, r9, r5
 5845 0310 4AEB060A 		adc	r10, r10, r6
 5846 0314 4FF00001 		mov	r1, #0
 5847 0318 4FF00002 		mov	r2, #0
 5848 031c 4FEACA02 		lsl	r2, r10, #3
 5849 0320 42EA5972 		orr	r2, r2, r9, lsr #29
 5850 0324 4FEAC901 		lsl	r1, r9, #3
 5851 0328 8946     		mov	r9, r1
 5852 032a 9246     		mov	r10, r2
 5853 032c 19EB0500 		adds	r0, r9, r5
 5854 0330 4AEB0601 		adc	r1, r10, r6
 5855 0334 7B68     		ldr	r3, [r7, #4]
 5856 0336 5B68     		ldr	r3, [r3, #4]
 5857 0338 1D46     		mov	r5, r3
 5858 033a 4FF00006 		mov	r6, #0
 5859 033e 6B19     		adds	r3, r5, r5
 5860 0340 46EB0604 		adc	r4, r6, r6
 5861 0344 1A46     		mov	r2, r3
 5862 0346 2346     		mov	r3, r4
 5863 0348 FFF7FEFF 		bl	__aeabi_uldivmod
 5864              	.LVL8:
 5865 034c 0346     		mov	r3, r0
 5866 034e 0C46     		mov	r4, r1
 5867 0350 1A46     		mov	r2, r3
 5868 0352 0C4B     		ldr	r3, .L243+8
 5869 0354 A3FB0213 		umull	r1, r3, r3, r2
 5870 0358 5B09     		lsrs	r3, r3, #5
 5871 035a 6421     		movs	r1, #100
ARM GAS  /tmp/ccRTMmaY.s 			page 157


 5872 035c 01FB03F3 		mul	r3, r1, r3
 5873 0360 D31A     		subs	r3, r2, r3
 5874 0362 DB00     		lsls	r3, r3, #3
 5875 0364 3233     		adds	r3, r3, #50
 5876 0366 074A     		ldr	r2, .L243+8
 5877 0368 A2FB0323 		umull	r2, r3, r2, r3
 5878 036c 5B09     		lsrs	r3, r3, #5
 5879 036e 03F00702 		and	r2, r3, #7
 5880 0372 7B68     		ldr	r3, [r7, #4]
 5881 0374 1B68     		ldr	r3, [r3]
 5882 0376 4244     		add	r2, r2, r8
 5883 0378 9A60     		str	r2, [r3, #8]
3120:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3121:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3122:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3123:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3124:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3125:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3126:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3127:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3128:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3129:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3130:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3131:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3132:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
3133:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3134:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3135:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3136:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3137:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3138:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3139:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3140:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3141:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3142:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3143:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3144:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3145:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3146:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
3147:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3148:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3149:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3150:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5884              		.loc 1 3150 0
 5885 037a B2E1     		b	.L242
 5886              	.L244:
 5887              		.align	2
 5888              	.L243:
 5889 037c 00100140 		.word	1073811456
 5890 0380 00140140 		.word	1073812480
 5891 0384 1F85EB51 		.word	1374389535
 5892              	.L235:
3132:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5893              		.loc 1 3132 0
 5894 0388 7B68     		ldr	r3, [r7, #4]
 5895 038a 1B68     		ldr	r3, [r3]
 5896 038c D74A     		ldr	r2, .L245
ARM GAS  /tmp/ccRTMmaY.s 			page 158


 5897 038e 9342     		cmp	r3, r2
 5898 0390 05D0     		beq	.L240
3132:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5899              		.loc 1 3132 0 is_stmt 0 discriminator 1
 5900 0392 7B68     		ldr	r3, [r7, #4]
 5901 0394 1B68     		ldr	r3, [r3]
 5902 0396 D64A     		ldr	r2, .L245+4
 5903 0398 9342     		cmp	r3, r2
 5904 039a 40F0D180 		bne	.L241
 5905              	.L240:
3134:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 5906              		.loc 1 3134 0 is_stmt 1
 5907 039e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5908 03a2 B860     		str	r0, [r7, #8]
3135:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5909              		.loc 1 3135 0
 5910 03a4 BB68     		ldr	r3, [r7, #8]
 5911 03a6 9A46     		mov	r10, r3
 5912 03a8 4FF0000B 		mov	fp, #0
 5913 03ac D046     		mov	r8, r10
 5914 03ae D946     		mov	r9, fp
 5915 03b0 18EB0803 		adds	r3, r8, r8
 5916 03b4 49EB0904 		adc	r4, r9, r9
 5917 03b8 9846     		mov	r8, r3
 5918 03ba A146     		mov	r9, r4
 5919 03bc 18EB0A08 		adds	r8, r8, r10
 5920 03c0 49EB0B09 		adc	r9, r9, fp
 5921 03c4 4FF00001 		mov	r1, #0
 5922 03c8 4FF00002 		mov	r2, #0
 5923 03cc 4FEAC902 		lsl	r2, r9, #3
 5924 03d0 42EA5872 		orr	r2, r2, r8, lsr #29
 5925 03d4 4FEAC801 		lsl	r1, r8, #3
 5926 03d8 8846     		mov	r8, r1
 5927 03da 9146     		mov	r9, r2
 5928 03dc 1AEB0805 		adds	r5, r10, r8
 5929 03e0 4BEB0906 		adc	r6, fp, r9
 5930 03e4 7B68     		ldr	r3, [r7, #4]
 5931 03e6 5B68     		ldr	r3, [r3, #4]
 5932 03e8 1946     		mov	r1, r3
 5933 03ea 4FF00002 		mov	r2, #0
 5934 03ee 4FF00003 		mov	r3, #0
 5935 03f2 4FF00004 		mov	r4, #0
 5936 03f6 9400     		lsls	r4, r2, #2
 5937 03f8 44EA9174 		orr	r4, r4, r1, lsr #30
 5938 03fc 8B00     		lsls	r3, r1, #2
 5939 03fe 1A46     		mov	r2, r3
 5940 0400 2346     		mov	r3, r4
 5941 0402 2846     		mov	r0, r5
 5942 0404 3146     		mov	r1, r6
 5943 0406 FFF7FEFF 		bl	__aeabi_uldivmod
 5944              	.LVL9:
 5945 040a 0346     		mov	r3, r0
 5946 040c 0C46     		mov	r4, r1
 5947 040e 1A46     		mov	r2, r3
 5948 0410 B84B     		ldr	r3, .L245+8
 5949 0412 A3FB0223 		umull	r2, r3, r3, r2
 5950 0416 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccRTMmaY.s 			page 159


 5951 0418 4FEA0318 		lsl	r8, r3, #4
 5952 041c BB68     		ldr	r3, [r7, #8]
 5953 041e 9B46     		mov	fp, r3
 5954 0420 4FF0000C 		mov	ip, #0
 5955 0424 D946     		mov	r9, fp
 5956 0426 E246     		mov	r10, ip
 5957 0428 19EB0903 		adds	r3, r9, r9
 5958 042c 4AEB0A04 		adc	r4, r10, r10
 5959 0430 9946     		mov	r9, r3
 5960 0432 A246     		mov	r10, r4
 5961 0434 19EB0B09 		adds	r9, r9, fp
 5962 0438 4AEB0C0A 		adc	r10, r10, ip
 5963 043c 4FF00001 		mov	r1, #0
 5964 0440 4FF00002 		mov	r2, #0
 5965 0444 4FEACA02 		lsl	r2, r10, #3
 5966 0448 42EA5972 		orr	r2, r2, r9, lsr #29
 5967 044c 4FEAC901 		lsl	r1, r9, #3
 5968 0450 8946     		mov	r9, r1
 5969 0452 9246     		mov	r10, r2
 5970 0454 1BEB0905 		adds	r5, fp, r9
 5971 0458 4CEB0A06 		adc	r6, ip, r10
 5972 045c 7B68     		ldr	r3, [r7, #4]
 5973 045e 5B68     		ldr	r3, [r3, #4]
 5974 0460 1946     		mov	r1, r3
 5975 0462 4FF00002 		mov	r2, #0
 5976 0466 4FF00003 		mov	r3, #0
 5977 046a 4FF00004 		mov	r4, #0
 5978 046e 9400     		lsls	r4, r2, #2
 5979 0470 44EA9174 		orr	r4, r4, r1, lsr #30
 5980 0474 8B00     		lsls	r3, r1, #2
 5981 0476 1A46     		mov	r2, r3
 5982 0478 2346     		mov	r3, r4
 5983 047a 2846     		mov	r0, r5
 5984 047c 3146     		mov	r1, r6
 5985 047e FFF7FEFF 		bl	__aeabi_uldivmod
 5986              	.LVL10:
 5987 0482 0346     		mov	r3, r0
 5988 0484 0C46     		mov	r4, r1
 5989 0486 1A46     		mov	r2, r3
 5990 0488 9A4B     		ldr	r3, .L245+8
 5991 048a A3FB0213 		umull	r1, r3, r3, r2
 5992 048e 5B09     		lsrs	r3, r3, #5
 5993 0490 6421     		movs	r1, #100
 5994 0492 01FB03F3 		mul	r3, r1, r3
 5995 0496 D31A     		subs	r3, r2, r3
 5996 0498 1B01     		lsls	r3, r3, #4
 5997 049a 3233     		adds	r3, r3, #50
 5998 049c 954A     		ldr	r2, .L245+8
 5999 049e A2FB0323 		umull	r2, r3, r2, r3
 6000 04a2 5B09     		lsrs	r3, r3, #5
 6001 04a4 03F0F003 		and	r3, r3, #240
 6002 04a8 9844     		add	r8, r8, r3
 6003 04aa BB68     		ldr	r3, [r7, #8]
 6004 04ac 9B46     		mov	fp, r3
 6005 04ae 4FF0000C 		mov	ip, #0
 6006 04b2 D946     		mov	r9, fp
 6007 04b4 E246     		mov	r10, ip
ARM GAS  /tmp/ccRTMmaY.s 			page 160


 6008 04b6 19EB0903 		adds	r3, r9, r9
 6009 04ba 4AEB0A04 		adc	r4, r10, r10
 6010 04be 9946     		mov	r9, r3
 6011 04c0 A246     		mov	r10, r4
 6012 04c2 19EB0B09 		adds	r9, r9, fp
 6013 04c6 4AEB0C0A 		adc	r10, r10, ip
 6014 04ca 4FF00001 		mov	r1, #0
 6015 04ce 4FF00002 		mov	r2, #0
 6016 04d2 4FEACA02 		lsl	r2, r10, #3
 6017 04d6 42EA5972 		orr	r2, r2, r9, lsr #29
 6018 04da 4FEAC901 		lsl	r1, r9, #3
 6019 04de 8946     		mov	r9, r1
 6020 04e0 9246     		mov	r10, r2
 6021 04e2 1BEB0905 		adds	r5, fp, r9
 6022 04e6 4CEB0A06 		adc	r6, ip, r10
 6023 04ea 7B68     		ldr	r3, [r7, #4]
 6024 04ec 5B68     		ldr	r3, [r3, #4]
 6025 04ee 1946     		mov	r1, r3
 6026 04f0 4FF00002 		mov	r2, #0
 6027 04f4 4FF00003 		mov	r3, #0
 6028 04f8 4FF00004 		mov	r4, #0
 6029 04fc 9400     		lsls	r4, r2, #2
 6030 04fe 44EA9174 		orr	r4, r4, r1, lsr #30
 6031 0502 8B00     		lsls	r3, r1, #2
 6032 0504 1A46     		mov	r2, r3
 6033 0506 2346     		mov	r3, r4
 6034 0508 2846     		mov	r0, r5
 6035 050a 3146     		mov	r1, r6
 6036 050c FFF7FEFF 		bl	__aeabi_uldivmod
 6037              	.LVL11:
 6038 0510 0346     		mov	r3, r0
 6039 0512 0C46     		mov	r4, r1
 6040 0514 1A46     		mov	r2, r3
 6041 0516 774B     		ldr	r3, .L245+8
 6042 0518 A3FB0213 		umull	r1, r3, r3, r2
 6043 051c 5B09     		lsrs	r3, r3, #5
 6044 051e 6421     		movs	r1, #100
 6045 0520 01FB03F3 		mul	r3, r1, r3
 6046 0524 D31A     		subs	r3, r2, r3
 6047 0526 1B01     		lsls	r3, r3, #4
 6048 0528 3233     		adds	r3, r3, #50
 6049 052a 724A     		ldr	r2, .L245+8
 6050 052c A2FB0323 		umull	r2, r3, r2, r3
 6051 0530 5B09     		lsrs	r3, r3, #5
 6052 0532 03F00F02 		and	r2, r3, #15
 6053 0536 7B68     		ldr	r3, [r7, #4]
 6054 0538 1B68     		ldr	r3, [r3]
 6055 053a 4244     		add	r2, r2, r8
 6056 053c 9A60     		str	r2, [r3, #8]
 6057 053e D0E0     		b	.L239
 6058              	.L241:
3146:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6059              		.loc 1 3146 0
 6060 0540 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6061 0544 B860     		str	r0, [r7, #8]
3147:Firmware/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6062              		.loc 1 3147 0
ARM GAS  /tmp/ccRTMmaY.s 			page 161


 6063 0546 BB68     		ldr	r3, [r7, #8]
 6064 0548 9A46     		mov	r10, r3
 6065 054a 4FF0000B 		mov	fp, #0
 6066 054e D046     		mov	r8, r10
 6067 0550 D946     		mov	r9, fp
 6068 0552 18EB0803 		adds	r3, r8, r8
 6069 0556 49EB0904 		adc	r4, r9, r9
 6070 055a 9846     		mov	r8, r3
 6071 055c A146     		mov	r9, r4
 6072 055e 18EB0A08 		adds	r8, r8, r10
 6073 0562 49EB0B09 		adc	r9, r9, fp
 6074 0566 4FF00001 		mov	r1, #0
 6075 056a 4FF00002 		mov	r2, #0
 6076 056e 4FEAC902 		lsl	r2, r9, #3
 6077 0572 42EA5872 		orr	r2, r2, r8, lsr #29
 6078 0576 4FEAC801 		lsl	r1, r8, #3
 6079 057a 8846     		mov	r8, r1
 6080 057c 9146     		mov	r9, r2
 6081 057e 1AEB0805 		adds	r5, r10, r8
 6082 0582 4BEB0906 		adc	r6, fp, r9
 6083 0586 7B68     		ldr	r3, [r7, #4]
 6084 0588 5B68     		ldr	r3, [r3, #4]
 6085 058a 1946     		mov	r1, r3
 6086 058c 4FF00002 		mov	r2, #0
 6087 0590 4FF00003 		mov	r3, #0
 6088 0594 4FF00004 		mov	r4, #0
 6089 0598 9400     		lsls	r4, r2, #2
 6090 059a 44EA9174 		orr	r4, r4, r1, lsr #30
 6091 059e 8B00     		lsls	r3, r1, #2
 6092 05a0 1A46     		mov	r2, r3
 6093 05a2 2346     		mov	r3, r4
 6094 05a4 2846     		mov	r0, r5
 6095 05a6 3146     		mov	r1, r6
 6096 05a8 FFF7FEFF 		bl	__aeabi_uldivmod
 6097              	.LVL12:
 6098 05ac 0346     		mov	r3, r0
 6099 05ae 0C46     		mov	r4, r1
 6100 05b0 1A46     		mov	r2, r3
 6101 05b2 504B     		ldr	r3, .L245+8
 6102 05b4 A3FB0223 		umull	r2, r3, r3, r2
 6103 05b8 5B09     		lsrs	r3, r3, #5
 6104 05ba 4FEA0318 		lsl	r8, r3, #4
 6105 05be BB68     		ldr	r3, [r7, #8]
 6106 05c0 9B46     		mov	fp, r3
 6107 05c2 4FF0000C 		mov	ip, #0
 6108 05c6 D946     		mov	r9, fp
 6109 05c8 E246     		mov	r10, ip
 6110 05ca 19EB0903 		adds	r3, r9, r9
 6111 05ce 4AEB0A04 		adc	r4, r10, r10
 6112 05d2 9946     		mov	r9, r3
 6113 05d4 A246     		mov	r10, r4
 6114 05d6 19EB0B09 		adds	r9, r9, fp
 6115 05da 4AEB0C0A 		adc	r10, r10, ip
 6116 05de 4FF00001 		mov	r1, #0
 6117 05e2 4FF00002 		mov	r2, #0
 6118 05e6 4FEACA02 		lsl	r2, r10, #3
 6119 05ea 42EA5972 		orr	r2, r2, r9, lsr #29
ARM GAS  /tmp/ccRTMmaY.s 			page 162


 6120 05ee 4FEAC901 		lsl	r1, r9, #3
 6121 05f2 8946     		mov	r9, r1
 6122 05f4 9246     		mov	r10, r2
 6123 05f6 1BEB0905 		adds	r5, fp, r9
 6124 05fa 4CEB0A06 		adc	r6, ip, r10
 6125 05fe 7B68     		ldr	r3, [r7, #4]
 6126 0600 5B68     		ldr	r3, [r3, #4]
 6127 0602 1946     		mov	r1, r3
 6128 0604 4FF00002 		mov	r2, #0
 6129 0608 4FF00003 		mov	r3, #0
 6130 060c 4FF00004 		mov	r4, #0
 6131 0610 9400     		lsls	r4, r2, #2
 6132 0612 44EA9174 		orr	r4, r4, r1, lsr #30
 6133 0616 8B00     		lsls	r3, r1, #2
 6134 0618 1A46     		mov	r2, r3
 6135 061a 2346     		mov	r3, r4
 6136 061c 2846     		mov	r0, r5
 6137 061e 3146     		mov	r1, r6
 6138 0620 FFF7FEFF 		bl	__aeabi_uldivmod
 6139              	.LVL13:
 6140 0624 0346     		mov	r3, r0
 6141 0626 0C46     		mov	r4, r1
 6142 0628 1A46     		mov	r2, r3
 6143 062a 324B     		ldr	r3, .L245+8
 6144 062c A3FB0213 		umull	r1, r3, r3, r2
 6145 0630 5B09     		lsrs	r3, r3, #5
 6146 0632 6421     		movs	r1, #100
 6147 0634 01FB03F3 		mul	r3, r1, r3
 6148 0638 D31A     		subs	r3, r2, r3
 6149 063a 1B01     		lsls	r3, r3, #4
 6150 063c 3233     		adds	r3, r3, #50
 6151 063e 2D4A     		ldr	r2, .L245+8
 6152 0640 A2FB0323 		umull	r2, r3, r2, r3
 6153 0644 5B09     		lsrs	r3, r3, #5
 6154 0646 03F0F003 		and	r3, r3, #240
 6155 064a 9844     		add	r8, r8, r3
 6156 064c BB68     		ldr	r3, [r7, #8]
 6157 064e 9B46     		mov	fp, r3
 6158 0650 4FF0000C 		mov	ip, #0
 6159 0654 D946     		mov	r9, fp
 6160 0656 E246     		mov	r10, ip
 6161 0658 19EB0903 		adds	r3, r9, r9
 6162 065c 4AEB0A04 		adc	r4, r10, r10
 6163 0660 9946     		mov	r9, r3
 6164 0662 A246     		mov	r10, r4
 6165 0664 19EB0B09 		adds	r9, r9, fp
 6166 0668 4AEB0C0A 		adc	r10, r10, ip
 6167 066c 4FF00001 		mov	r1, #0
 6168 0670 4FF00002 		mov	r2, #0
 6169 0674 4FEACA02 		lsl	r2, r10, #3
 6170 0678 42EA5972 		orr	r2, r2, r9, lsr #29
 6171 067c 4FEAC901 		lsl	r1, r9, #3
 6172 0680 8946     		mov	r9, r1
 6173 0682 9246     		mov	r10, r2
 6174 0684 1BEB0905 		adds	r5, fp, r9
 6175 0688 4CEB0A06 		adc	r6, ip, r10
 6176 068c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRTMmaY.s 			page 163


 6177 068e 5B68     		ldr	r3, [r3, #4]
 6178 0690 1946     		mov	r1, r3
 6179 0692 4FF00002 		mov	r2, #0
 6180 0696 4FF00003 		mov	r3, #0
 6181 069a 4FF00004 		mov	r4, #0
 6182 069e 9400     		lsls	r4, r2, #2
 6183 06a0 44EA9174 		orr	r4, r4, r1, lsr #30
 6184 06a4 8B00     		lsls	r3, r1, #2
 6185 06a6 1A46     		mov	r2, r3
 6186 06a8 2346     		mov	r3, r4
 6187 06aa 2846     		mov	r0, r5
 6188 06ac 3146     		mov	r1, r6
 6189 06ae FFF7FEFF 		bl	__aeabi_uldivmod
 6190              	.LVL14:
 6191 06b2 0346     		mov	r3, r0
 6192 06b4 0C46     		mov	r4, r1
 6193 06b6 1A46     		mov	r2, r3
 6194 06b8 0E4B     		ldr	r3, .L245+8
 6195 06ba A3FB0213 		umull	r1, r3, r3, r2
 6196 06be 5B09     		lsrs	r3, r3, #5
 6197 06c0 6421     		movs	r1, #100
 6198 06c2 01FB03F3 		mul	r3, r1, r3
 6199 06c6 D31A     		subs	r3, r2, r3
 6200 06c8 1B01     		lsls	r3, r3, #4
 6201 06ca 3233     		adds	r3, r3, #50
 6202 06cc 094A     		ldr	r2, .L245+8
 6203 06ce A2FB0323 		umull	r2, r3, r2, r3
 6204 06d2 5B09     		lsrs	r3, r3, #5
 6205 06d4 03F00F02 		and	r2, r3, #15
 6206 06d8 7B68     		ldr	r3, [r7, #4]
 6207 06da 1B68     		ldr	r3, [r3]
 6208 06dc 4244     		add	r2, r2, r8
 6209 06de 9A60     		str	r2, [r3, #8]
 6210              		.loc 1 3150 0
 6211 06e0 FFE7     		b	.L242
 6212              	.L239:
 6213              	.L242:
 6214 06e2 00BF     		nop
 6215 06e4 1437     		adds	r7, r7, #20
 6216              	.LCFI297:
 6217              		.cfi_def_cfa_offset 36
 6218 06e6 BD46     		mov	sp, r7
 6219              	.LCFI298:
 6220              		.cfi_def_cfa_register 13
 6221              		@ sp needed
 6222 06e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6223              	.L246:
 6224              		.align	2
 6225              	.L245:
 6226 06ec 00100140 		.word	1073811456
 6227 06f0 00140140 		.word	1073812480
 6228 06f4 1F85EB51 		.word	1374389535
 6229              		.cfi_endproc
 6230              	.LFE184:
 6232              		.text
 6233              	.Letext0:
 6234              		.file 2 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccRTMmaY.s 			page 164


 6235              		.file 3 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/_stdint.h"
 6236              		.file 4 "Firmware/Drivers/CMSIS/Include/core_cm4.h"
 6237              		.file 5 "Firmware/Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 6238              		.file 6 "Firmware/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 6239              		.file 7 "Firmware/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 6240              		.file 8 "Firmware/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 6241              		.file 9 "Firmware/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 6242              		.file 10 "Firmware/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 6243              		.file 11 "Firmware/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccRTMmaY.s 			page 165


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/ccRTMmaY.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccRTMmaY.s:25     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccRTMmaY.s:638    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccRTMmaY.s:5519   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccRTMmaY.s:134    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccRTMmaY.s:141    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccRTMmaY.s:257    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccRTMmaY.s:264    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccRTMmaY.s:398    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccRTMmaY.s:405    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccRTMmaY.s:550    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccRTMmaY.s:557    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccRTMmaY.s:681    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccRTMmaY.s:631    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccRTMmaY.s:674    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccRTMmaY.s:717    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccRTMmaY.s:724    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccRTMmaY.s:4594   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccRTMmaY.s:933    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccRTMmaY.s:940    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccRTMmaY.s:1163   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:1170   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccRTMmaY.s:1280   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:1287   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccRTMmaY.s:1413   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccRTMmaY.s:1420   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccRTMmaY.s:1564   .text.HAL_UART_Transmit_DMA:00000000000000cc $d
     /tmp/ccRTMmaY.s:4231   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccRTMmaY.s:4307   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccRTMmaY.s:4482   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccRTMmaY.s:1571   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccRTMmaY.s:1578   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccRTMmaY.s:1743   .text.HAL_UART_Receive_DMA:00000000000000f4 $d
     /tmp/ccRTMmaY.s:4352   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccRTMmaY.s:4437   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccRTMmaY.s:1750   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccRTMmaY.s:1757   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccRTMmaY.s:1892   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccRTMmaY.s:1899   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccRTMmaY.s:2015   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccRTMmaY.s:2022   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccRTMmaY.s:4707   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccRTMmaY.s:4761   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccRTMmaY.s:2147   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccRTMmaY.s:2154   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccRTMmaY.s:2323   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccRTMmaY.s:2330   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccRTMmaY.s:2430   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccRTMmaY.s:2437   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccRTMmaY.s:2545   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:2552   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccRTMmaY.s:3571   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccRTMmaY.s:2763   .text.HAL_UART_Abort_IT:0000000000000140 $d
     /tmp/ccRTMmaY.s:4876   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccRTMmaY.s:4962   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
ARM GAS  /tmp/ccRTMmaY.s 			page 166


     /tmp/ccRTMmaY.s:2769   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:2776   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccRTMmaY.s:3614   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccRTMmaY.s:2886   .text.HAL_UART_AbortTransmit_IT:000000000000009c $d
     /tmp/ccRTMmaY.s:5048   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccRTMmaY.s:2891   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:2898   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccRTMmaY.s:3657   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccRTMmaY.s:3016   .text.HAL_UART_AbortReceive_IT:00000000000000ac $d
     /tmp/ccRTMmaY.s:5101   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccRTMmaY.s:3021   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccRTMmaY.s:3028   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccRTMmaY.s:5341   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccRTMmaY.s:3528   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccRTMmaY.s:5154   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccRTMmaY.s:5286   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccRTMmaY.s:3344   .text.HAL_UART_IRQHandler:00000000000001fc $d
     /tmp/ccRTMmaY.s:4823   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccRTMmaY.s:3349   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3356   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccRTMmaY.s:3392   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3399   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccRTMmaY.s:3435   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3442   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccRTMmaY.s:3478   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3485   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccRTMmaY.s:3521   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3564   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3607   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3650   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:3693   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccRTMmaY.s:3700   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccRTMmaY.s:3772   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccRTMmaY.s:3779   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccRTMmaY.s:3851   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccRTMmaY.s:3858   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccRTMmaY.s:3930   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccRTMmaY.s:3937   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccRTMmaY.s:4022   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccRTMmaY.s:4029   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccRTMmaY.s:4114   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccRTMmaY.s:4121   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccRTMmaY.s:4179   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccRTMmaY.s:4186   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccRTMmaY.s:4225   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccRTMmaY.s:4301   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccRTMmaY.s:4346   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccRTMmaY.s:4431   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccRTMmaY.s:4476   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccRTMmaY.s:4588   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccRTMmaY.s:4701   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccRTMmaY.s:4755   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccRTMmaY.s:4817   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccRTMmaY.s:4870   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:4956   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:5042   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccRTMmaY.s:5095   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
ARM GAS  /tmp/ccRTMmaY.s 			page 167


     /tmp/ccRTMmaY.s:5148   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:5280   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:5335   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccRTMmaY.s:5513   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccRTMmaY.s:5889   .text.UART_SetConfig:000000000000037c $d
     /tmp/ccRTMmaY.s:5894   .text.UART_SetConfig:0000000000000388 $t
     /tmp/ccRTMmaY.s:6226   .text.UART_SetConfig:00000000000006ec $d
                           .group:0000000000000000 wm4.0.66eb26e6ef234a179f62cd8806fe3c00
                           .group:0000000000000000 wm4.stm32f4xx_hal_conf.h.24.03c00010d617045ebb35c82914a9515b
                           .group:0000000000000000 wm4.stm32f4xx.h.55.60c09cb5ab474e463c44285ed7739f1f
                           .group:0000000000000000 wm4.stm32f446xx.h.51.16a9122ede9860ebbb552c9e423d1ecd
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.f42444deefab66ffa141b9b9fddb57a3
                           .group:0000000000000000 wm4.core_cm4.h.174.059a5e001a9e729091d1407208e93224
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32f446xx.h.934.08868cf5988b286c95ce57658833140b
                           .group:0000000000000000 wm4.stm32f4xx.h.212.729f0f890654645a3f47ccc0cc2b00e7
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.24c1109a8eb6b9f423a3627922c83f30
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32f4xx_hal_def.h.58.2d2c85d5b9693a63e90566b806e8a752
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc_ex.h.22.ed8712e28628f6d35bd6f8847ee2f18f
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc.h.108.0c18a3cfc2dd91bdf92470b4bd0ea1b5
                           .group:0000000000000000 wm4.stm32f4xx_hal_exti.h.22.e3c6ea1ecbc30ac4867071b634937175
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.22.be2c6bcf9722096ea8f49a41bf6aa50c
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio_ex.h.22.6858f59ca8a52c645189c74569e4d5b8
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.264.978ac12eab1d3b3400b35b8c427e2c33
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.22.fffce20ac9119c50557659c75e75ab1c
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.721.a1e57ffbc615f926e6509c5acc65e492
                           .group:0000000000000000 wm4.stm32f4xx_hal_cortex.h.22.e6aa3b847b5388be63c32d1f9e696ef7
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.22.31b301be2655c3eb8583e51c8231544a
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash_ex.h.22.df74a74dd40656a7fcd7d90cedd190b4
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.363.51efdf0f6c88f683efb89d7cc95cc1be
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.22.2c27d93ae187efe3a73816f03a329970
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr_ex.h.22.cf49f655fb514fa1eda6a251fa1b2f1a
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.337.60b43975c84527a23cb6994b23165a5e
                           .group:0000000000000000 wm4.stm32f4xx_hal_tim.h.22.9c16860ec2cc7f3d941608a8f521bc4a
                           .group:0000000000000000 wm4.stm32f4xx_hal_tim_ex.h.22.ab99a7fa30daa00d91e82a48801a7f30
                           .group:0000000000000000 wm4.stm32f4xx_hal_uart.h.22.1edfd0da9670bd23245390d2a3da576d
                           .group:0000000000000000 wm4.stm32f4xx_ll_usb.h.22.9dd425f23cc4ee09cc013b784f1d3b1a
                           .group:0000000000000000 wm4.stm32f4xx_hal_pcd.h.155.99d086aed65c9e0b877f5c367a6472c1
                           .group:0000000000000000 wm4.stm32f4xx_hal.h.72.a5a58188aa461a0614f1e58e159c7840

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/ccRTMmaY.s 			page 168


HAL_RCC_GetPCLK1Freq
