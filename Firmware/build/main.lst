ARM GAS  /tmp/ccaRvq7G.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB134:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** //#include "scr_main.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccaRvq7G.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** UART_HandleTypeDef huart3;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** static void MX_GPIO_Init(void);
  56:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  57:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c ****   
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccaRvq7G.s 			page 3


  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_USART3_UART_Init();
  97:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   //setup();
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Infinite loop */
 104:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 105:Core/Src/main.c ****   while (1)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 108:Core/Src/main.c ****     //loop0();
 109:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c ****   /* USER CODE END 3 */
 112:Core/Src/main.c **** }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief System Clock Configuration
 116:Core/Src/main.c ****   * @retval None
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** void SystemClock_Config(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage 
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 128:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccaRvq7G.s 			page 4


 147:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_CLK48;
 157:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48CLKSOURCE_PLLQ;
 158:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /**
 165:Core/Src/main.c ****   * @brief USART3 Initialization Function
 166:Core/Src/main.c ****   * @param None
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 179:Core/Src/main.c ****   huart3.Instance = USART3;
 180:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 181:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 182:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 183:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 184:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 185:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 186:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 187:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     Error_Handler();
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 199:Core/Src/main.c ****   * @param None
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 203:Core/Src/main.c **** {
ARM GAS  /tmp/ccaRvq7G.s 			page 5


 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 212:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 213:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 214:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 215:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 216:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 217:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 218:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 219:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 220:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 221:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 222:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief GPIO Initialization Function
 234:Core/Src/main.c ****   * @param None
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** static void MX_GPIO_Init(void)
 238:Core/Src/main.c **** {
  27              		.loc 1 238 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8DB0     		sub	sp, sp, #52
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 72
 239:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 239 0
  43 0004 0024     		movs	r4, #0
  44 0006 0794     		str	r4, [sp, #28]
  45 0008 0894     		str	r4, [sp, #32]
  46 000a 0994     		str	r4, [sp, #36]
  47 000c 0A94     		str	r4, [sp, #40]
ARM GAS  /tmp/ccaRvq7G.s 			page 6


  48 000e 0B94     		str	r4, [sp, #44]
  49              	.LBB2:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 242:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 242 0
  51 0010 0194     		str	r4, [sp, #4]
  52 0012 384B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56 001c 1A6B     		ldr	r2, [r3, #48]
  57 001e 02F00402 		and	r2, r2, #4
  58 0022 0192     		str	r2, [sp, #4]
  59 0024 019A     		ldr	r2, [sp, #4]
  60              	.LBE2:
  61              	.LBB3:
 243:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  62              		.loc 1 243 0
  63 0026 0294     		str	r4, [sp, #8]
  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 42F08002 		orr	r2, r2, #128
  66 002e 1A63     		str	r2, [r3, #48]
  67 0030 1A6B     		ldr	r2, [r3, #48]
  68 0032 02F08002 		and	r2, r2, #128
  69 0036 0292     		str	r2, [sp, #8]
  70 0038 029A     		ldr	r2, [sp, #8]
  71              	.LBE3:
  72              	.LBB4:
 244:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  73              		.loc 1 244 0
  74 003a 0394     		str	r4, [sp, #12]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 42F00202 		orr	r2, r2, #2
  77 0042 1A63     		str	r2, [r3, #48]
  78 0044 1A6B     		ldr	r2, [r3, #48]
  79 0046 02F00202 		and	r2, r2, #2
  80 004a 0392     		str	r2, [sp, #12]
  81 004c 039A     		ldr	r2, [sp, #12]
  82              	.LBE4:
  83              	.LBB5:
 245:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  84              		.loc 1 245 0
  85 004e 0494     		str	r4, [sp, #16]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 42F00802 		orr	r2, r2, #8
  88 0056 1A63     		str	r2, [r3, #48]
  89 0058 1A6B     		ldr	r2, [r3, #48]
  90 005a 02F00802 		and	r2, r2, #8
  91 005e 0492     		str	r2, [sp, #16]
  92 0060 049A     		ldr	r2, [sp, #16]
  93              	.LBE5:
  94              	.LBB6:
 246:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  95              		.loc 1 246 0
  96 0062 0594     		str	r4, [sp, #20]
  97 0064 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccaRvq7G.s 			page 7


  98 0066 42F04002 		orr	r2, r2, #64
  99 006a 1A63     		str	r2, [r3, #48]
 100 006c 1A6B     		ldr	r2, [r3, #48]
 101 006e 02F04002 		and	r2, r2, #64
 102 0072 0592     		str	r2, [sp, #20]
 103 0074 059A     		ldr	r2, [sp, #20]
 104              	.LBE6:
 105              	.LBB7:
 247:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 106              		.loc 1 247 0
 107 0076 0694     		str	r4, [sp, #24]
 108 0078 1A6B     		ldr	r2, [r3, #48]
 109 007a 42F00102 		orr	r2, r2, #1
 110 007e 1A63     		str	r2, [r3, #48]
 111 0080 1B6B     		ldr	r3, [r3, #48]
 112 0082 03F00103 		and	r3, r3, #1
 113 0086 0693     		str	r3, [sp, #24]
 114 0088 069B     		ldr	r3, [sp, #24]
 115              	.LBE7:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 250:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 116              		.loc 1 250 0
 117 008a 1B4F     		ldr	r7, .L3+4
 118 008c 2246     		mov	r2, r4
 119 008e 44F28101 		movw	r1, #16513
 120 0092 3846     		mov	r0, r7
 121 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL0:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 253:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 123              		.loc 1 253 0
 124 0098 184D     		ldr	r5, .L3+8
 125 009a 2246     		mov	r2, r4
 126 009c 4021     		movs	r1, #64
 127 009e 2846     		mov	r0, r5
 128 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 129              	.LVL1:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /*Configure GPIO pin : USER_Btn_Pin */
 256:Core/Src/main.c ****   GPIO_InitStruct.Pin = USER_Btn_Pin;
 130              		.loc 1 256 0
 131 00a4 4FF40053 		mov	r3, #8192
 132 00a8 0793     		str	r3, [sp, #28]
 257:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 133              		.loc 1 257 0
 134 00aa 154B     		ldr	r3, .L3+12
 135 00ac 0893     		str	r3, [sp, #32]
 258:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 258 0
 137 00ae 0994     		str	r4, [sp, #36]
 259:Core/Src/main.c ****   HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 138              		.loc 1 259 0
 139 00b0 07A9     		add	r1, sp, #28
 140 00b2 1448     		ldr	r0, .L3+16
 141 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccaRvq7G.s 			page 8


 142              	.LVL2:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
 262:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 143              		.loc 1 262 0
 144 00b8 44F28103 		movw	r3, #16513
 145 00bc 0793     		str	r3, [sp, #28]
 263:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 146              		.loc 1 263 0
 147 00be 0126     		movs	r6, #1
 148 00c0 0896     		str	r6, [sp, #32]
 264:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 264 0
 150 00c2 0994     		str	r4, [sp, #36]
 265:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 151              		.loc 1 265 0
 152 00c4 0A94     		str	r4, [sp, #40]
 266:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 153              		.loc 1 266 0
 154 00c6 07A9     		add	r1, sp, #28
 155 00c8 3846     		mov	r0, r7
 156 00ca FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL3:
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 269:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 158              		.loc 1 269 0
 159 00ce 4023     		movs	r3, #64
 160 00d0 0793     		str	r3, [sp, #28]
 270:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 161              		.loc 1 270 0
 162 00d2 0896     		str	r6, [sp, #32]
 271:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 271 0
 164 00d4 0994     		str	r4, [sp, #36]
 272:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 165              		.loc 1 272 0
 166 00d6 0A94     		str	r4, [sp, #40]
 273:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 167              		.loc 1 273 0
 168 00d8 07A9     		add	r1, sp, #28
 169 00da 2846     		mov	r0, r5
 170 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL4:
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 276:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 172              		.loc 1 276 0
 173 00e0 8023     		movs	r3, #128
 174 00e2 0793     		str	r3, [sp, #28]
 277:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 175              		.loc 1 277 0
 176 00e4 0894     		str	r4, [sp, #32]
 278:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 177              		.loc 1 278 0
 178 00e6 0994     		str	r4, [sp, #36]
 279:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/ccaRvq7G.s 			page 9


 179              		.loc 1 279 0
 180 00e8 07A9     		add	r1, sp, #28
 181 00ea 2846     		mov	r0, r5
 182 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 183              	.LVL5:
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** }
 184              		.loc 1 281 0
 185 00f0 0DB0     		add	sp, sp, #52
 186              	.LCFI2:
 187              		.cfi_def_cfa_offset 20
 188              		@ sp needed
 189 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 190              	.L4:
 191              		.align	2
 192              	.L3:
 193 00f4 00380240 		.word	1073887232
 194 00f8 00040240 		.word	1073873920
 195 00fc 00180240 		.word	1073879040
 196 0100 00001110 		.word	269549568
 197 0104 00080240 		.word	1073874944
 198              		.cfi_endproc
 199              	.LFE134:
 201              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 202              		.align	1
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	MX_USART3_UART_Init:
 209              	.LFB132:
 170:Core/Src/main.c **** 
 210              		.loc 1 170 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 08B5     		push	{r3, lr}
 215              	.LCFI3:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 3, -8
 218              		.cfi_offset 14, -4
 179:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 219              		.loc 1 179 0
 220 0002 0848     		ldr	r0, .L7
 221 0004 084B     		ldr	r3, .L7+4
 222 0006 0360     		str	r3, [r0]
 180:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 223              		.loc 1 180 0
 224 0008 4FF4E133 		mov	r3, #115200
 225 000c 4360     		str	r3, [r0, #4]
 181:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 226              		.loc 1 181 0
 227 000e 0023     		movs	r3, #0
 228 0010 8360     		str	r3, [r0, #8]
 182:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 229              		.loc 1 182 0
 230 0012 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccaRvq7G.s 			page 10


 183:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 231              		.loc 1 183 0
 232 0014 0361     		str	r3, [r0, #16]
 184:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 233              		.loc 1 184 0
 234 0016 0C22     		movs	r2, #12
 235 0018 4261     		str	r2, [r0, #20]
 185:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 236              		.loc 1 185 0
 237 001a 8361     		str	r3, [r0, #24]
 186:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 238              		.loc 1 186 0
 239 001c C361     		str	r3, [r0, #28]
 187:Core/Src/main.c ****   {
 240              		.loc 1 187 0
 241 001e FFF7FEFF 		bl	HAL_UART_Init
 242              	.LVL6:
 195:Core/Src/main.c **** 
 243              		.loc 1 195 0
 244 0022 08BD     		pop	{r3, pc}
 245              	.L8:
 246              		.align	2
 247              	.L7:
 248 0024 00000000 		.word	huart3
 249 0028 00480040 		.word	1073760256
 250              		.cfi_endproc
 251              	.LFE132:
 253              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 254              		.align	1
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	MX_USB_OTG_FS_PCD_Init:
 261              	.LFB133:
 203:Core/Src/main.c **** 
 262              		.loc 1 203 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 08B5     		push	{r3, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
 212:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 271              		.loc 1 212 0
 272 0002 0A48     		ldr	r0, .L11
 273 0004 4FF0A043 		mov	r3, #1342177280
 274 0008 0360     		str	r3, [r0]
 213:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 275              		.loc 1 213 0
 276 000a 0623     		movs	r3, #6
 277 000c 4360     		str	r3, [r0, #4]
 214:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 278              		.loc 1 214 0
 279 000e 0222     		movs	r2, #2
ARM GAS  /tmp/ccaRvq7G.s 			page 11


 280 0010 C260     		str	r2, [r0, #12]
 215:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 281              		.loc 1 215 0
 282 0012 0023     		movs	r3, #0
 283 0014 0361     		str	r3, [r0, #16]
 216:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 284              		.loc 1 216 0
 285 0016 8261     		str	r2, [r0, #24]
 217:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 286              		.loc 1 217 0
 287 0018 0122     		movs	r2, #1
 288 001a C261     		str	r2, [r0, #28]
 218:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 289              		.loc 1 218 0
 290 001c 0362     		str	r3, [r0, #32]
 219:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 291              		.loc 1 219 0
 292 001e 4362     		str	r3, [r0, #36]
 220:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 293              		.loc 1 220 0
 294 0020 C262     		str	r2, [r0, #44]
 221:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 295              		.loc 1 221 0
 296 0022 0363     		str	r3, [r0, #48]
 222:Core/Src/main.c ****   {
 297              		.loc 1 222 0
 298 0024 FFF7FEFF 		bl	HAL_PCD_Init
 299              	.LVL7:
 230:Core/Src/main.c **** 
 300              		.loc 1 230 0
 301 0028 08BD     		pop	{r3, pc}
 302              	.L12:
 303 002a 00BF     		.align	2
 304              	.L11:
 305 002c 00000000 		.word	hpcd_USB_OTG_FS
 306              		.cfi_endproc
 307              	.LFE133:
 309              		.section	.text.SystemClock_Config,"ax",%progbits
 310              		.align	1
 311              		.global	SystemClock_Config
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	SystemClock_Config:
 318              	.LFB131:
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 319              		.loc 1 119 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 176
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 30B5     		push	{r4, r5, lr}
 324              	.LCFI5:
 325              		.cfi_def_cfa_offset 12
 326              		.cfi_offset 4, -12
 327              		.cfi_offset 5, -8
 328              		.cfi_offset 14, -4
ARM GAS  /tmp/ccaRvq7G.s 			page 12


 329 0002 ADB0     		sub	sp, sp, #180
 330              	.LCFI6:
 331              		.cfi_def_cfa_offset 192
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 332              		.loc 1 120 0
 333 0004 3422     		movs	r2, #52
 334 0006 0021     		movs	r1, #0
 335 0008 1FA8     		add	r0, sp, #124
 336 000a FFF7FEFF 		bl	memset
 337              	.LVL8:
 121:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 338              		.loc 1 121 0
 339 000e 0024     		movs	r4, #0
 340 0010 1A94     		str	r4, [sp, #104]
 341 0012 1B94     		str	r4, [sp, #108]
 342 0014 1C94     		str	r4, [sp, #112]
 343 0016 1D94     		str	r4, [sp, #116]
 344 0018 1E94     		str	r4, [sp, #120]
 122:Core/Src/main.c **** 
 345              		.loc 1 122 0
 346 001a 5C22     		movs	r2, #92
 347 001c 2146     		mov	r1, r4
 348 001e 03A8     		add	r0, sp, #12
 349 0020 FFF7FEFF 		bl	memset
 350              	.LVL9:
 351              	.LBB8:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 352              		.loc 1 126 0
 353 0024 0194     		str	r4, [sp, #4]
 354 0026 204B     		ldr	r3, .L15
 355 0028 1A6C     		ldr	r2, [r3, #64]
 356 002a 42F08052 		orr	r2, r2, #268435456
 357 002e 1A64     		str	r2, [r3, #64]
 358 0030 1B6C     		ldr	r3, [r3, #64]
 359 0032 03F08053 		and	r3, r3, #268435456
 360 0036 0193     		str	r3, [sp, #4]
 361 0038 019B     		ldr	r3, [sp, #4]
 362              	.LBE8:
 363              	.LBB9:
 127:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 364              		.loc 1 127 0
 365 003a 0294     		str	r4, [sp, #8]
 366 003c 1B4B     		ldr	r3, .L15+4
 367 003e 1A68     		ldr	r2, [r3]
 368 0040 42F44042 		orr	r2, r2, #49152
 369 0044 1A60     		str	r2, [r3]
 370 0046 1B68     		ldr	r3, [r3]
 371 0048 03F44043 		and	r3, r3, #49152
 372 004c 0293     		str	r3, [sp, #8]
 373 004e 029B     		ldr	r3, [sp, #8]
 374              	.LBE9:
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 375              		.loc 1 130 0
 376 0050 0123     		movs	r3, #1
 377 0052 1F93     		str	r3, [sp, #124]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 378              		.loc 1 131 0
ARM GAS  /tmp/ccaRvq7G.s 			page 13


 379 0054 4FF4A023 		mov	r3, #327680
 380 0058 2093     		str	r3, [sp, #128]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 381              		.loc 1 132 0
 382 005a 0225     		movs	r5, #2
 383 005c 2595     		str	r5, [sp, #148]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 384              		.loc 1 133 0
 385 005e 4FF48003 		mov	r3, #4194304
 386 0062 2693     		str	r3, [sp, #152]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 387              		.loc 1 134 0
 388 0064 0423     		movs	r3, #4
 389 0066 2793     		str	r3, [sp, #156]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 390              		.loc 1 135 0
 391 0068 A823     		movs	r3, #168
 392 006a 2893     		str	r3, [sp, #160]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 393              		.loc 1 136 0
 394 006c 2995     		str	r5, [sp, #164]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 395              		.loc 1 137 0
 396 006e 0723     		movs	r3, #7
 397 0070 2A93     		str	r3, [sp, #168]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 398              		.loc 1 138 0
 399 0072 2B95     		str	r5, [sp, #172]
 139:Core/Src/main.c ****   {
 400              		.loc 1 139 0
 401 0074 1FA8     		add	r0, sp, #124
 402 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 403              	.LVL10:
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 404              		.loc 1 145 0
 405 007a 0F23     		movs	r3, #15
 406 007c 1A93     		str	r3, [sp, #104]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 407              		.loc 1 147 0
 408 007e 1B95     		str	r5, [sp, #108]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 409              		.loc 1 148 0
 410 0080 1C94     		str	r4, [sp, #112]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 411              		.loc 1 149 0
 412 0082 4FF4A053 		mov	r3, #5120
 413 0086 1D93     		str	r3, [sp, #116]
 150:Core/Src/main.c **** 
 414              		.loc 1 150 0
 415 0088 4FF48053 		mov	r3, #4096
 416 008c 1E93     		str	r3, [sp, #120]
 152:Core/Src/main.c ****   {
 417              		.loc 1 152 0
 418 008e 0521     		movs	r1, #5
 419 0090 1AA8     		add	r0, sp, #104
 420 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 421              	.LVL11:
ARM GAS  /tmp/ccaRvq7G.s 			page 14


 156:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48CLKSOURCE_PLLQ;
 422              		.loc 1 156 0
 423 0096 4FF48073 		mov	r3, #256
 424 009a 0393     		str	r3, [sp, #12]
 157:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 425              		.loc 1 157 0
 426 009c 1894     		str	r4, [sp, #96]
 158:Core/Src/main.c ****   {
 427              		.loc 1 158 0
 428 009e 03A8     		add	r0, sp, #12
 429 00a0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 430              	.LVL12:
 162:Core/Src/main.c **** 
 431              		.loc 1 162 0
 432 00a4 2DB0     		add	sp, sp, #180
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 12
 435              		@ sp needed
 436 00a6 30BD     		pop	{r4, r5, pc}
 437              	.L16:
 438              		.align	2
 439              	.L15:
 440 00a8 00380240 		.word	1073887232
 441 00ac 00700040 		.word	1073770496
 442              		.cfi_endproc
 443              	.LFE131:
 445              		.section	.text.main,"ax",%progbits
 446              		.align	1
 447              		.global	main
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu fpv4-sp-d16
 453              	main:
 454              	.LFB130:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 455              		.loc 1 72 0
 456              		.cfi_startproc
 457              		@ Volatile: function does not return.
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
 461              	.LCFI8:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
  81:Core/Src/main.c **** 
 465              		.loc 1 81 0
 466 0002 FFF7FEFF 		bl	HAL_Init
 467              	.LVL13:
  88:Core/Src/main.c **** 
 468              		.loc 1 88 0
 469 0006 FFF7FEFF 		bl	SystemClock_Config
 470              	.LVL14:
  95:Core/Src/main.c ****   MX_USART3_UART_Init();
 471              		.loc 1 95 0
 472 000a FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/ccaRvq7G.s 			page 15


 473              	.LVL15:
  96:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 474              		.loc 1 96 0
 475 000e FFF7FEFF 		bl	MX_USART3_UART_Init
 476              	.LVL16:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 477              		.loc 1 97 0
 478 0012 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 479              	.LVL17:
 480              	.L18:
 481 0016 FEE7     		b	.L18
 482              		.cfi_endproc
 483              	.LFE130:
 485              		.section	.text.Error_Handler,"ax",%progbits
 486              		.align	1
 487              		.global	Error_Handler
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv4-sp-d16
 493              	Error_Handler:
 494              	.LFB135:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /* USER CODE END 4 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** /**
 288:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 289:Core/Src/main.c ****   * @retval None
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c **** void Error_Handler(void)
 292:Core/Src/main.c **** {
 495              		.loc 1 292 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 293:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 294:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 297:Core/Src/main.c **** }
 500              		.loc 1 297 0
 501 0000 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE135:
 505              		.comm	hpcd_USB_OTG_FS,1032,4
 506              		.comm	huart3,64,4
 507              		.text
 508              	.Letext0:
 509              		.file 2 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/machine/_default_types.h"
 510              		.file 3 "/home/zht/stm32tools/arm-gcc/arm-none-eabi/include/sys/_stdint.h"
 511              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 512              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 513              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 514              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
ARM GAS  /tmp/ccaRvq7G.s 			page 16


 515              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 516              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 517              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 518              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 519              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 520              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 521              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 522              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 523              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 524              		.file 17 "<built-in>"
ARM GAS  /tmp/ccaRvq7G.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccaRvq7G.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccaRvq7G.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccaRvq7G.s:193    .text.MX_GPIO_Init:00000000000000f4 $d
     /tmp/ccaRvq7G.s:202    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccaRvq7G.s:208    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccaRvq7G.s:248    .text.MX_USART3_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart3
     /tmp/ccaRvq7G.s:254    .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
     /tmp/ccaRvq7G.s:260    .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
     /tmp/ccaRvq7G.s:305    .text.MX_USB_OTG_FS_PCD_Init:000000000000002c $d
                            *COM*:0000000000000408 hpcd_USB_OTG_FS
     /tmp/ccaRvq7G.s:310    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccaRvq7G.s:317    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccaRvq7G.s:440    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccaRvq7G.s:446    .text.main:0000000000000000 $t
     /tmp/ccaRvq7G.s:453    .text.main:0000000000000000 main
     /tmp/ccaRvq7G.s:486    .text.Error_Handler:0000000000000000 $t
     /tmp/ccaRvq7G.s:493    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_PCD_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
